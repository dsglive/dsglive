webpackJsonp([35],{"1kS7":function(t,e){e.f=Object.getOwnPropertySymbols},"1zB9":function(t,e){var r=function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("v-app",{attrs:{id:"inspire"}},[r("left-side-bar"),t._v(" "),r("app-nav-bar"),t._v(" "),r("v-content",{staticClass:"white",attrs:{transition:"slide-x-transition",fluid:"","pa-0":"","ma-0":""}},[t._t("default")],2)],1)},n=[];t.exports={render:r,staticRenderFns:n}},"2gGM":function(t,e,r){t.exports=function(t){var e={};function r(n){if(e[n])return e[n].exports;var a=e[n]={i:n,l:!1,exports:{}};return t[n].call(a.exports,a,a.exports,r),a.l=!0,a.exports}return r.m=t,r.c=e,r.d=function(t,e,n){r.o(t,e)||Object.defineProperty(t,e,{configurable:!1,enumerable:!0,get:n})},r.n=function(t){var e=t&&t.__esModule?function e(){return t.default}:function e(){return t};return r.d(e,"a",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p="./",r(r.s=0)}({0:function(t,e,r){t.exports=r("lVK7")},OMN4:function(t,e){t.exports=r("mtWM")},lVK7:function(t,e,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var n=r("OMN4"),a=r.n(n);function o(t){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function t(e){return typeof e}:function t(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(t)}function i(t){if(null===t||"object"!==o(t))return t;var e=Array.isArray(t)?[]:{};return Object.keys(t).forEach(function(r){e[r]=i(t[r])}),e}function s(t){return Array.isArray(t)?t:[t]}function l(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function c(){return(c=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var r=arguments[e];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(t[n]=r[n])}return t}).apply(this,arguments)}function u(t){return(u="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function t(e){return typeof e}:function t(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(t)}function f(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function d(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}function v(t,e,r){return e&&d(t.prototype,e),r&&d(t,r),t}var p=function(){function t(){f(this,t),this.errors={}}return v(t,[{key:"set",value:function t(e,r){"object"===u(e)?this.errors=e:this.set(c({},this.errors,l({},e,s(r))))}},{key:"all",value:function t(){return this.errors}},{key:"has",value:function t(e){return this.errors.hasOwnProperty(e)}},{key:"hasAny",value:function t(){for(var e=this,r=arguments.length,n=new Array(r),a=0;a<r;a++)n[a]=arguments[a];return n.some(function(t){return e.has(t)})}},{key:"any",value:function t(){return Object.keys(this.errors).length>0}},{key:"get",value:function t(e){if(this.has(e))return this.getAll(e)[0]}},{key:"getAll",value:function t(e){return s(this.errors[e]||[])}},{key:"only",value:function t(){for(var e=this,r=[],n=arguments.length,a=new Array(n),o=0;o<n;o++)a[o]=arguments[o];return a.forEach(function(t){var n=e.get(t);n&&r.push(n)}),r}},{key:"flatten",value:function t(){return Object.values(this.errors).reduce(function(t,e){return t.concat(e)},[])}},{key:"clear",value:function t(e){var r=this,n={};e&&Object.keys(this.errors).forEach(function(t){t!==e&&(n[t]=r.errors[t])}),this.set(n)}}]),t}();function h(t){return(h="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function t(e){return typeof e}:function t(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(t)}function _(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function m(){return(m=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var r=arguments[e];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(t[n]=r[n])}return t}).apply(this,arguments)}function y(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function b(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}function g(t,e,r){return e&&b(t.prototype,e),r&&b(t,r),t}var k=function(){function t(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};y(this,t),this.busy=!1,this.successful=!1,this.errors=new p,this.originalData=i(e),Object.assign(this,e)}return g(t,[{key:"fill",value:function t(e){var r=this;this.keys().forEach(function(t){r[t]=e[t]})}},{key:"data",value:function t(){var e=this;return this.keys().reduce(function(t,r){return m({},t,_({},r,e[r]))},{})}},{key:"keys",value:function e(){return Object.keys(this).filter(function(e){return!t.ignore.includes(e)})}},{key:"startProcessing",value:function t(){this.errors.clear(),this.busy=!0,this.successful=!1}},{key:"finishProcessing",value:function t(){this.busy=!1,this.successful=!0}},{key:"clear",value:function t(){this.errors.clear(),this.successful=!1}},{key:"reset",value:function e(){var r=this;Object.keys(this).filter(function(e){return!t.ignore.includes(e)}).forEach(function(t){r[t]=i(r.originalData[t])})}},{key:"get",value:function t(e){return this.submit("get",e)}},{key:"post",value:function t(e){return this.submit("post",e)}},{key:"patch",value:function t(e){return this.submit("patch",e)}},{key:"put",value:function t(e){return this.submit("put",e)}},{key:"delete",value:function t(e){return this.submit("delete",e)}},{key:"submit",value:function t(e,r){var n=this,o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};this.startProcessing();var i="get"===e?{params:this.data()}:this.data();return new Promise(function(t,s){a.a.request(m({url:n.route(r),method:e,data:i},o)).then(function(e){n.finishProcessing(),t(e)}).catch(function(t){n.busy=!1,t.response&&n.errors.set(n.extractErrors(t.response)),s(t)})})}},{key:"extractErrors",value:function e(r){return r.data&&"object"===h(r.data)?r.data.errors?m({},r.data.errors):r.data.message?{error:r.data.message}:m({},r.data):{error:t.errorMessage}}},{key:"route",value:function e(r){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},a=r;return t.routes.hasOwnProperty(r)&&(a=decodeURI(t.routes[r])),"object"!==h(n)&&(n={id:n}),Object.keys(n).forEach(function(t){a=a.replace("{".concat(t,"}"),n[t])}),a}},{key:"onKeydown",value:function t(e){e.target.name&&this.errors.clear(e.target.name)}}]),t}();k.routes={},k.errorMessage="Something went wrong. Please try again.",k.ignore=["busy","successful","errors","originalData"];var x=k,w,C,S;function $(t,e,r,n,a,o,i,s){var l=typeof(t=t||{}).default;"object"!==l&&"function"!==l||(t=t.default);var c="function"==typeof t?t.options:t,u;if(e&&(c.render=e,c.staticRenderFns=r,c._compiled=!0),n&&(c.functional=!0),o&&(c._scopeId=o),i?(u=function(t){(t=t||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(t=__VUE_SSR_CONTEXT__),a&&a.call(this,t),t&&t._registeredComponents&&t._registeredComponents.add(i)},c._ssrRegister=u):a&&(u=s?function(){a.call(this,this.$root.$options.shadowRoot)}:a),u)if(c.functional){c._injectStyles=u;var f=c.render;c.render=function t(e,r){return u.call(r),f(e,r)}}else{var d=c.beforeCreate;c.beforeCreate=d?[].concat(d,u):[u]}return{exports:t,options:c}}var O=!1,j=null,A=null,E=null,P,R=$({name:"has-error",props:{form:{type:Object,required:!0},field:{type:String,required:!0}}},function(){var t=this,e=t.$createElement,r=t._self._c||e;return t.form.errors.has(t.field)?r("div",{staticClass:"help-block invalid-feedback",domProps:{innerHTML:t._s(t.form.errors.get(t.field))}}):t._e()},[],!1,null,null,null).exports,M={props:{form:{type:Object,required:!0},dismissible:{type:Boolean,default:!0}},methods:{dismiss:function t(){this.dismissible&&this.form.clear()}}},T,B,F,U=!1,D=null,I=null,V=null,L,N=$({name:"alert-error",extends:M,props:{message:{type:String,default:"There were some problems with your input."}}},function(){var t=this,e=t.$createElement,r=t._self._c||e;return t.form.errors.any()?r("div",{staticClass:"alert alert-danger alert-dismissible",attrs:{role:"alert"}},[t.dismissible?r("button",{staticClass:"close",attrs:{type:"button","aria-label":"Close"},on:{click:t.dismiss}},[r("span",{attrs:{"aria-hidden":"true"}},[t._v("×")])]):t._e(),t._v(" "),t._t("default",[t.form.errors.has("error")?r("div",{domProps:{innerHTML:t._s(t.form.errors.get("error"))}}):r("div",{domProps:{innerHTML:t._s(t.message)}})])],2):t._e()},[],!1,null,null,null).exports,q,W,G,z=!1,H=null,K=null,Z=null,J,X=$({name:"alert-errors",extends:M,props:{message:{type:String,default:"There were some problems with your input."}}},function(){var t=this,e=t.$createElement,r=t._self._c||e;return t.form.errors.any()?r("div",{staticClass:"alert alert-danger alert-dismissible",attrs:{role:"alert"}},[t.dismissible?r("button",{staticClass:"close",attrs:{type:"button","aria-label":"Close"},on:{click:t.dismiss}},[r("span",{attrs:{"aria-hidden":"true"}},[t._v("×")])]):t._e(),t._v(" "),t.message?r("div",{domProps:{innerHTML:t._s(t.message)}}):t._e(),t._v(" "),r("ul",t._l(t.form.errors.flatten(),function(e){return r("li",{domProps:{innerHTML:t._s(e)}})}))]):t._e()},[],!1,null,null,null).exports,Q,Y,tt,et=!1,rt=null,nt=null,at=null,ot,it=$({name:"alert-success",extends:M,props:{message:{type:String,default:""}}},function(){var t=this,e=t.$createElement,r=t._self._c||e;return t.form.successful?r("div",{staticClass:"alert alert-success alert-dismissible",attrs:{role:"alert"}},[t.dismissible?r("button",{staticClass:"close",attrs:{type:"button","aria-label":"Close"},on:{click:t.dismiss}},[r("span",{attrs:{"aria-hidden":"true"}},[t._v("×")])]):t._e(),t._v(" "),t._t("default",[r("div",{domProps:{innerHTML:t._s(t.message)}})])],2):t._e()},[],!1,null,null,null).exports;r.d(e,"Form",function(){return x}),r.d(e,"Errors",function(){return p}),r.d(e,"HasError",function(){return R}),r.d(e,"AlertError",function(){return N}),r.d(e,"AlertErrors",function(){return X}),r.d(e,"AlertSuccess",function(){return it}),r.d(e,"default",function(){return x})}})},"2xzx":function(t,e){var r=function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("v-toolbar",{attrs:{color:"primary",fixed:"",app:""}},[r("v-toolbar-side-icon",{staticClass:"white--text",nativeOn:{click:function(e){e.stopPropagation(),t.toggleDrawer()}}}),t._v(" "),t.extension?r("v-toolbar-title",{staticClass:"text-xs-center ml-0 pl-3",class:t.$vuetify.breakpoint.width<=1264&&"pr-3",style:t.$vuetify.breakpoint.width>1264&&"width: 300px",attrs:{slot:"extension"},slot:"extension"},[t.showIcon?r("v-icon",{staticClass:"ml-3 hidden-md-and-down accent"},[t._v("\n      "+t._s(t.icon)+"\n    ")]):t._e(),t._v(" "),r("span",{staticClass:"hidden-md-and-down"},[r("span",{staticClass:"white--text"},[t._v(t._s(t.title))])])],1):r("v-toolbar-title",{staticClass:"text-xs-center"},[t.showIcon?r("v-icon",{staticClass:"ml-3 hidden-md-and-down accent"},[t._v("\n      "+t._s(t.icon)+"\n    ")]):t._e(),t._v(" "),r("span",{staticClass:"hidden-md-and-down"},[r("span",{staticClass:"white--text"},[t._v(t._s(t.title))])])],1),t._v(" "),r("v-spacer"),t._v(" "),t.showLogo?r("img",{staticClass:"hidden-md-and-up",attrs:{src:t.logo}}):t._e(),t._v(" "),r("v-spacer")],1)},n=[];t.exports={render:r,staticRenderFns:n}},"5t+f":function(t,e,r){var n,a,o,i=!1,s=null,l=null,c=null,u=r("VU/8")(r("EU3A"),r("qd3n"),!1,null,null,null);t.exports=u.exports},"7/uR":function(t,e,r){function n(t){r("AbWS")}var a,o,i,s=!1,l,c,u=null,f=r("VU/8")(r("f+SC"),r("V3I1"),!1,n,"data-v-9d2d5a76",null);t.exports=f.exports},"9qyG":function(t,e,r){(e=t.exports=r("FZ+f")(!1)).push([t.i,".v-list__group__header__append-icon{color:#fff!important}",""])},AbWS:function(t,e,r){var n=r("Qkdk");"string"==typeof n&&(n=[[t.i,n,""]]),n.locals&&(t.exports=n.locals);var a=r("rjj0")("2ab3e8dc",n,!0,{})},Dd8w:function(t,e,r){"use strict";e.__esModule=!0;var n,a=o(r("woOf"));function o(t){return t&&t.__esModule?t:{default:t}}e.default=a.default||function(t){for(var e=1;e<arguments.length;e++){var r=arguments[e];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(t[n]=r[n])}return t}},EU3A:function(t,e,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var n=r("Dd8w"),a=r.n(n),o=r("7/uR"),i=r.n(o),s=r("NYxO"),l=r("PS5i"),c=r.n(l),u=r("deHX"),f=r.n(u),d,v=Object(s.b)("auth").mapState;e.default={components:{VLink:i.a,InventoryLinks:c.a,InvoiceLinks:f.a},data:function t(){return{drawer:!1}},computed:a()({},v({isAuthenticated:"isAuthenticated"})),created:function t(){var e=this;switch(this.$vuetify.breakpoint.name){case"xs":case"sm":return this.drawer=!1;case"md":case"lg":case"xl":return this.drawer=!0}},mounted:function t(){var e=this;Bus.$on("toggleDrawer",function(){e.drawer=!e.drawer})}}},EpMA:function(t,e,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default={data:function t(){return{activeColor:"#4DB6AC",linkColor:"#fffff",items:[{action:"collections_bookmark",title:"Inventories",items:[{title:"All Unknown Report",href:"/reports/all-unknown-report",action:"fa-question-circle",auth:["admin"]},{title:"Unknown Customer",href:"/reports/unknown-customer",action:"supervised_user_circle",auth:["admin","warehouse"]},{title:"Unknown Client",href:"/reports/unknown-client",action:"fa-users",auth:["admin","warehouse","customer"]},{title:"Unknown Shipper",href:"/reports/unknown-shipper",action:"fa-ship",auth:["admin","warehouse"]},{title:"Damaged Report",href:"/reports/damaged",action:"broken_image",auth:["admin","warehouse","customer"]},{title:"Repaired Report",href:"/reports/repaired",action:"build",auth:["admin","warehouse","customer"]},{title:"Undelivered Report",href:"/reports/undelivered",action:"fa-truck",auth:["admin","warehouse","customer"]},{title:"Bin Report",href:"/reports/bin",action:"apps",auth:["admin"]},{title:"Customer Report",href:"/reports/customer",action:"local_library",auth:["admin"]},{title:"Client Report",href:"/reports/clients",action:"perm_contact_calendar",auth:["admin"]}]}]}},methods:{isActive:function t(e){return e.href===this.$route.path},loadview:function t(e){this.$router.push({path:""+e.href})}}}},JRPR:function(t,e,r){var n=r("jTAZ");"string"==typeof n&&(n=[[t.i,n,""]]),n.locals&&(t.exports=n.locals);var a=r("rjj0")("19ca4adb",n,!0,{})},N76W:function(t,e,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var n=r("ockC"),a=r.n(n),o=r("5t+f"),i=r.n(o);e.default={components:{AppNavBar:a.a,LeftSideBar:i.a}}},NpIQ:function(t,e){e.f={}.propertyIsEnumerable},PS5i:function(t,e,r){function n(t){r("oud2")}var a,o,i,s=!1,l,c=null,u=null,f=r("VU/8")(r("EpMA"),r("qkTt"),!1,n,null,null);t.exports=f.exports},Qkdk:function(t,e,r){(e=t.exports=r("FZ+f")(!1)).push([t.i,".styleAvatar[data-v-9d2d5a76]{position:relative;margin-left:-55px}",""])},R4wc:function(t,e,r){var n=r("kM2E");n(n.S+n.F,"Object",{assign:r("To3L")})},To3L:function(t,e,r){"use strict";var n=r("lktj"),a=r("1kS7"),o=r("NpIQ"),i=r("sB3e"),s=r("MU5D"),l=Object.assign;t.exports=!l||r("S82l")(function(){var t={},e={},r=Symbol(),n="abcdefghijklmnopqrst";return t[r]=7,n.split("").forEach(function(t){e[t]=t}),7!=l({},t)[r]||Object.keys(l({},e)).join("")!=n})?function t(e,r){for(var l=i(e),c=arguments.length,u=1,f=a.f,d=o.f;c>u;)for(var v=s(arguments[u++]),p=f?n(v).concat(f(v)):n(v),h=p.length,_=0,m;h>_;)d.call(v,m=p[_++])&&(l[m]=v[m]);return l}:l},UuFJ:function(t,e){var r=function(){var t=this,e=t.$createElement,r=t._self._c||e;return t.$auth.check("admin")?r("v-list",{staticClass:"blue-grey",attrs:{dark:""}},t._l(t.items,function(e){return r("v-list-group",{key:e.title,attrs:{"no-action":"","active-class":"accent--text"},model:{value:e.active,callback:function(r){t.$set(e,"active",r)},expression:"item.active"}},[r("v-list-tile",{attrs:{slot:"activator"},slot:"activator"},[r("v-list-tile-action",[r("v-icon",{attrs:{color:"white"}},[t._v(t._s(e.action))])],1),t._v(" "),r("v-list-tile-content",[r("v-list-tile-title",[t._v(t._s(e.title))])],1)],1),t._v(" "),t._l(e.items,function(e){return r("v-list-tile",{key:e.title,style:{color:t.isActive(e)?t.activeColor:t.linkColor},on:{click:function(r){t.loadview(e)}}},[r("v-list-tile-content",[r("v-list-tile-title",[t._v(t._s(e.title))])],1),t._v(" "),r("v-list-tile-action",[r("v-icon",{attrs:{color:t.isActive(e)?"teal":"white"}},[t._v(t._s(e.action))])],1)],1)})],2)})):t._e()},n=[];t.exports={render:r,staticRenderFns:n}},V3I1:function(t,e){var r=function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("v-list-tile",{class:[{styleAvatar:t.avatarOn}],attrs:{avatar:t.avatarOn},nativeOn:{click:function(e){t.navigate(t.href)}}},[t.iconOn&&!t.avatarOn?r("v-list-tile-action",[r("v-icon",{style:{color:t.isActive?t.activeColor:t.iconColor,cursor:t.href?"pointer":""}},[t._v(t._s(t.icon))])],1):t._e(),t._v(" "),t.iconOn&&t.avatarOn?r("v-list-tile-avatar",[r("img",{attrs:{src:t.avatar,alt:""}})]):t._e(),t._v(" "),r("v-list-tile-content",[r("v-list-tile-title",{style:{color:t.isActive?t.activeColor:t.linkColor}},[r("span",{style:{cursor:t.href?"pointer":""}},[t._v(t._s(t.title))])])],1),t._v(" "),t.iconOn&&t.avatarOn?r("v-list-tile-action",[r("v-icon",{style:{color:t.isActive?t.activeColor:t.iconColor,cursor:t.href?"pointer":""}},[t._v(t._s(t.icon))])],1):t._e()],1)},n=[];t.exports={render:r,staticRenderFns:n}},V3tA:function(t,e,r){r("R4wc"),t.exports=r("FeBl").Object.assign},VA5K:function(t,e,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default={data:function t(){return{activeColor:"#4DB6AC",linkColor:"#fffff",items:[{action:"card_membership",title:"Invoices",items:[{title:"Generate Invoice",href:"/invoices/generate",action:"schedule"},{title:"Invoices",href:"/invoices",action:"all_inbox"},{title:"Weekly Report",href:"/reports/total-all-customer-invoice",action:"picture_as_pdf"},{title:"Customer Invoice Report",href:"/reports/customer-invoice-report",action:"perm_contact_calendar"},{title:"Client Invoice Report",href:"/reports/client-invoice-report",action:"perm_identity"}]}]}},methods:{isActive:function t(e){return e.href===this.$route.path},loadview:function t(e){this.$router.push({path:""+e.href})}}}},deHX:function(t,e,r){function n(t){r("juyK")}var a,o,i,s=!1,l,c=null,u=null,f=r("VU/8")(r("VA5K"),r("UuFJ"),!1,n,null,null);t.exports=f.exports},"f+SC":function(t,e,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default={props:{dark:{type:Boolean,default:function t(){return!1}},href:{type:String,required:!0},title:{type:String,required:!0},avatar:{type:String,default:function t(){return""}},icon:{type:String,default:function t(){return""}},iconColor:{type:String,default:function t(){return this.dark?"#fafafa":"#78909C"}},linkColor:{type:String,default:function t(){return this.dark?"#fafafa":"#e3b500"}},activeColor:{type:String,default:function t(){return"#f5c300"}}},computed:{isActive:function t(){return this.href===this.$route.path},isDark:function t(){return!0===this.dark},avatarOn:function t(){return!!this.avatar},iconOn:function t(){return!!this.icon}},methods:{navigate:function t(e){var r=this;this.isURL(e)?window.open(e):this.$router.push({path:""+e})},isURL:function t(e){var r,n=new RegExp("^(?!mailto:)(?:(?:http|https|ftp)://)(?:\\S+(?::\\S*)?@)?(?:(?:(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[0-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]+-?)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]+-?)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))|localhost)(?::\\d{2,5})?(?:(/|\\?|#)[^\\s]*)?$","i");return e.length<2083&&n.test(e)}}}},g4we:function(t,e,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default={data:function t(){return{extension:!1,showLogo:!1,logo:"/img/logo.png",showIcon:!1,title:"DSG Live"}},created:function t(){var e=this;Bus.$on("header-extension-visible",function(t){e.extension=t})},methods:{toggleDrawer:function t(){Bus.$emit("toggleDrawer")}}}},gvVL:function(t,e,r){"use strict";e.a={methods:{errorMessages:function t(e){return this.errors.collect(e).concat(this.form.errors.only(e))},hasErrors:function t(e){var r;return this.errors.collect(e).concat(this.form.errors.only(e)).length>0}}}},iMcO:function(t,e,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var n=r("Xxa5"),a=r.n(n),o=r("exGp"),i=r.n(o),s=r("onlB"),l=r.n(s),c=r("gvVL"),u=r("2gGM"),f=r.n(u),d=r("e7x4"),v=r.n(d);e.default={components:{MainLayout:l.a},mixins:[c.a],data:function t(){return{contentClass:{grey:!0,"lighten-4":!0,"accent--text":!0},dialog:!1,headers:[{text:"Customer",value:"customer_name",align:"left",sortable:!0},{text:"Receiving",value:"receiving_fee",align:"left",sortable:!0},{text:"Storage",value:"storage_fee",align:"left",sortable:!0},{text:"Delivery",value:"delivery_fee",align:"left",sortable:!0},{text:"Misc",value:"misc_fee",align:"left",sortable:!0},{text:"Total",value:"total",align:"left",sortable:!0}],items:[],pagination:{sortBy:"name",rowPerPage:"all"},search:"",form:new u.Form({date_started:"",date_ended:""}),date_started_modal:"",date_ended_modal:"",domain:window.location.hostname}},watch:{items:{handler:function t(e){},deep:!0}},methods:{viewPDF:function t(){var e=window.location.protocol+"//"+this.domain+"/pdf/total-all-customer-invoice?date_started="+this.form.date_started+"&date_ended="+this.form.date_ended,r;window.open(e,"_blank").focus()},generateWeeklyReport:function(){var t=i()(a.a.mark(function t(){var e,r,n,o,i,s;return a.a.wrap(function t(a){for(;;)switch(a.prev=a.next){case 0:return(e=this).form.busy=!0,a.prev=2,a.next=5,axios.post(route("api.report.total-all-customer-invoice"),e.form);case 5:r=a.sent,n=r.data.customers,e.items=n,o="All Customer Invoice Report Generated!",e.items.length<1&&(o="No Invoice For that Billing Cycle."),(i=v.a.mixin({confirmButtonClass:"v-btn blue-grey  subheading white--text",buttonsStyling:!1}))({title:"Success!",html:'<p class="title">'+o+"</p>",type:"success",confirmButtonText:"Back"}),a.next=18;break;case 14:a.prev=14,a.t0=a.catch(2),(s=v.a.mixin({confirmButtonClass:"v-btn blue-grey  subheading white--text",buttonsStyling:!1}))({title:"Validation Error!",html:'<p class="title">Please Pick a Date Started and Date Ended!</p>',type:"warning",confirmButtonText:"Back"});case 18:case"end":return a.stop()}},t,this,[[2,14]])}));function e(){return t.apply(this,arguments)}return e}(),changeSort:function t(e){this.pagination.sortBy===e?this.pagination.descending=!this.pagination.descending:(this.pagination.sortBy=e,this.pagination.descending=!1)}}}},jTAZ:function(t,e,r){(e=t.exports=r("FZ+f")(!1)).push([t.i,"",""])},juyK:function(t,e,r){var n=r("r8er");"string"==typeof n&&(n=[[t.i,n,""]]),n.locals&&(t.exports=n.locals);var a=r("rjj0")("7fe0f36b",n,!0,{})},ockC:function(t,e,r){function n(t){r("JRPR")}var a,o,i,s=!1,l,c=null,u=null,f=r("VU/8")(r("g4we"),r("2xzx"),!1,n,null,null);t.exports=f.exports},onlB:function(t,e,r){var n,a,o,i=!1,s=null,l=null,c=null,u=r("VU/8")(r("N76W"),r("1zB9"),!1,null,null,null);t.exports=u.exports},oud2:function(t,e,r){var n=r("9qyG");"string"==typeof n&&(n=[[t.i,n,""]]),n.locals&&(t.exports=n.locals);var a=r("rjj0")("ad00c2fe",n,!0,{})},qd3n:function(t,e){var r=function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("v-navigation-drawer",{staticClass:"blue-grey",attrs:{clipped:t.$vuetify.breakpoint.width<=1264&&!0,fixed:"","hide-overlay":"",app:""},model:{value:t.drawer,callback:function(e){t.drawer=e},expression:"drawer"}},[r("v-list",{staticClass:"blue-grey",attrs:{dense:""}},[t.$auth.check("admin")?r("v-subheader",{staticClass:"white--text"},[t._v("Admin Area")]):t._e(),t._v(" "),t.$auth.check("warehouse")?r("v-subheader",{staticClass:"white--text"},[t._v("Warehouse Area")]):t._e(),t._v(" "),t.$auth.check("customer")?r("v-subheader",{staticClass:"white--text"},[t._v("Customer Area")]):t._e(),t._v(" "),t.$auth.check(["admin","customer","warehouse"])?r("v-link",{attrs:{title:"Dashboard",href:"/dashboard",icon:"fa-tachometer","link-color":"white","active-color":"#4db6ac","icon-color":"#fafafa"}}):t._e(),t._v(" "),t.$auth.check(["admin"])?r("v-link",{attrs:{title:"Tutorials",href:"/tutorials",icon:"movie","link-color":"white","active-color":"#4db6ac","icon-color":"#fafafa"}}):t._e(),t._v(" "),t.$auth.check("admin")?r("v-link",{attrs:{title:"Users",href:"/users",icon:"supervised_user_circle","link-color":"white","active-color":"#4db6ac","icon-color":"#fafafa"}}):t._e(),t._v(" "),t.$auth.check("admin")?r("v-link",{attrs:{title:"Shippers",href:"/shippers",icon:"fa-ship","link-color":"white","active-color":"#4db6ac","icon-color":"#fafafa"}}):t._e(),t._v(" "),t.$auth.check("admin")?r("v-link",{attrs:{title:"Rates",href:"/rates",icon:"attach_money","link-color":"white","active-color":"#4db6ac","icon-color":"#fafafa"}}):t._e(),t._v(" "),t.$auth.check("admin")?r("v-link",{attrs:{title:"Bins",href:"/bins",icon:"view_module","link-color":"white","active-color":"#4db6ac","icon-color":"#fafafa"}}):t._e(),t._v(" "),t.$auth.check(["warehouse","admin"])?r("v-link",{attrs:{title:"Warehouse",href:"/warehouse",icon:"location_city","link-color":"white","active-color":"#4db6ac","icon-color":"#fafafa"}}):t._e(),t._v(" "),t.$auth.check(["admin","warehouse"])?r("v-link",{attrs:{title:"Receiving",href:"/receiving",icon:"receipt","link-color":"white","active-color":"#4db6ac","icon-color":"#fafafa"}}):t._e(),t._v(" "),t.$auth.check(["admin","warehouse"])?r("v-link",{attrs:{title:"Archived",href:"/archived/dsg",icon:"archive","link-color":"white","active-color":"#4db6ac","icon-color":"#fafafa"}}):t._e(),t._v(" "),r("inventory-links"),t._v(" "),t.$auth.check("admin")?r("v-link",{attrs:{title:"Tickets",href:"/tickets",icon:"confirmation_number","link-color":"white","active-color":"#4db6ac","icon-color":"#fafafa"}}):t._e(),t._v(" "),t.$auth.check("admin")?r("v-link",{attrs:{title:"Miscellaneous",href:"/miscellaneous",icon:"note_add","link-color":"white","active-color":"#4db6ac","icon-color":"#fafafa"}}):t._e(),t._v(" "),t.$auth.check("admin")?r("v-link",{attrs:{title:"Payments",href:"/payments",icon:"attach_money","link-color":"white","active-color":"#4db6ac","icon-color":"#fafafa"}}):t._e(),t._v(" "),r("invoice-links"),t._v(" "),t.$auth.check(["customer"])?r("v-link",{attrs:{title:"Clients",href:"/clients",icon:"business_center","link-color":"white","active-color":"#4db6ac","icon-color":"#fafafa"}}):t._e(),t._v(" "),t.$auth.check(["customer"])?r("v-link",{attrs:{title:"Invoices",href:"/invoices",icon:"all_inbox","link-color":"white","active-color":"#4db6ac","icon-color":"#fafafa"}}):t._e(),t._v(" "),t.$auth.check()?r("v-link",{attrs:{title:"Settings",href:"/settings",icon:"fa-cogs","link-color":"white","active-color":"#4db6ac","icon-color":"#fafafa"}}):t._e(),t._v(" "),t.$auth.check()?r("v-link",{attrs:{title:"Logout",href:"/logout",icon:"power_settings_new","link-color":"white","active-color":"#4db6ac","icon-color":"#fafafa"}}):t._e()],1)],1)},n=[];t.exports={render:r,staticRenderFns:n}},qkTt:function(t,e){var r=function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("v-list",{staticClass:"blue-grey",attrs:{dark:""}},t._l(t.items,function(e){return r("v-list-group",{key:e.title,attrs:{"no-action":"","active-class":"accent--text"},model:{value:e.active,callback:function(r){t.$set(e,"active",r)},expression:"item.active"}},[r("v-list-tile",{attrs:{slot:"activator"},slot:"activator"},[r("v-list-tile-action",[r("v-icon",{attrs:{color:"white"}},[t._v(t._s(e.action))])],1),t._v(" "),r("v-list-tile-content",[r("v-list-tile-title",[t._v(t._s(e.title))])],1)],1),t._v(" "),t._l(e.items,function(e){return t.$auth.check(e.auth)?r("v-list-tile",{key:e.title,style:{color:t.isActive(e)?t.activeColor:t.linkColor},on:{click:function(r){t.loadview(e)}}},[r("v-list-tile-content",[r("v-list-tile-title",[t._v(t._s(e.title))])],1),t._v(" "),r("v-list-tile-action",[r("v-icon",{attrs:{color:t.isActive(e)?"teal":"white"}},[t._v(t._s(e.action))])],1)],1):t._e()})],2)}))},n=[];t.exports={render:r,staticRenderFns:n}},r8er:function(t,e,r){(e=t.exports=r("FZ+f")(!1)).push([t.i,".v-list__group__header__append-icon{color:#fff!important}",""])},rjj0:function(t,e,r){var n="undefined"!=typeof document;if("undefined"!=typeof DEBUG&&DEBUG&&!n)throw new Error("vue-style-loader cannot be used in a non-browser environment. Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.");var a=r("tTVk"),o={},i=n&&(document.head||document.getElementsByTagName("head")[0]),s=null,l=0,c=!1,u=function(){},f=null,d="data-vue-ssr-id",v="undefined"!=typeof navigator&&/msie [6-9]\b/.test(navigator.userAgent.toLowerCase());function p(t){for(var e=0;e<t.length;e++){var r=t[e],n=o[r.id];if(n){n.refs++;for(var a=0;a<n.parts.length;a++)n.parts[a](r.parts[a]);for(;a<r.parts.length;a++)n.parts.push(_(r.parts[a]));n.parts.length>r.parts.length&&(n.parts.length=r.parts.length)}else{for(var i=[],a=0;a<r.parts.length;a++)i.push(_(r.parts[a]));o[r.id]={id:r.id,refs:1,parts:i}}}}function h(){var t=document.createElement("style");return t.type="text/css",i.appendChild(t),t}function _(t){var e,r,n=document.querySelector("style["+d+'~="'+t.id+'"]');if(n){if(c)return u;n.parentNode.removeChild(n)}if(v){var a=l++;n=s||(s=h()),e=b.bind(null,n,a,!1),r=b.bind(null,n,a,!0)}else n=h(),e=g.bind(null,n),r=function(){n.parentNode.removeChild(n)};return e(t),function n(a){if(a){if(a.css===t.css&&a.media===t.media&&a.sourceMap===t.sourceMap)return;e(t=a)}else r()}}t.exports=function(t,e,r,n){c=r,f=n||{};var i=a(t,e);return p(i),function e(r){for(var n=[],s=0;s<i.length;s++){var l=i[s],c;(c=o[l.id]).refs--,n.push(c)}r?p(i=a(t,r)):i=[];for(var s=0;s<n.length;s++){var c;if(0===(c=n[s]).refs){for(var u=0;u<c.parts.length;u++)c.parts[u]();delete o[c.id]}}}};var m=(y=[],function(t,e){return y[t]=e,y.filter(Boolean).join("\n")}),y;function b(t,e,r,n){var a=r?"":n.css;if(t.styleSheet)t.styleSheet.cssText=m(e,a);else{var o=document.createTextNode(a),i=t.childNodes;i[e]&&t.removeChild(i[e]),i.length?t.insertBefore(o,i[e]):t.appendChild(o)}}function g(t,e){var r=e.css,n=e.media,a=e.sourceMap;if(n&&t.setAttribute("media",n),f.ssrId&&t.setAttribute(d,e.id),a&&(r+="\n/*# sourceURL="+a.sources[0]+" */",r+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(a))))+" */"),t.styleSheet)t.styleSheet.cssText=r;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(r))}}},tTVk:function(t,e){t.exports=function t(e,r){for(var n=[],a={},o=0;o<r.length;o++){var i=r[o],s=i[0],l,c,u,f={id:e+":"+o,css:i[1],media:i[2],sourceMap:i[3]};a[s]?a[s].parts.push(f):n.push(a[s]={id:s,parts:[f]})}return n}},woOf:function(t,e,r){t.exports={default:r("V3tA"),__esModule:!0}},xFqY:function(t,e){var r=function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("main-layout",[r("v-container",{attrs:{fluid:""}},[r("v-layout",{attrs:{row:"",wrap:""}},[r("v-flex",{attrs:{xs4:""}},[r("v-dialog",{ref:"date_started",attrs:{"return-value":t.form.date_started,persistent:"",lazy:"","full-width":"",width:"290px"},on:{"update:returnValue":function(e){t.$set(t.form,"date_started",e)}},model:{value:t.date_started_modal,callback:function(e){t.date_started_modal=e},expression:"date_started_modal"}},[r("v-text-field",{staticStyle:{"margin-top":"26px"},attrs:{slot:"activator",label:"Date Started","prepend-icon":"event_available",readonly:""},slot:"activator",model:{value:t.form.date_started,callback:function(e){t.$set(t.form,"date_started",e)},expression:"form.date_started"}}),t._v(" "),r("v-date-picker",{attrs:{scrollable:""},model:{value:t.form.date_started,callback:function(e){t.$set(t.form,"date_started",e)},expression:"form.date_started"}},[r("v-spacer"),t._v(" "),r("v-btn",{attrs:{flat:"",color:"primary"},on:{click:function(e){t.date_started_modal=!1}}},[t._v("Cancel")]),t._v(" "),r("v-btn",{attrs:{flat:"",color:"primary"},on:{click:function(e){t.$refs.date_started.save(t.form.date_started)}}},[t._v("OK")])],1)],1)],1),t._v(" "),r("v-flex",{attrs:{xs4:""}},[r("v-dialog",{ref:"date_ended",attrs:{"return-value":t.form.date_ended,persistent:"",lazy:"","full-width":"",width:"290px"},on:{"update:returnValue":function(e){t.$set(t.form,"date_ended",e)}},model:{value:t.date_ended_modal,callback:function(e){t.date_ended_modal=e},expression:"date_ended_modal"}},[r("v-text-field",{staticStyle:{"margin-top":"26px"},attrs:{slot:"activator",label:"Date Ended","prepend-icon":"event_available",readonly:""},slot:"activator",model:{value:t.form.date_ended,callback:function(e){t.$set(t.form,"date_ended",e)},expression:"form.date_ended"}}),t._v(" "),r("v-date-picker",{attrs:{scrollable:""},model:{value:t.form.date_ended,callback:function(e){t.$set(t.form,"date_ended",e)},expression:"form.date_ended"}},[r("v-spacer"),t._v(" "),r("v-btn",{attrs:{flat:"",color:"primary"},on:{click:function(e){t.date_ended_modal=!1}}},[t._v("Cancel")]),t._v(" "),r("v-btn",{attrs:{flat:"",color:"primary"},on:{click:function(e){t.$refs.date_ended.save(t.form.date_ended)}}},[t._v("OK")])],1)],1)],1),t._v(" "),t.items.length<1?r("v-flex",{attrs:{xs4:""}},[r("v-btn",{staticStyle:{"margin-top":"25px"},attrs:{disabled:null===t.form.date_started&&null===t.form.date_ended,block:"",color:"blue darken-4",dark:"",flat:""},on:{click:t.generateWeeklyReport}},[t._v("\n          Generate Customer Weekly Invoice\n          "),r("v-icon",{attrs:{right:"",color:"blue darken-4"}},[t._v("\n            assessment\n          ")])],1)],1):t._e(),t._v(" "),r("v-flex",{attrs:{"d-flex":"",xs12:""}},[r("v-layout",{attrs:{row:"",wrap:""}},[r("v-flex",{attrs:{xs12:""}},[r("v-card",{attrs:{light:"",flat:""}},[r("v-card-title",[r("v-text-field",{attrs:{"append-icon":"search",label:"Search Customers","single-line":"","hide-details":"",light:""},model:{value:t.search,callback:function(e){t.search=e},expression:"search"}})],1)],1)],1),t._v(" "),r("v-flex",{attrs:{xs12:""}},[t.items.length>0?r("v-btn",{staticStyle:{"margin-top":"25px"},attrs:{block:"",color:"indigo darken-2",dark:"",flat:""},on:{click:t.viewPDF}},[t._v("\n              View All Customer Invoice PDF\n              "),r("v-icon",{attrs:{right:"",color:"blue darken-4"}},[t._v("\n                picture_as_pdf\n              ")])],1):t._e()],1)],1)],1)],1),t._v(" "),r("v-data-table",{attrs:{headers:t.headers,items:t.items,search:t.search,pagination:t.pagination,"item-key":"customer_name","hide-actions":""},on:{"update:pagination":function(e){t.pagination=e}},scopedSlots:t._u([{key:"headers",fn:function(e){return[r("tr",t._l(e.headers,function(e){return r("th",{key:e.text,class:["column sortable",t.pagination.descending?"desc":"asc",e.value===t.pagination.sortBy?"name":"",{"text-xs-left":"left"===e.align,"text-xs-right":"right"===e.align,"text-xs-center":"center"===e.align},t.$vuetify.breakpoint.width>=600&&"title"],on:{click:function(r){t.changeSort(e.value)}}},[r("span",[r("v-icon",[t._v("arrow_upward")]),t._v("\n              "+t._s(e.text)+"\n            ")],1)])}))]}},{key:"items",fn:function(e){return[r("tr",[r("td",{staticClass:"title text-xs-left accent--text"},[t._v("\n            "+t._s(e.item.customer_name)+"\n          ")]),t._v(" "),r("td",{staticClass:"title text-xs-left accent--text"},[e.item.receiving_fee?r("span",[t._v("$"+t._s(e.item.receiving_fee.toFixed(2)))]):r("span",[t._v("$0.00")])]),t._v(" "),r("td",{staticClass:"title text-xs-left accent--text"},[e.item.storage_fee?r("span",[t._v("$"+t._s(e.item.storage_fee.toFixed(2)))]):r("span",[t._v("$0.00")])]),t._v(" "),r("td",{staticClass:"title text-xs-left accent--text"},[e.item.delivery_fee?r("span",[t._v("$"+t._s(e.item.delivery_fee.toFixed(2)))]):r("span",[t._v("$0.00")])]),t._v(" "),r("td",{staticClass:"title text-xs-left accent--text"},[e.item.misc_fee?r("span",[t._v("$"+t._s(e.item.misc_fee.toFixed(2)))]):r("span",[t._v("$0.00")])]),t._v(" "),r("td",{staticClass:"title text-xs-left accent--text"},[e.item.total?r("span",[t._v("$"+t._s(e.item.total.toFixed(2)))]):r("span",[t._v("$0.00")])])])]}},{key:"pageText",fn:function(e){var r=e.pageStart,n=e.pageStop;return[t._v("\n        From "+t._s(r)+" to "+t._s(n)+"\n      ")]}}])},[r("template",{slot:"no-data"},[r("v-alert",{attrs:{value:!0,color:"blue-grey",icon:"warning"}},[t._v("\n          Pick Date Started and Date Ended To\n          "),r("v-btn",{attrs:{disabled:!t.$auth.check("admin"),color:"white",flat:"",dark:""},on:{click:t.generateWeeklyReport}},[t._v("\n            Generate Customer Weekly Invoice\n            "),r("v-icon",{attrs:{right:""}},[t._v("\n              picture_as_pdf\n            ")])],1)],1)],1),t._v(" "),r("v-alert",{attrs:{slot:"no-results",value:!0,color:"blue-grey",icon:"warning"},slot:"no-results"},[t._v('\n        Your search for "'+t._s(t.search)+'" found no results.\n      ')])],2)],1)],1)},n=[];t.exports={render:r,staticRenderFns:n}},xoZP:function(t,e,r){var n,a,o,i=!1,s=null,l=null,c=null,u=r("VU/8")(r("iMcO"),r("xFqY"),!1,null,null,null);t.exports=u.exports}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,