webpackJsonp([61],{"2yrZ":function(e,t,s){function n(e){s("pwLK")}var a,r=null,i,l=!1,o,c=null,u=null,d=s("VU/8")(null,s("dgbI"),!1,n,null,null);e.exports=d.exports},ACdS:function(e,t,s){var n,a,r,i=!1,l=null,o=null,c=null,u=s("VU/8")(s("spdy"),s("vFbK"),!1,null,null,null);e.exports=u.exports},dgbI:function(e,t){var s=function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("v-app",{attrs:{standalone:""}},[s("v-content",{staticClass:"white"},[s("v-container",{staticClass:"pa-0 ma-0",attrs:{transition:"slide-x-transition",fluid:""}},[s("v-card",{attrs:{flat:!0}},[e._t("toolbar"),e._v(" "),e._t("default")],2)],1),e._v(" "),e._t("footer")],2)],1)},n=[];e.exports={render:s,staticRenderFns:n}},pwLK:function(e,t,s){var n=s("zr7H");"string"==typeof n&&(n=[[e.i,n,""]]),n.locals&&(e.exports=n.locals);var a=s("rjj0")("57bf4ea8",n,!0,{})},rjj0:function(e,t,s){var n="undefined"!=typeof document;if("undefined"!=typeof DEBUG&&DEBUG&&!n)throw new Error("vue-style-loader cannot be used in a non-browser environment. Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.");var a=s("tTVk"),r={},i=n&&(document.head||document.getElementsByTagName("head")[0]),l=null,o=0,c=!1,u=function(){},d=null,f="data-vue-ssr-id",v="undefined"!=typeof navigator&&/msie [6-9]\b/.test(navigator.userAgent.toLowerCase());function p(e){for(var t=0;t<e.length;t++){var s=e[t],n=r[s.id];if(n){n.refs++;for(var a=0;a<n.parts.length;a++)n.parts[a](s.parts[a]);for(;a<s.parts.length;a++)n.parts.push(m(s.parts[a]));n.parts.length>s.parts.length&&(n.parts.length=s.parts.length)}else{for(var i=[],a=0;a<s.parts.length;a++)i.push(m(s.parts[a]));r[s.id]={id:s.id,refs:1,parts:i}}}}function _(){var e=document.createElement("style");return e.type="text/css",i.appendChild(e),e}function m(e){var t,s,n=document.querySelector("style["+f+'~="'+e.id+'"]');if(n){if(c)return u;n.parentNode.removeChild(n)}if(v){var a=o++;n=l||(l=_()),t=h.bind(null,n,a,!1),s=h.bind(null,n,a,!0)}else n=_(),t=y.bind(null,n),s=function(){n.parentNode.removeChild(n)};return t(e),function n(a){if(a){if(a.css===e.css&&a.media===e.media&&a.sourceMap===e.sourceMap)return;t(e=a)}else s()}}e.exports=function(e,t,s,n){c=s,d=n||{};var i=a(e,t);return p(i),function t(s){for(var n=[],l=0;l<i.length;l++){var o=i[l],c;(c=r[o.id]).refs--,n.push(c)}s?p(i=a(e,s)):i=[];for(var l=0;l<n.length;l++){var c;if(0===(c=n[l]).refs){for(var u=0;u<c.parts.length;u++)c.parts[u]();delete r[c.id]}}}};var g=(x=[],function(e,t){return x[e]=t,x.filter(Boolean).join("\n")}),x;function h(e,t,s,n){var a=s?"":n.css;if(e.styleSheet)e.styleSheet.cssText=g(t,a);else{var r=document.createTextNode(a),i=e.childNodes;i[t]&&e.removeChild(i[t]),i.length?e.insertBefore(r,i[t]):e.appendChild(r)}}function y(e,t){var s=t.css,n=t.media,a=t.sourceMap;if(n&&e.setAttribute("media",n),d.ssrId&&e.setAttribute(f,t.id),a&&(s+="\n/*# sourceURL="+a.sources[0]+" */",s+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(a))))+" */"),e.styleSheet)e.styleSheet.cssText=s;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(s))}}},spdy:function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=s("2yrZ"),a=s.n(n),r=s("e7x4"),i=s.n(r);t.default={components:{ModalLayout:a.a},props:{id:{type:String,required:!0}},data:function e(){return{customer:{customer_id:null,receiving_fee:0,delivery_fee:0,storage_fee:0,misc_fee:0},clients:[],headers:[{text:"Client Name",value:"client_name[0]",align:"left",sortable:!0},{text:"Receiving Fee",value:"receiving_fee",align:"left",sortable:!0},{text:"Delivery Fee",value:"delivery_fee",align:"left",sortable:!0},{text:"Storage Fee",value:"storage_fee",align:"left",sortable:!0},{text:"Misc Fee",value:"misc_fee",align:"left",sortable:!0},{text:"Total",value:"total",align:"left",sortable:!0}],items:[],selected:[],pagination:{sortBy:"name"},search:""}},watch:{clients:{handler:function e(t){},deep:!0},customer:{handler:function e(t){},deep:!1}},created:function e(){this.fetchInvoice()},methods:{redirectBack:function e(){var t=this;t.$nextTick(function(){return t.$router.push({name:"invoices"})})},fetchInvoice:function e(){var t=this.id,s=this;axios.get(route("api.invoice.view",{id:t})).then(function(e){var t=e.data;s.clients=t.clients,s.customer=t.customer,s.items=t.clients,s.items.forEach(function(e){console.log("element",e),e.receiving_fee=_.sum(e.receiving_fee),e.delivery_fee=_.sum(e.delivery_fee),e.misc_fee=_.sum(e.misc_fee),e.storage_fee=_.sum(e.storage_fee),e.total=e.receiving_fee+e.delivery_fee+e.misc_fee+e.storage_fee})})}}}},tTVk:function(e,t){e.exports=function e(t,s){for(var n=[],a={},r=0;r<s.length;r++){var i=s[r],l=i[0],o,c,u,d={id:t+":"+r,css:i[1],media:i[2],sourceMap:i[3]};a[l]?a[l].parts.push(d):n.push(a[l]={id:l,parts:[d]})}return n}},vFbK:function(e,t){var s=function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("modal-layout",{staticClass:"white"},[s("v-toolbar",{staticClass:"primary",attrs:{fixed:"",app:""}},[s("v-btn",{attrs:{flat:"",icon:"",color:"white"},nativeOn:{click:function(t){e.redirectBack()}}},[s("v-icon",[e._v("arrow_back")])],1),e._v(" "),s("v-spacer"),e._v(" "),s("v-toolbar-title",{staticClass:"text-xs-center white--text"},[e._v("Viewing Invoice# "+e._s(e.id))]),e._v(" "),s("v-spacer")],1),e._v(" "),s("v-container",{attrs:{fluid:""}},[s("v-layout",{attrs:{row:"",wrap:"","my-3":"","py-3":"","px-1":""}},[s("v-flex",{attrs:{xs12:"",lg2:""}},[s("v-text-field",{attrs:{light:"",readonly:"",disabled:"",label:"Customer"},model:{value:e.customer.customer_name,callback:function(t){e.$set(e.customer,"customer_name",t)},expression:"customer.customer_name"}})],1),e._v(" "),s("v-flex",{attrs:{xs12:"",lg2:""}},[s("v-text-field",{attrs:{light:"",readonly:"",disabled:"",label:"Receiving Fee"},model:{value:e.customer.receiving_fee,callback:function(t){e.$set(e.customer,"receiving_fee",t)},expression:"customer.receiving_fee"}})],1),e._v(" "),s("v-flex",{attrs:{xs12:"",lg2:""}},[s("v-text-field",{attrs:{light:"",readonly:"",disabled:"",label:"Delivery Fee"},model:{value:e.customer.delivery_fee,callback:function(t){e.$set(e.customer,"delivery_fee",t)},expression:"customer.delivery_fee"}})],1),e._v(" "),s("v-flex",{attrs:{xs12:"",lg2:""}},[s("v-text-field",{attrs:{light:"",readonly:"",disabled:"",label:"Storage Fee"},model:{value:e.customer.storage_fee,callback:function(t){e.$set(e.customer,"storage_fee",t)},expression:"customer.storage_fee"}})],1),e._v(" "),s("v-flex",{attrs:{xs12:"",lg2:""}},[s("v-text-field",{attrs:{light:"",readonly:"",disabled:"",label:"Misc Fee"},model:{value:e.customer.misc_fee,callback:function(t){e.$set(e.customer,"misc_fee",t)},expression:"customer.misc_fee"}})],1),e._v(" "),s("v-flex",{attrs:{xs12:"",lg2:""}},[s("v-text-field",{attrs:{light:"",readonly:"",disabled:"",label:"Total"},model:{value:e.customer.total,callback:function(t){e.$set(e.customer,"total",t)},expression:"customer.total"}})],1),e._v(" "),s("v-flex",{attrs:{xs12:"","px-1":""}},[s("v-text-field",{attrs:{"append-icon":"search",label:"Search Client","single-line":"","hide-details":"",light:""},model:{value:e.search,callback:function(t){e.search=t},expression:"search"}})],1)],1),e._v(" "),s("v-data-table",{attrs:{headers:e.headers,items:e.items,search:e.search,pagination:e.pagination,"item-key":"client_id"},on:{"update:pagination":function(t){e.pagination=t}},scopedSlots:e._u([{key:"headers",fn:function(t){return[s("tr",e._l(t.headers,function(t){return s("th",{key:t.text,class:["column sortable",e.pagination.descending?"desc":"asc",t.value===e.pagination.sortBy?"name":"",{"text-xs-left":"left"===t.align,"text-xs-right":"right"===t.align,"text-xs-center":"center"===t.align},e.$vuetify.breakpoint.width>=600&&"title"],on:{click:function(s){e.changeSort(t.value)}}},[s("span",[s("v-icon",[e._v("arrow_upward")]),e._v("\n              "+e._s(t.text)+"\n            ")],1)])}))]}},{key:"items",fn:function(t){return[s("tr",[s("td",{staticClass:"title text-xs-left accent--text"},[e._v("\n            "+e._s(t.item.client_name[0])+"\n          ")]),e._v(" "),s("td",{staticClass:"title text-xs-left accent--text"},[t.item.receiving_fee?s("span",[e._v(e._s(t.item.receiving_fee.toFixed(2)))]):s("span",[e._v(e._s(t.item.receiving_fee))])]),e._v(" "),s("td",{staticClass:"title text-xs-left accent--text"},[t.item.delivery_fee?s("span",[e._v(e._s(t.item.delivery_fee.toFixed(2)))]):s("span",[e._v(e._s(t.item.delivery_fee))])]),e._v(" "),s("td",{staticClass:"title text-xs-left accent--text"},[t.item.storage_fee?s("span",[e._v(e._s(t.item.storage_fee.toFixed(2)))]):s("span",[e._v(e._s(t.item.storage_fee))])]),e._v(" "),s("td",{staticClass:"title text-xs-center accent--text"},[t.item.misc_fee?s("span",[e._v(e._s(t.item.misc_fee.toFixed(2)))]):s("span",[e._v(e._s(t.item.misc_fee))])]),e._v(" "),s("td",{staticClass:"title text-xs-center accent--text"},[e._v("\n            "+e._s(t.item.total.toFixed(2))+"\n          ")])])]}},{key:"pageText",fn:function(t){var s=t.pageStart,n=t.pageStop;return[e._v("\n        From "+e._s(s)+" to "+e._s(n)+"\n      ")]}}]),model:{value:e.selected,callback:function(t){e.selected=t},expression:"selected"}},[s("template",{slot:"no-data"},[s("v-alert",{attrs:{value:!0,color:"blue-grey",icon:"warning"}},[e._v("\n          Opps! No Clients\n        ")])],1),e._v(" "),s("v-alert",{attrs:{slot:"no-results",value:!0,color:"blue-grey",icon:"warning"},slot:"no-results"},[e._v('\n        Your search for "'+e._s(e.search)+'" found no results.\n      ')])],2)],1)],1)},n=[];e.exports={render:s,staticRenderFns:n}},zr7H:function(e,t,s){(t=e.exports=s("FZ+f")(!1)).push([e.i,".v-messages__message{color:#e57373}",""])}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,