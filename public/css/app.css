@import url(https://fonts.googleapis.com/css?family=Roboto:300,400,500,700|Material+Icons);@import url(https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css);[v-cloak] .v-cloak--block {
  display: block;
}

[v-cloak] .v-cloak--inline {
  display: inline;
}

[v-cloak] .v-cloak--inlineBlock {
  display: inline-block;
}

[v-cloak] .v-cloak--hidden {
  display: none;
}

[v-cloak] .v-cloak--invisible {
  visibility: hidden;
}

.v-cloak--block,
.v-cloak--inline,
.v-cloak--inlineBlock {
  display: none;
}

.wf-loading * {
  opacity: 0;
}

.wf-loading {
  background-color: #2c3e50;
  height: 100%;
}

.wf-active *,
.wf-inactive * {
  -webkit-transition: opacity 1s ease-out;
  transition: opacity 1s ease-out;
}

.loader {
  background-color: #2c3e50;
  bottom: 0;
  left: 0;
  overflow: hidden;
  position: fixed;
  right: 0;
  top: 0;
  z-index: 99999;
}

.loader-inner {
  bottom: 0;
  height: 60px;
  left: 0;
  margin: auto;
  position: absolute;
  right: 0;
  top: 0;
  width: 100px;
}

.loader-line-wrap {
  -webkit-animation: spin 2000ms cubic-bezier(0.175, 0.885, 0.32, 1.275) infinite;
          animation: spin 2000ms cubic-bezier(0.175, 0.885, 0.32, 1.275) infinite;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  height: 50px;
  left: 0;
  overflow: hidden;
  position: absolute;
  top: 0;
  -webkit-transform-origin: 50% 100%;
          transform-origin: 50% 100%;
  width: 100px;
}

.loader-line {
  border: 4px solid transparent;
  border-radius: 100%;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  height: 100px;
  left: 0;
  margin: 0 auto;
  position: absolute;
  right: 0;
  top: 0;
  width: 100px;
}

.loader-line-wrap:nth-child(1) {
  -webkit-animation-delay: -50ms;
          animation-delay: -50ms;
}

.loader-line-wrap:nth-child(2) {
  -webkit-animation-delay: -100ms;
          animation-delay: -100ms;
}

.loader-line-wrap:nth-child(3) {
  -webkit-animation-delay: -150ms;
          animation-delay: -150ms;
}

.loader-line-wrap:nth-child(4) {
  -webkit-animation-delay: -200ms;
          animation-delay: -200ms;
}

.loader-line-wrap:nth-child(5) {
  -webkit-animation-delay: -250ms;
          animation-delay: -250ms;
}

.loader-line-wrap:nth-child(1) .loader-line {
  border-color: #eb4747;
  height: 90px;
  width: 90px;
  top: 7px;
}

.loader-line-wrap:nth-child(2) .loader-line {
  border-color: #ebeb47;
  height: 76px;
  width: 76px;
  top: 14px;
}

.loader-line-wrap:nth-child(3) .loader-line {
  border-color: #47eb47;
  height: 62px;
  width: 62px;
  top: 21px;
}

.loader-line-wrap:nth-child(4) .loader-line {
  border-color: #47ebeb;
  height: 48px;
  width: 48px;
  top: 28px;
}

.loader-line-wrap:nth-child(5) .loader-line {
  border-color: #4747eb;
  height: 34px;
  width: 34px;
  top: 35px;
}

@-webkit-keyframes spin {
  0%, 15% {
    -webkit-transform: rotate(0);
            transform: rotate(0);
  }

  100% {
    -webkit-transform: rotate(360deg);
            transform: rotate(360deg);
  }
}

@keyframes spin {
  0%, 15% {
    -webkit-transform: rotate(0);
            transform: rotate(0);
  }

  100% {
    -webkit-transform: rotate(360deg);
            transform: rotate(360deg);
  }
}


/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvYXNzZXRzL3Nhc3MvQzovVXNlcnMvdXJpYWgvc2l0ZXMvd3d3L3N0YXJ0ZXIvcmVzb3VyY2VzL2Fzc2V0cy9zYXNzL2FwcC5zY3NzIiwid2VicGFjazovLy8uL3Jlc291cmNlcy9hc3NldHMvc2Fzcy9DOi9Vc2Vycy91cmlhaC9zaXRlcy93d3cvc3RhcnRlci9yZXNvdXJjZXMvYXNzZXRzL3Nhc3MvcmVzb3VyY2VzL2Fzc2V0cy9zYXNzL2FwcC5zY3NzIiwid2VicGFjazovLy8uL3Jlc291cmNlcy9hc3NldHMvc2Fzcy9DOi9Vc2Vycy91cmlhaC9zaXRlcy93d3cvc3RhcnRlci9hcHAuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoib0xBRUE7RUNFSTtDQ0VIOztBRkFEO0VDQ0E7Q0NHQzs7QUZBRDtFQ0FBO0NDSUM7O0FGQUQ7RUNEQTtDQ0tDOztBRkFEO0VDRkE7Q0NNQzs7QURKRDs7O0VBR0E7Q0NPQzs7QURMRDtFQUNJO0NDUUg7O0FETkQ7RUFDSTtFQUNBO0NDU0g7O0FEUFU7O0VBRVA7RUFHQTtDQ1VIOztBRFJEO0VBQ0k7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtDQ1dIOztBRFJEO0VBQ0k7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtDQ1dIOztBRFJEO0VBQ0k7VUFBQTtFQUdBO1VBQUE7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7VUFBQTtFQUNBO0NDU0g7O0FEUEQ7RUFDSTtFQUNBO0VBQ0E7VUFBQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0NDVUg7O0FEUkQ7RUFBaUM7VUFBQTtDQ1loQzs7QURYRDtFQUFpQztVQUFBO0NDZWhDOztBRGREO0VBQWlDO1VBQUE7Q0NrQmhDOztBRGpCRDtFQUFpQztVQUFBO0NDcUJoQzs7QURwQkQ7RUFBaUM7VUFBQTtDQ3dCaEM7O0FEdEJEO0VBQ0k7RUFDQTtFQUNBO0VBQ0E7Q0N5Qkg7O0FEdkJEO0VBQ0k7RUFDQTtFQUNBO0VBQ0E7Q0MwQkg7O0FEeEJEO0VBQ0k7RUFDQTtFQUNBO0VBQ0E7Q0MyQkg7O0FEekJEO0VBQ0k7RUFDQTtFQUNBO0VBQ0E7Q0M0Qkg7O0FEMUJEO0VBQ0k7RUFDQTtFQUNBO0VBQ0E7Q0M2Qkg7O0FEMUJEO0VBQ0k7SUFDRjtZQUFBO0dDNkJDOztFRDNCRjtJQUNDO1lBQUE7R0M4QkM7Q0FDRjs7QURwQ0Q7RUFDSTtJQUNGO1lBQUE7R0M2QkM7O0VEM0JGO0lBQ0M7WUFBQTtHQzhCQztDQUNGIiwiZmlsZSI6IlxcY3NzXFxhcHAuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCB1cmwoaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3M/ZmFtaWx5PVJvYm90bzozMDAsNDAwLDUwMCw3MDB8TWF0ZXJpYWwrSWNvbnMpO1xuQGltcG9ydCB1cmwoaHR0cHM6Ly9tYXhjZG4uYm9vdHN0cmFwY2RuLmNvbS9mb250LWF3ZXNvbWUvNC43LjAvY3NzL2ZvbnQtYXdlc29tZS5taW4uY3NzKTtcblt2LWNsb2FrXSAudi1jbG9hay0tYmxvY2sge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuW3YtY2xvYWtdIC52LWNsb2FrLS1pbmxpbmUge1xuICBkaXNwbGF5OiBpbmxpbmU7XG59XG5cblt2LWNsb2FrXSAudi1jbG9hay0taW5saW5lQmxvY2sge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG5cblt2LWNsb2FrXSAudi1jbG9hay0taGlkZGVuIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuW3YtY2xvYWtdIC52LWNsb2FrLS1pbnZpc2libGUge1xuICB2aXNpYmlsaXR5OiBoaWRkZW47XG59XG5cbi52LWNsb2FrLS1ibG9jayxcbi52LWNsb2FrLS1pbmxpbmUsXG4udi1jbG9hay0taW5saW5lQmxvY2sge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4ud2YtbG9hZGluZyAqIHtcbiAgb3BhY2l0eTogMDtcbn1cblxuLndmLWxvYWRpbmcge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmMzZTUwO1xuICBoZWlnaHQ6IDEwMCU7XG59XG5cbi53Zi1hY3RpdmUgKixcbi53Zi1pbmFjdGl2ZSAqIHtcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBvcGFjaXR5IDFzIGVhc2Utb3V0O1xuICAtbW96LXRyYW5zaXRpb246IG9wYWNpdHkgMXMgZWFzZS1vdXQ7XG4gIC1vLXRyYW5zaXRpb246IG9wYWNpdHkgMXMgZWFzZS1vdXQ7XG4gIHRyYW5zaXRpb246IG9wYWNpdHkgMXMgZWFzZS1vdXQ7XG59XG5cbi5sb2FkZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmMzZTUwO1xuICBib3R0b206IDA7XG4gIGxlZnQ6IDA7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgcmlnaHQ6IDA7XG4gIHRvcDogMDtcbiAgei1pbmRleDogOTk5OTk7XG59XG5cbi5sb2FkZXItaW5uZXIge1xuICBib3R0b206IDA7XG4gIGhlaWdodDogNjBweDtcbiAgbGVmdDogMDtcbiAgbWFyZ2luOiBhdXRvO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHJpZ2h0OiAwO1xuICB0b3A6IDA7XG4gIHdpZHRoOiAxMDBweDtcbn1cblxuLmxvYWRlci1saW5lLXdyYXAge1xuICBhbmltYXRpb246IHNwaW4gMjAwMG1zIGN1YmljLWJlemllcigwLjE3NSwgMC44ODUsIDAuMzIsIDEuMjc1KSBpbmZpbml0ZTtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgaGVpZ2h0OiA1MHB4O1xuICBsZWZ0OiAwO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgdHJhbnNmb3JtLW9yaWdpbjogNTAlIDEwMCU7XG4gIHdpZHRoOiAxMDBweDtcbn1cblxuLmxvYWRlci1saW5lIHtcbiAgYm9yZGVyOiA0cHggc29saWQgdHJhbnNwYXJlbnQ7XG4gIGJvcmRlci1yYWRpdXM6IDEwMCU7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIGhlaWdodDogMTAwcHg7XG4gIGxlZnQ6IDA7XG4gIG1hcmdpbjogMCBhdXRvO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHJpZ2h0OiAwO1xuICB0b3A6IDA7XG4gIHdpZHRoOiAxMDBweDtcbn1cblxuLmxvYWRlci1saW5lLXdyYXA6bnRoLWNoaWxkKDEpIHtcbiAgYW5pbWF0aW9uLWRlbGF5OiAtNTBtcztcbn1cblxuLmxvYWRlci1saW5lLXdyYXA6bnRoLWNoaWxkKDIpIHtcbiAgYW5pbWF0aW9uLWRlbGF5OiAtMTAwbXM7XG59XG5cbi5sb2FkZXItbGluZS13cmFwOm50aC1jaGlsZCgzKSB7XG4gIGFuaW1hdGlvbi1kZWxheTogLTE1MG1zO1xufVxuXG4ubG9hZGVyLWxpbmUtd3JhcDpudGgtY2hpbGQoNCkge1xuICBhbmltYXRpb24tZGVsYXk6IC0yMDBtcztcbn1cblxuLmxvYWRlci1saW5lLXdyYXA6bnRoLWNoaWxkKDUpIHtcbiAgYW5pbWF0aW9uLWRlbGF5OiAtMjUwbXM7XG59XG5cbi5sb2FkZXItbGluZS13cmFwOm50aC1jaGlsZCgxKSAubG9hZGVyLWxpbmUge1xuICBib3JkZXItY29sb3I6ICNlYjQ3NDc7XG4gIGhlaWdodDogOTBweDtcbiAgd2lkdGg6IDkwcHg7XG4gIHRvcDogN3B4O1xufVxuXG4ubG9hZGVyLWxpbmUtd3JhcDpudGgtY2hpbGQoMikgLmxvYWRlci1saW5lIHtcbiAgYm9yZGVyLWNvbG9yOiAjZWJlYjQ3O1xuICBoZWlnaHQ6IDc2cHg7XG4gIHdpZHRoOiA3NnB4O1xuICB0b3A6IDE0cHg7XG59XG5cbi5sb2FkZXItbGluZS13cmFwOm50aC1jaGlsZCgzKSAubG9hZGVyLWxpbmUge1xuICBib3JkZXItY29sb3I6ICM0N2ViNDc7XG4gIGhlaWdodDogNjJweDtcbiAgd2lkdGg6IDYycHg7XG4gIHRvcDogMjFweDtcbn1cblxuLmxvYWRlci1saW5lLXdyYXA6bnRoLWNoaWxkKDQpIC5sb2FkZXItbGluZSB7XG4gIGJvcmRlci1jb2xvcjogIzQ3ZWJlYjtcbiAgaGVpZ2h0OiA0OHB4O1xuICB3aWR0aDogNDhweDtcbiAgdG9wOiAyOHB4O1xufVxuXG4ubG9hZGVyLWxpbmUtd3JhcDpudGgtY2hpbGQoNSkgLmxvYWRlci1saW5lIHtcbiAgYm9yZGVyLWNvbG9yOiAjNDc0N2ViO1xuICBoZWlnaHQ6IDM0cHg7XG4gIHdpZHRoOiAzNHB4O1xuICB0b3A6IDM1cHg7XG59XG5cbkBrZXlmcmFtZXMgc3BpbiB7XG4gIDAlLCAxNSUge1xuICAgIHRyYW5zZm9ybTogcm90YXRlKDApO1xuICB9XG4gIDEwMCUge1xuICAgIHRyYW5zZm9ybTogcm90YXRlKDM2MGRlZyk7XG4gIH1cbn1cbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYkluSmxjMjkxY21ObGN5OWhjM05sZEhNdmMyRnpjeTloY0hBdWMyTnpjeUpkTENKemIzVnlZMlZ6UTI5dWRHVnVkQ0k2V3lKQWFXMXdiM0owSUhWeWJDaG9kSFJ3Y3pvdkwyWnZiblJ6TG1kdmIyZHNaV0Z3YVhNdVkyOXRMMk56Y3o5bVlXMXBiSGs5VW05aWIzUnZPak13TUN3ME1EQXNOVEF3TERjd01IeE5ZWFJsY21saGJDdEpZMjl1Y3lrN1hHNUFhVzF3YjNKMElIVnliQ2hvZEhSd2N6b3ZMMjFoZUdOa2JpNWliMjkwYzNSeVlYQmpaRzR1WTI5dEwyWnZiblF0WVhkbGMyOXRaUzgwTGpjdU1DOWpjM012Wm05dWRDMWhkMlZ6YjIxbExtMXBiaTVqYzNNcE8xeHVYRzViZGkxamJHOWhhMTBnTG5ZdFkyeHZZV3N0TFdKc2IyTnJJSHRjYmlBZ0lDQmthWE53YkdGNU9pQmliRzlqYXp0Y2JpQWdmVnh1VzNZdFkyeHZZV3RkSUM1MkxXTnNiMkZyTFMxcGJteHBibVVnZTF4dVpHbHpjR3hoZVRvZ2FXNXNhVzVsTzF4dWZWeHVXM1l0WTJ4dllXdGRJQzUyTFdOc2IyRnJMUzFwYm14cGJtVkNiRzlqYXlCN1hHNWthWE53YkdGNU9pQnBibXhwYm1VdFlteHZZMnM3WEc1OVhHNWJkaTFqYkc5aGExMGdMbll0WTJ4dllXc3RMV2hwWkdSbGJpQjdYRzVrYVhOd2JHRjVPaUJ1YjI1bE8xeHVmVnh1VzNZdFkyeHZZV3RkSUM1MkxXTnNiMkZyTFMxcGJuWnBjMmxpYkdVZ2UxeHVkbWx6YVdKcGJHbDBlVG9nYUdsa1pHVnVPMXh1ZlZ4dUxuWXRZMnh2WVdzdExXSnNiMk5yTEZ4dUxuWXRZMnh2WVdzdExXbHViR2x1WlN4Y2JpNTJMV05zYjJGckxTMXBibXhwYm1WQ2JHOWpheUI3WEc1a2FYTndiR0Y1T2lCdWIyNWxPMXh1ZlZ4dUxuZG1MV3h2WVdScGJtY2dLaUI3WEc0Z0lDQWdiM0JoWTJsMGVUb2dNRHRjYm4xY2JpNTNaaTFzYjJGa2FXNW5JSHRjYmlBZ0lDQmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQWpNbU16WlRVd08xeHVJQ0FnSUdobGFXZG9kRG9nTVRBd0pUdGNibjFjYmk1M1ppMWhZM1JwZG1VZ0tpd2dYRzR1ZDJZdGFXNWhZM1JwZG1VZ0tpQjdYRzRnSUNBZ0xYZGxZbXRwZEMxMGNtRnVjMmwwYVc5dU9pQnZjR0ZqYVhSNUlERnpJR1ZoYzJVdGIzVjBPeUFnWEc0Z0lDQWdMVzF2ZWkxMGNtRnVjMmwwYVc5dU9pQnZjR0ZqYVhSNUlERnpJR1ZoYzJVdGIzVjBPeUJjYmlBZ0lDQXRieTEwY21GdWMybDBhVzl1T2lCdmNHRmphWFI1SURGeklHVmhjMlV0YjNWME95QWdYRzRnSUNBZ2RISmhibk5wZEdsdmJqb2diM0JoWTJsMGVTQXhjeUJsWVhObExXOTFkRHNnSUZ4dWZWeHVMbXh2WVdSbGNpQjdYRzRnSUNBZ1ltRmphMmR5YjNWdVpDMWpiMnh2Y2pvZ0l6SmpNMlUxTUR0Y2JpQWdJQ0JpYjNSMGIyMDZJREE3WEc0Z0lDQWdiR1ZtZERvZ01EdGNiaUFnSUNCdmRtVnlabXh2ZHpvZ2FHbGtaR1Z1TzF4dUlDQWdJSEJ2YzJsMGFXOXVPaUJtYVhobFpEdGNiaUFnSUNCeWFXZG9kRG9nTUR0Y2JpQWdJQ0IwYjNBNklEQTdYRzRnSUNBZ2VpMXBibVJsZURvZ09UazVPVGs3WEc1OVhHNWNiaTVzYjJGa1pYSXRhVzV1WlhJZ2UxeHVJQ0FnSUdKdmRIUnZiVG9nTUR0Y2JpQWdJQ0JvWldsbmFIUTZJRFl3Y0hnN1hHNGdJQ0FnYkdWbWREb2dNRHRjYmlBZ0lDQnRZWEpuYVc0NklHRjFkRzg3WEc0Z0lDQWdjRzl6YVhScGIyNDZJR0ZpYzI5c2RYUmxPMXh1SUNBZ0lISnBaMmgwT2lBd08xeHVJQ0FnSUhSdmNEb2dNRHRjYmlBZ0lDQjNhV1IwYURvZ01UQXdjSGc3WEc1OVhHNWNiaTVzYjJGa1pYSXRiR2x1WlMxM2NtRndJSHRjYmlBZ0lDQmhibWx0WVhScGIyNDZJRnh1WEhSY2RITndhVzRnTWpBd01HMXpJR04xWW1sakxXSmxlbWxsY2lndU1UYzFMQ0F1T0RnMUxDQXVNeklzSURFdU1qYzFLU0JwYm1acGJtbDBaVnh1WEhRN1hHNGdJQ0FnWW05NExYTnBlbWx1WnpvZ1ltOXlaR1Z5TFdKdmVEdGNiaUFnSUNCb1pXbG5hSFE2SURVd2NIZzdYRzRnSUNBZ2JHVm1kRG9nTUR0Y2JpQWdJQ0J2ZG1WeVpteHZkem9nYUdsa1pHVnVPMXh1SUNBZ0lIQnZjMmwwYVc5dU9pQmhZbk52YkhWMFpUdGNiaUFnSUNCMGIzQTZJREE3WEc0Z0lDQWdkSEpoYm5ObWIzSnRMVzl5YVdkcGJqb2dOVEFsSURFd01DVTdYRzRnSUNBZ2QybGtkR2c2SURFd01IQjRPMXh1ZlZ4dUxteHZZV1JsY2kxc2FXNWxJSHRjYmlBZ0lDQmliM0prWlhJNklEUndlQ0J6YjJ4cFpDQjBjbUZ1YzNCaGNtVnVkRHRjYmlBZ0lDQmliM0prWlhJdGNtRmthWFZ6T2lBeE1EQWxPMXh1SUNBZ0lHSnZlQzF6YVhwcGJtYzZJR0p2Y21SbGNpMWliM2c3WEc0Z0lDQWdhR1ZwWjJoME9pQXhNREJ3ZUR0Y2JpQWdJQ0JzWldaME9pQXdPMXh1SUNBZ0lHMWhjbWRwYmpvZ01DQmhkWFJ2TzF4dUlDQWdJSEJ2YzJsMGFXOXVPaUJoWW5OdmJIVjBaVHRjYmlBZ0lDQnlhV2RvZERvZ01EdGNiaUFnSUNCMGIzQTZJREE3WEc0Z0lDQWdkMmxrZEdnNklERXdNSEI0TzF4dWZWeHVMbXh2WVdSbGNpMXNhVzVsTFhkeVlYQTZiblJvTFdOb2FXeGtLREVwSUhzZ1lXNXBiV0YwYVc5dUxXUmxiR0Y1T2lBdE5UQnRjenNnZlZ4dUxteHZZV1JsY2kxc2FXNWxMWGR5WVhBNmJuUm9MV05vYVd4a0tESXBJSHNnWVc1cGJXRjBhVzl1TFdSbGJHRjVPaUF0TVRBd2JYTTdJSDFjYmk1c2IyRmtaWEl0YkdsdVpTMTNjbUZ3T201MGFDMWphR2xzWkNnektTQjdJR0Z1YVcxaGRHbHZiaTFrWld4aGVUb2dMVEUxTUcxek95QjlYRzR1Ykc5aFpHVnlMV3hwYm1VdGQzSmhjRHB1ZEdndFkyaHBiR1FvTkNrZ2V5QmhibWx0WVhScGIyNHRaR1ZzWVhrNklDMHlNREJ0Y3pzZ2ZWeHVMbXh2WVdSbGNpMXNhVzVsTFhkeVlYQTZiblJvTFdOb2FXeGtLRFVwSUhzZ1lXNXBiV0YwYVc5dUxXUmxiR0Y1T2lBdE1qVXdiWE03SUgxY2JseHVMbXh2WVdSbGNpMXNhVzVsTFhkeVlYQTZiblJvTFdOb2FXeGtLREVwSUM1c2IyRmtaWEl0YkdsdVpTQjdYRzRnSUNBZ1ltOXlaR1Z5TFdOdmJHOXlPaUJvYzJ3b01Dd2dPREFsTENBMk1DVXBPMXh1SUNBZ0lHaGxhV2RvZERvZ09UQndlRHRjYmlBZ0lDQjNhV1IwYURvZ09UQndlRHRjYmlBZ0lDQjBiM0E2SURkd2VEdGNibjFjYmk1c2IyRmtaWEl0YkdsdVpTMTNjbUZ3T201MGFDMWphR2xzWkNneUtTQXViRzloWkdWeUxXeHBibVVnZTF4dUlDQWdJR0p2Y21SbGNpMWpiMnh2Y2pvZ2FITnNLRFl3TENBNE1DVXNJRFl3SlNrN1hHNGdJQ0FnYUdWcFoyaDBPaUEzTm5CNE8xeHVJQ0FnSUhkcFpIUm9PaUEzTm5CNE8xeHVJQ0FnSUhSdmNEb2dNVFJ3ZUR0Y2JuMWNiaTVzYjJGa1pYSXRiR2x1WlMxM2NtRndPbTUwYUMxamFHbHNaQ2d6S1NBdWJHOWhaR1Z5TFd4cGJtVWdlMXh1SUNBZ0lHSnZjbVJsY2kxamIyeHZjam9nYUhOc0tERXlNQ3dnT0RBbExDQTJNQ1VwTzF4dUlDQWdJR2hsYVdkb2REb2dOakp3ZUR0Y2JpQWdJQ0IzYVdSMGFEb2dOakp3ZUR0Y2JpQWdJQ0IwYjNBNklESXhjSGc3WEc1OVhHNHViRzloWkdWeUxXeHBibVV0ZDNKaGNEcHVkR2d0WTJocGJHUW9OQ2tnTG14dllXUmxjaTFzYVc1bElIdGNiaUFnSUNCaWIzSmtaWEl0WTI5c2IzSTZJR2h6YkNneE9EQXNJRGd3SlN3Z05qQWxLVHRjYmlBZ0lDQm9aV2xuYUhRNklEUTRjSGc3WEc0Z0lDQWdkMmxrZEdnNklEUTRjSGc3WEc0Z0lDQWdkRzl3T2lBeU9IQjRPMXh1ZlZ4dUxteHZZV1JsY2kxc2FXNWxMWGR5WVhBNmJuUm9MV05vYVd4a0tEVXBJQzVzYjJGa1pYSXRiR2x1WlNCN1hHNGdJQ0FnWW05eVpHVnlMV052Ykc5eU9pQm9jMndvTWpRd0xDQTRNQ1VzSURZd0pTazdYRzRnSUNBZ2FHVnBaMmgwT2lBek5IQjRPMXh1SUNBZ0lIZHBaSFJvT2lBek5IQjRPMXh1SUNBZ0lIUnZjRG9nTXpWd2VEdGNibjFjYmx4dVFHdGxlV1p5WVcxbGN5QnpjR2x1SUh0Y2JpQWdJQ0F3SlN3Z01UVWxJSHRjYmx4MFhIUjBjbUZ1YzJadmNtMDZJSEp2ZEdGMFpTZ3dLVHRjYmx4MGZWeHVYSFF4TURBbElIdGNibHgwWEhSMGNtRnVjMlp2Y20wNklISnZkR0YwWlNnek5qQmtaV2NwTzF4dVhIUjlYRzU5SWwwc0ltNWhiV1Z6SWpwYlhTd2liV0Z3Y0dsdVozTWlPaUpCUVVGQkxFOUJRVThzUTBGQlF5eHJSa0ZCU1R0QlFVTmFMRTlCUVU4c1EwRkJReXhuUmtGQlNUdERRVVZhTEVGQlFVRXNRVUZCVlN4UFFVRlVMRUZCUVVFc1JVRkJVeXhsUVVGbExFTkJRVU03UlVGRGRFSXNUMEZCVHl4RlFVRkZMRXRCUVVzN1EwRkRaanM3UTBGRFNDeEJRVUZCTEVGQlFWVXNUMEZCVkN4QlFVRkJMRVZCUVZNc1owSkJRV2RDTEVOQlFVTTdSVUZETTBJc1QwRkJUeXhGUVVGRkxFMUJRVTA3UTBGRFpEczdRMEZEUkN4QlFVRkJMRUZCUVZVc1QwRkJWQ3hCUVVGQkxFVkJRVk1zY1VKQlFYRkNMRU5CUVVNN1JVRkRhRU1zVDBGQlR5eEZRVUZGTEZsQlFWazdRMEZEY0VJN08wTkJRMFFzUVVGQlFTeEJRVUZWTEU5QlFWUXNRVUZCUVN4RlFVRlRMR2RDUVVGblFpeERRVUZETzBWQlF6TkNMRTlCUVU4c1JVRkJSU3hKUVVGSk8wTkJRMW83TzBOQlEwUXNRVUZCUVN4QlFVRlZMRTlCUVZRc1FVRkJRU3hGUVVGVExHMUNRVUZ0UWl4RFFVRkRPMFZCUXpsQ0xGVkJRVlVzUlVGQlJTeE5RVUZOTzBOQlEycENPenRCUVVORUxFRkJRVUVzWlVGQlpUdEJRVU5tTEVGQlFVRXNaMEpCUVdkQ08wRkJRMmhDTEVGQlFVRXNjVUpCUVhGQ0xFTkJRVU03UlVGRGRFSXNUMEZCVHl4RlFVRkZMRWxCUVVrN1EwRkRXanM3UVVGRFJDeEJRVUZaTEZkQlFVUXNRMEZCUXl4RFFVRkRMRU5CUVVNN1JVRkRWaXhQUVVGUExFVkJRVVVzUTBGQlF6dERRVU5pT3p0QlFVTkVMRUZCUVVFc1YwRkJWeXhEUVVGRE8wVkJRMUlzWjBKQlFXZENMRVZCUVVVc1QwRkJUenRGUVVONlFpeE5RVUZOTEVWQlFVVXNTVUZCU1R0RFFVTm1PenRCUVVORUxFRkJRVmNzVlVGQlJDeERRVUZETEVOQlFVTTdRVUZEV2l4QlFVRmhMRmxCUVVRc1EwRkJReXhEUVVGRExFTkJRVU03UlVGRFdDeHJRa0ZCYTBJc1JVRkJSU3h0UWtGQmJVSTdSVUZEZGtNc1pVRkJaU3hGUVVGRkxHMUNRVUZ0UWp0RlFVTndReXhoUVVGaExFVkJRVVVzYlVKQlFXMUNPMFZCUTJ4RExGVkJRVlVzUlVGQlJTeHRRa0ZCYlVJN1EwRkRiRU03TzBGQlEwUXNRVUZCUVN4UFFVRlBMRU5CUVVNN1JVRkRTaXhuUWtGQlowSXNSVUZCUlN4UFFVRlBPMFZCUTNwQ0xFMUJRVTBzUlVGQlJTeERRVUZETzBWQlExUXNTVUZCU1N4RlFVRkZMRU5CUVVNN1JVRkRVQ3hSUVVGUkxFVkJRVVVzVFVGQlRUdEZRVU5vUWl4UlFVRlJMRVZCUVVVc1MwRkJTenRGUVVObUxFdEJRVXNzUlVGQlJTeERRVUZETzBWQlExSXNSMEZCUnl4RlFVRkZMRU5CUVVNN1JVRkRUaXhQUVVGUExFVkJRVVVzUzBGQlN6dERRVU5xUWpzN1FVRkZSQ3hCUVVGQkxHRkJRV0VzUTBGQlF6dEZRVU5XTEUxQlFVMHNSVUZCUlN4RFFVRkRPMFZCUTFRc1RVRkJUU3hGUVVGRkxFbEJRVWs3UlVGRFdpeEpRVUZKTEVWQlFVVXNRMEZCUXp0RlFVTlFMRTFCUVUwc1JVRkJSU3hKUVVGSk8wVkJRMW9zVVVGQlVTeEZRVUZGTEZGQlFWRTdSVUZEYkVJc1MwRkJTeXhGUVVGRkxFTkJRVU03UlVGRFVpeEhRVUZITEVWQlFVVXNRMEZCUXp0RlFVTk9MRXRCUVVzc1JVRkJSU3hMUVVGTE8wTkJRMlk3TzBGQlJVUXNRVUZCUVN4cFFrRkJhVUlzUTBGQlF6dEZRVU5rTEZOQlFWTXNSVUZEV0N4SlFVRkpMRU5CUVVNc1RVRkJUU3hEUVVGRExIVkRRVUZ2UXl4RFFVRkRMRkZCUVZFN1JVRkZka1FzVlVGQlZTeEZRVUZGTEZWQlFWVTdSVUZEZEVJc1RVRkJUU3hGUVVGRkxFbEJRVWs3UlVGRFdpeEpRVUZKTEVWQlFVVXNRMEZCUXp0RlFVTlFMRkZCUVZFc1JVRkJSU3hOUVVGTk8wVkJRMmhDTEZGQlFWRXNSVUZCUlN4UlFVRlJPMFZCUTJ4Q0xFZEJRVWNzUlVGQlJTeERRVUZETzBWQlEwNHNaMEpCUVdkQ0xFVkJRVVVzVVVGQlVUdEZRVU14UWl4TFFVRkxMRVZCUVVVc1MwRkJTenREUVVObU96dEJRVU5FTEVGQlFVRXNXVUZCV1N4RFFVRkRPMFZCUTFRc1RVRkJUU3hGUVVGRkxIRkNRVUZ4UWp0RlFVTTNRaXhoUVVGaExFVkJRVVVzU1VGQlNUdEZRVU51UWl4VlFVRlZMRVZCUVVVc1ZVRkJWVHRGUVVOMFFpeE5RVUZOTEVWQlFVVXNTMEZCU3p0RlFVTmlMRWxCUVVrc1JVRkJSU3hEUVVGRE8wVkJRMUFzVFVGQlRTeEZRVUZGTEUxQlFVMDdSVUZEWkN4UlFVRlJMRVZCUVVVc1VVRkJVVHRGUVVOc1FpeExRVUZMTEVWQlFVVXNRMEZCUXp0RlFVTlNMRWRCUVVjc1JVRkJSU3hEUVVGRE8wVkJRMDRzUzBGQlN5eEZRVUZGTEV0QlFVczdRMEZEWmpzN1FVRkRSQ3hCUVVGQkxHbENRVUZwUWl4QlFVRkJMRlZCUVZjc1EwRkJRU3hCUVVGQkxFTkJRVU1zUlVGQlJUdEZRVUZGTEdWQlFXVXNSVUZCUlN4TFFVRkxPME5CUVVzN08wRkJRelZFTEVGQlFVRXNhVUpCUVdsQ0xFRkJRVUVzVlVGQlZ5eERRVUZCTEVGQlFVRXNRMEZCUXl4RlFVRkZPMFZCUVVVc1pVRkJaU3hGUVVGRkxFMUJRVTA3UTBGQlN6czdRVUZETjBRc1FVRkJRU3hwUWtGQmFVSXNRVUZCUVN4VlFVRlhMRU5CUVVFc1FVRkJRU3hEUVVGRExFVkJRVVU3UlVGQlJTeGxRVUZsTEVWQlFVVXNUVUZCVFR0RFFVRkxPenRCUVVNM1JDeEJRVUZCTEdsQ1FVRnBRaXhCUVVGQkxGVkJRVmNzUTBGQlFTeEJRVUZCTEVOQlFVTXNSVUZCUlR0RlFVRkZMR1ZCUVdVc1JVRkJSU3hOUVVGTk8wTkJRVXM3TzBGQlF6ZEVMRUZCUVVFc2FVSkJRV2xDTEVGQlFVRXNWVUZCVnl4RFFVRkJMRUZCUVVFc1EwRkJReXhGUVVGRk8wVkJRVVVzWlVGQlpTeEZRVUZGTEUxQlFVMDdRMEZCU3pzN1FVRkZOMFFzUVVGQkswSXNhVUpCUVdRc1FVRkJRU3hWUVVGWExFTkJRVUVzUVVGQlFTeERRVUZETEVWQlFVVXNXVUZCV1N4RFFVRkRPMFZCUTNoRExGbEJRVmtzUlVGQlJTeFBRVUZuUWp0RlFVTTVRaXhOUVVGTkxFVkJRVVVzU1VGQlNUdEZRVU5hTEV0QlFVc3NSVUZCUlN4SlFVRkpPMFZCUTFnc1IwRkJSeXhGUVVGRkxFZEJRVWM3UTBGRFdEczdRVUZEUkN4QlFVRXJRaXhwUWtGQlpDeEJRVUZCTEZWQlFWY3NRMEZCUVN4QlFVRkJMRU5CUVVNc1JVRkJSU3haUVVGWkxFTkJRVU03UlVGRGVFTXNXVUZCV1N4RlFVRkZMRTlCUVdsQ08wVkJReTlDTEUxQlFVMHNSVUZCUlN4SlFVRkpPMFZCUTFvc1MwRkJTeXhGUVVGRkxFbEJRVWs3UlVGRFdDeEhRVUZITEVWQlFVVXNTVUZCU1R0RFFVTmFPenRCUVVORUxFRkJRU3RDTEdsQ1FVRmtMRUZCUVVFc1ZVRkJWeXhEUVVGQkxFRkJRVUVzUTBGQlF5eEZRVUZGTEZsQlFWa3NRMEZCUXp0RlFVTjRReXhaUVVGWkxFVkJRVVVzVDBGQmEwSTdSVUZEYUVNc1RVRkJUU3hGUVVGRkxFbEJRVWs3UlVGRFdpeExRVUZMTEVWQlFVVXNTVUZCU1R0RlFVTllMRWRCUVVjc1JVRkJSU3hKUVVGSk8wTkJRMW83TzBGQlEwUXNRVUZCSzBJc2FVSkJRV1FzUVVGQlFTeFZRVUZYTEVOQlFVRXNRVUZCUVN4RFFVRkRMRVZCUVVVc1dVRkJXU3hEUVVGRE8wVkJRM2hETEZsQlFWa3NSVUZCUlN4UFFVRnJRanRGUVVOb1F5eE5RVUZOTEVWQlFVVXNTVUZCU1R0RlFVTmFMRXRCUVVzc1JVRkJSU3hKUVVGSk8wVkJRMWdzUjBGQlJ5eEZRVUZGTEVsQlFVazdRMEZEV2pzN1FVRkRSQ3hCUVVFclFpeHBRa0ZCWkN4QlFVRkJMRlZCUVZjc1EwRkJRU3hCUVVGQkxFTkJRVU1zUlVGQlJTeFpRVUZaTEVOQlFVTTdSVUZEZUVNc1dVRkJXU3hGUVVGRkxFOUJRV3RDTzBWQlEyaERMRTFCUVUwc1JVRkJSU3hKUVVGSk8wVkJRMW9zUzBGQlN5eEZRVUZGTEVsQlFVazdSVUZEV0N4SFFVRkhMRVZCUVVVc1NVRkJTVHREUVVOYU96dEJRVVZFTEZWQlFWVXNRMEZCVml4SlFVRlZPMFZCUTA0c1FVRkJRU3hGUVVGRkxFVkJRVVVzUVVGQlFTeEhRVUZITzBsQlExUXNVMEZCVXl4RlFVRkZMRk5CUVZNN08wVkJSWEpDTEVGQlFVRXNTVUZCU1R0SlFVTklMRk5CUVZNc1JVRkJSU3hqUVVGakluMD0gKi9cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9yZXNvdXJjZXMvYXNzZXRzL3Nhc3MvQzovVXNlcnMvdXJpYWgvc2l0ZXMvd3d3L3N0YXJ0ZXIvcmVzb3VyY2VzL2Fzc2V0cy9zYXNzL2FwcC5zY3NzIiwiQGltcG9ydCB1cmwoaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3M/ZmFtaWx5PVJvYm90bzozMDAsNDAwLDUwMCw3MDB8TWF0ZXJpYWwrSWNvbnMpO1xuQGltcG9ydCB1cmwoaHR0cHM6Ly9tYXhjZG4uYm9vdHN0cmFwY2RuLmNvbS9mb250LWF3ZXNvbWUvNC43LjAvY3NzL2ZvbnQtYXdlc29tZS5taW4uY3NzKTtcblxuW3YtY2xvYWtdIC52LWNsb2FrLS1ibG9jayB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gIH1cblt2LWNsb2FrXSAudi1jbG9hay0taW5saW5lIHtcbmRpc3BsYXk6IGlubGluZTtcbn1cblt2LWNsb2FrXSAudi1jbG9hay0taW5saW5lQmxvY2sge1xuZGlzcGxheTogaW5saW5lLWJsb2NrO1xufVxuW3YtY2xvYWtdIC52LWNsb2FrLS1oaWRkZW4ge1xuZGlzcGxheTogbm9uZTtcbn1cblt2LWNsb2FrXSAudi1jbG9hay0taW52aXNpYmxlIHtcbnZpc2liaWxpdHk6IGhpZGRlbjtcbn1cbi52LWNsb2FrLS1ibG9jayxcbi52LWNsb2FrLS1pbmxpbmUsXG4udi1jbG9hay0taW5saW5lQmxvY2sge1xuZGlzcGxheTogbm9uZTtcbn1cbi53Zi1sb2FkaW5nICoge1xuICAgIG9wYWNpdHk6IDA7XG59XG4ud2YtbG9hZGluZyB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzJjM2U1MDtcbiAgICBoZWlnaHQ6IDEwMCU7XG59XG4ud2YtYWN0aXZlICosIFxuLndmLWluYWN0aXZlICoge1xuICAgIC13ZWJraXQtdHJhbnNpdGlvbjogb3BhY2l0eSAxcyBlYXNlLW91dDsgIFxuICAgIC1tb3otdHJhbnNpdGlvbjogb3BhY2l0eSAxcyBlYXNlLW91dDsgXG4gICAgLW8tdHJhbnNpdGlvbjogb3BhY2l0eSAxcyBlYXNlLW91dDsgIFxuICAgIHRyYW5zaXRpb246IG9wYWNpdHkgMXMgZWFzZS1vdXQ7ICBcbn1cbi5sb2FkZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMyYzNlNTA7XG4gICAgYm90dG9tOiAwO1xuICAgIGxlZnQ6IDA7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgcmlnaHQ6IDA7XG4gICAgdG9wOiAwO1xuICAgIHotaW5kZXg6IDk5OTk5O1xufVxuXG4ubG9hZGVyLWlubmVyIHtcbiAgICBib3R0b206IDA7XG4gICAgaGVpZ2h0OiA2MHB4O1xuICAgIGxlZnQ6IDA7XG4gICAgbWFyZ2luOiBhdXRvO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICByaWdodDogMDtcbiAgICB0b3A6IDA7XG4gICAgd2lkdGg6IDEwMHB4O1xufVxuXG4ubG9hZGVyLWxpbmUtd3JhcCB7XG4gICAgYW5pbWF0aW9uOiBcblx0XHRzcGluIDIwMDBtcyBjdWJpYy1iZXppZXIoLjE3NSwgLjg4NSwgLjMyLCAxLjI3NSkgaW5maW5pdGVcblx0O1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgaGVpZ2h0OiA1MHB4O1xuICAgIGxlZnQ6IDA7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAwO1xuICAgIHRyYW5zZm9ybS1vcmlnaW46IDUwJSAxMDAlO1xuICAgIHdpZHRoOiAxMDBweDtcbn1cbi5sb2FkZXItbGluZSB7XG4gICAgYm9yZGVyOiA0cHggc29saWQgdHJhbnNwYXJlbnQ7XG4gICAgYm9yZGVyLXJhZGl1czogMTAwJTtcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgIGhlaWdodDogMTAwcHg7XG4gICAgbGVmdDogMDtcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgcmlnaHQ6IDA7XG4gICAgdG9wOiAwO1xuICAgIHdpZHRoOiAxMDBweDtcbn1cbi5sb2FkZXItbGluZS13cmFwOm50aC1jaGlsZCgxKSB7IGFuaW1hdGlvbi1kZWxheTogLTUwbXM7IH1cbi5sb2FkZXItbGluZS13cmFwOm50aC1jaGlsZCgyKSB7IGFuaW1hdGlvbi1kZWxheTogLTEwMG1zOyB9XG4ubG9hZGVyLWxpbmUtd3JhcDpudGgtY2hpbGQoMykgeyBhbmltYXRpb24tZGVsYXk6IC0xNTBtczsgfVxuLmxvYWRlci1saW5lLXdyYXA6bnRoLWNoaWxkKDQpIHsgYW5pbWF0aW9uLWRlbGF5OiAtMjAwbXM7IH1cbi5sb2FkZXItbGluZS13cmFwOm50aC1jaGlsZCg1KSB7IGFuaW1hdGlvbi1kZWxheTogLTI1MG1zOyB9XG5cbi5sb2FkZXItbGluZS13cmFwOm50aC1jaGlsZCgxKSAubG9hZGVyLWxpbmUge1xuICAgIGJvcmRlci1jb2xvcjogaHNsKDAsIDgwJSwgNjAlKTtcbiAgICBoZWlnaHQ6IDkwcHg7XG4gICAgd2lkdGg6IDkwcHg7XG4gICAgdG9wOiA3cHg7XG59XG4ubG9hZGVyLWxpbmUtd3JhcDpudGgtY2hpbGQoMikgLmxvYWRlci1saW5lIHtcbiAgICBib3JkZXItY29sb3I6IGhzbCg2MCwgODAlLCA2MCUpO1xuICAgIGhlaWdodDogNzZweDtcbiAgICB3aWR0aDogNzZweDtcbiAgICB0b3A6IDE0cHg7XG59XG4ubG9hZGVyLWxpbmUtd3JhcDpudGgtY2hpbGQoMykgLmxvYWRlci1saW5lIHtcbiAgICBib3JkZXItY29sb3I6IGhzbCgxMjAsIDgwJSwgNjAlKTtcbiAgICBoZWlnaHQ6IDYycHg7XG4gICAgd2lkdGg6IDYycHg7XG4gICAgdG9wOiAyMXB4O1xufVxuLmxvYWRlci1saW5lLXdyYXA6bnRoLWNoaWxkKDQpIC5sb2FkZXItbGluZSB7XG4gICAgYm9yZGVyLWNvbG9yOiBoc2woMTgwLCA4MCUsIDYwJSk7XG4gICAgaGVpZ2h0OiA0OHB4O1xuICAgIHdpZHRoOiA0OHB4O1xuICAgIHRvcDogMjhweDtcbn1cbi5sb2FkZXItbGluZS13cmFwOm50aC1jaGlsZCg1KSAubG9hZGVyLWxpbmUge1xuICAgIGJvcmRlci1jb2xvcjogaHNsKDI0MCwgODAlLCA2MCUpO1xuICAgIGhlaWdodDogMzRweDtcbiAgICB3aWR0aDogMzRweDtcbiAgICB0b3A6IDM1cHg7XG59XG5cbkBrZXlmcmFtZXMgc3BpbiB7XG4gICAgMCUsIDE1JSB7XG5cdFx0dHJhbnNmb3JtOiByb3RhdGUoMCk7XG5cdH1cblx0MTAwJSB7XG5cdFx0dHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTtcblx0fVxufVxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3Jlc291cmNlcy9hc3NldHMvc2Fzcy9DOi9Vc2Vycy91cmlhaC9zaXRlcy93d3cvc3RhcnRlci9yZXNvdXJjZXMvYXNzZXRzL3Nhc3MvcmVzb3VyY2VzL2Fzc2V0cy9zYXNzL2FwcC5zY3NzIiwiQGltcG9ydCB1cmwoaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3M/ZmFtaWx5PVJvYm90bzozMDAsNDAwLDUwMCw3MDB8TWF0ZXJpYWwrSWNvbnMpO1xuXG5AaW1wb3J0IHVybChodHRwczovL21heGNkbi5ib290c3RyYXBjZG4uY29tL2ZvbnQtYXdlc29tZS80LjcuMC9jc3MvZm9udC1hd2Vzb21lLm1pbi5jc3MpO1xuXG5bdi1jbG9ha10gLnYtY2xvYWstLWJsb2NrIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cblt2LWNsb2FrXSAudi1jbG9hay0taW5saW5lIHtcbiAgZGlzcGxheTogaW5saW5lO1xufVxuXG5bdi1jbG9ha10gLnYtY2xvYWstLWlubGluZUJsb2NrIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xufVxuXG5bdi1jbG9ha10gLnYtY2xvYWstLWhpZGRlbiB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cblt2LWNsb2FrXSAudi1jbG9hay0taW52aXNpYmxlIHtcbiAgdmlzaWJpbGl0eTogaGlkZGVuO1xufVxuXG4udi1jbG9hay0tYmxvY2ssXG4udi1jbG9hay0taW5saW5lLFxuLnYtY2xvYWstLWlubGluZUJsb2NrIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLndmLWxvYWRpbmcgKiB7XG4gIG9wYWNpdHk6IDA7XG59XG5cbi53Zi1sb2FkaW5nIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzJjM2U1MDtcbiAgaGVpZ2h0OiAxMDAlO1xufVxuXG4ud2YtYWN0aXZlICosXG4ud2YtaW5hY3RpdmUgKiB7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogb3BhY2l0eSAxcyBlYXNlLW91dDtcbiAgLW1vei10cmFuc2l0aW9uOiBvcGFjaXR5IDFzIGVhc2Utb3V0O1xuICAtby10cmFuc2l0aW9uOiBvcGFjaXR5IDFzIGVhc2Utb3V0O1xuICB0cmFuc2l0aW9uOiBvcGFjaXR5IDFzIGVhc2Utb3V0O1xufVxuXG4ubG9hZGVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzJjM2U1MDtcbiAgYm90dG9tOiAwO1xuICBsZWZ0OiAwO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHJpZ2h0OiAwO1xuICB0b3A6IDA7XG4gIHotaW5kZXg6IDk5OTk5O1xufVxuXG4ubG9hZGVyLWlubmVyIHtcbiAgYm90dG9tOiAwO1xuICBoZWlnaHQ6IDYwcHg7XG4gIGxlZnQ6IDA7XG4gIG1hcmdpbjogYXV0bztcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICByaWdodDogMDtcbiAgdG9wOiAwO1xuICB3aWR0aDogMTAwcHg7XG59XG5cbi5sb2FkZXItbGluZS13cmFwIHtcbiAgYW5pbWF0aW9uOiBzcGluIDIwMDBtcyBjdWJpYy1iZXppZXIoMC4xNzUsIDAuODg1LCAwLjMyLCAxLjI3NSkgaW5maW5pdGU7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIGhlaWdodDogNTBweDtcbiAgbGVmdDogMDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIHRyYW5zZm9ybS1vcmlnaW46IDUwJSAxMDAlO1xuICB3aWR0aDogMTAwcHg7XG59XG5cbi5sb2FkZXItbGluZSB7XG4gIGJvcmRlcjogNHB4IHNvbGlkIHRyYW5zcGFyZW50O1xuICBib3JkZXItcmFkaXVzOiAxMDAlO1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBoZWlnaHQ6IDEwMHB4O1xuICBsZWZ0OiAwO1xuICBtYXJnaW46IDAgYXV0bztcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICByaWdodDogMDtcbiAgdG9wOiAwO1xuICB3aWR0aDogMTAwcHg7XG59XG5cbi5sb2FkZXItbGluZS13cmFwOm50aC1jaGlsZCgxKSB7XG4gIGFuaW1hdGlvbi1kZWxheTogLTUwbXM7XG59XG5cbi5sb2FkZXItbGluZS13cmFwOm50aC1jaGlsZCgyKSB7XG4gIGFuaW1hdGlvbi1kZWxheTogLTEwMG1zO1xufVxuXG4ubG9hZGVyLWxpbmUtd3JhcDpudGgtY2hpbGQoMykge1xuICBhbmltYXRpb24tZGVsYXk6IC0xNTBtcztcbn1cblxuLmxvYWRlci1saW5lLXdyYXA6bnRoLWNoaWxkKDQpIHtcbiAgYW5pbWF0aW9uLWRlbGF5OiAtMjAwbXM7XG59XG5cbi5sb2FkZXItbGluZS13cmFwOm50aC1jaGlsZCg1KSB7XG4gIGFuaW1hdGlvbi1kZWxheTogLTI1MG1zO1xufVxuXG4ubG9hZGVyLWxpbmUtd3JhcDpudGgtY2hpbGQoMSkgLmxvYWRlci1saW5lIHtcbiAgYm9yZGVyLWNvbG9yOiAjZWI0NzQ3O1xuICBoZWlnaHQ6IDkwcHg7XG4gIHdpZHRoOiA5MHB4O1xuICB0b3A6IDdweDtcbn1cblxuLmxvYWRlci1saW5lLXdyYXA6bnRoLWNoaWxkKDIpIC5sb2FkZXItbGluZSB7XG4gIGJvcmRlci1jb2xvcjogI2ViZWI0NztcbiAgaGVpZ2h0OiA3NnB4O1xuICB3aWR0aDogNzZweDtcbiAgdG9wOiAxNHB4O1xufVxuXG4ubG9hZGVyLWxpbmUtd3JhcDpudGgtY2hpbGQoMykgLmxvYWRlci1saW5lIHtcbiAgYm9yZGVyLWNvbG9yOiAjNDdlYjQ3O1xuICBoZWlnaHQ6IDYycHg7XG4gIHdpZHRoOiA2MnB4O1xuICB0b3A6IDIxcHg7XG59XG5cbi5sb2FkZXItbGluZS13cmFwOm50aC1jaGlsZCg0KSAubG9hZGVyLWxpbmUge1xuICBib3JkZXItY29sb3I6ICM0N2ViZWI7XG4gIGhlaWdodDogNDhweDtcbiAgd2lkdGg6IDQ4cHg7XG4gIHRvcDogMjhweDtcbn1cblxuLmxvYWRlci1saW5lLXdyYXA6bnRoLWNoaWxkKDUpIC5sb2FkZXItbGluZSB7XG4gIGJvcmRlci1jb2xvcjogIzQ3NDdlYjtcbiAgaGVpZ2h0OiAzNHB4O1xuICB3aWR0aDogMzRweDtcbiAgdG9wOiAzNXB4O1xufVxuXG5Aa2V5ZnJhbWVzIHNwaW4ge1xuICAwJSwgMTUlIHtcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgwKTtcbiAgfVxuXG4gIDEwMCUge1xuICAgIHRyYW5zZm9ybTogcm90YXRlKDM2MGRlZyk7XG4gIH1cbn1cblxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vcmVzb3VyY2VzL2Fzc2V0cy9zYXNzL0M6L1VzZXJzL3VyaWFoL3NpdGVzL3d3dy9zdGFydGVyL2FwcC5zY3NzIl0sInNvdXJjZVJvb3QiOiIifQ==*/