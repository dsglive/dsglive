webpackJsonp([23],{

/***/ 1055:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("Object.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_Layouts_ModalLayout_vue__ = __webpack_require__(931);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_Layouts_ModalLayout_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_Layouts_ModalLayout_vue__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_Mixins_validation_error__ = __webpack_require__(930);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_vform__ = __webpack_require__(929);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_vform___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_vform__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_sweetalert2__ = __webpack_require__(153);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_sweetalert2___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_sweetalert2__);\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  components: {\n    ModalLayout: __WEBPACK_IMPORTED_MODULE_0_Layouts_ModalLayout_vue___default.a\n  },\n  mixins: [__WEBPACK_IMPORTED_MODULE_1_Mixins_validation_error__[\"a\" /* default */]],\n  data: function data() {\n    return {\n      /* Always Declare Your Form Object */\n      form: new __WEBPACK_IMPORTED_MODULE_2_vform__[\"Form\"]({\n        type: false,\n        client_id: null,\n        client_name: null,\n        customer_id: null,\n        customer_name: null,\n        date_delivered: null,\n        start_time: \"\",\n        end_time: \"\",\n        prep_time: 0,\n        travel_time: 0,\n        clean_up_time: 0,\n        total_time: 0,\n        rate: \"\",\n        surcharge: 0,\n        total_charges: \"\",\n        notes: null,\n        do_address_1: null,\n        do_address_2: null,\n        do_city: null,\n        do_state: null,\n        do_zip: null,\n        pu_address_1: null,\n        pu_address_2: null,\n        pu_city: null,\n        pu_state: null,\n        pu_zip: null,\n        packages: []\n      }),\n      date_delivered_modal: false,\n      customers: [],\n      clients: [],\n      client: {\n        id: null,\n        active: false,\n        name: null,\n        do_address_1: null,\n        do_address_2: null,\n        do_city: null,\n        do_state: null,\n        do_zip: null\n      },\n      packages: [],\n      selected: [],\n      unknownClient: {\n        active: false,\n        address_1: null,\n        address_2: null,\n        city: null,\n        id: 1,\n        name: \"Unknown Client\",\n        state: null,\n        zip: null\n      }\n    };\n  },\n  watch: {\n    customers: {\n      handler: function handler(newValue) {},\n      deep: true\n    },\n    \"form.customer_id\": {\n      handler: function handler(newValue) {\n        var self = this;\n        var customer_id = null;\n        var customer_name = null;\n\n        if (newValue != undefined) {\n          var customer = _.find(self.customers, function (c) {\n            return c.id === newValue;\n          });\n          self.clients = customer.clients;\n          _.remove(self.clients, {\n            id: 1\n          });\n          self.clients.unshift(self.unknownClient);\n          self.form.customer_name = customer.name;\n          self.form.client_name = null;\n          self.form.client_id = null;\n          customer_id = newValue;\n          customer_name = customer.name;\n        } else {\n          self.clients = [];\n          self.clients.push(self.unknownClient);\n          self.form.customer_id = null;\n          self.form.customer_name = null;\n          self.form.client_name = null;\n          self.form.client_id = null;\n        }\n      },\n      deep: false\n    },\n    \"form.client_name\": {\n      handler: function handler(newName) {\n        var self = this;\n        var client_id = null;\n        var client_name = newName;\n\n        if (newName != null || newName != undefined) {\n          if (self.clients.length > 0) {\n            var client = _.find(self.clients, function (c) {\n              return c.name == newName;\n            });\n            if (client != undefined) {\n              self.form.client_name = client.name;\n              self.form.client_id = client.id;\n              client_id = client.id;\n              client_name = client.name;\n              this.getClientPackages();\n              this.setDropOffAddress(client);\n            }\n          }\n        } else {\n          self.form.client_id = null;\n          self.form.client_name = null;\n        }\n      },\n      deep: false\n    },\n    \"form.start_time\": {\n      handler: function handler(newName) {\n        this.debouncedComputeTotal();\n      },\n      deep: false\n    },\n    \"form.end_time\": {\n      handler: function handler(newName) {\n        this.debouncedComputeTotal();\n      },\n      deep: false\n    },\n    \"form.prep_time\": {\n      handler: function handler(newName) {\n        this.debouncedComputeTotal();\n      },\n      deep: false\n    },\n    \"form.travel_time\": {\n      handler: function handler(newName) {\n        this.debouncedComputeTotal();\n      },\n      deep: false\n    },\n    \"form.clean_up_time\": {\n      handler: function handler(newName) {\n        this.debouncedComputeTotal();\n      },\n      deep: false\n    },\n    \"form.rate\": {\n      handler: function handler(newName) {\n        this.computeTotalCharge();\n      },\n      deep: false\n    },\n    \"form.surcharge\": {\n      handler: function handler(newName) {\n        this.computeTotalCharge();\n      },\n      deep: false\n    }\n  },\n  created: function created() {\n    this.debouncedComputeTotal = _.debounce(this.computeTotal, 2000);\n  },\n  mounted: function mounted() {\n    this.getInitialData();\n    this.form.date_delivered = moment().format(\"YYYY-MM-DD\");\n    this.form.type = \"field_transfer\";\n  },\n\n  methods: {\n    toggleAll: function toggleAll() {\n      var self = this;\n      if (this.selected.length === 0) {\n        this.selected = this.packages.map(function (item) {\n          return item.id;\n        });\n      } else {\n        this.selected = [];\n      }\n      this.form.packages = this.selected;\n    },\n    workingTime: function workingTime() {\n      var start_time = this.form.start_time;\n      var end_time = this.form.end_time;\n      var start_hr = 0;\n      var start_min = 0;\n      var end_hr = 0;\n      var end_min = 0;\n      if (start_time !== null) {\n        var start_count = (start_time.match(/\\d/g) || []).length;\n        if (start_count > 1) {\n          start_hr = parseInt(start_time.substring(0, 2));\n        }\n        if (start_count > 3) {\n          start_min = parseInt(start_time.substring(2, 4));\n        }\n      }\n      if (end_time !== null) {\n        var end_count = (end_time.match(/\\d/g) || []).length;\n        if (end_count > 1) {\n          end_hr = parseInt(end_time.substring(0, 2));\n        }\n        if (end_count > 3) {\n          end_min = parseInt(end_time.substring(2, 4));\n        }\n      }\n      var hr_diff = 0;\n      var min_diff = 0;\n      hr_diff = end_hr - start_hr;\n      if (hr_diff < 0) {\n        hr_diff = 0;\n      }\n      min_diff = Math.abs(end_min - start_min) / 60;\n      if (min_diff < 0) {\n        min_diff = 0;\n      }\n      return hr_diff + min_diff;\n    },\n    setDropOffAddress: function setDropOffAddress(client) {\n      this.client = {\n        id: client.id,\n        active: client.active,\n        name: client.name,\n        do_address_1: client.address_1,\n        do_address_2: client.address_2,\n        do_city: client.city,\n        do_state: client.state,\n        do_zip: client.zip\n      };\n      this.form.do_address_1 = client.address_1;\n      this.form.do_address_2 = client.address_2;\n      this.form.do_city = client.city;\n      this.form.do_state = client.state;\n      this.form.do_zip = client.zip;\n    },\n    computeTotal: function computeTotal() {\n      var working_time = this.workingTime();\n      var prep_time = this.form.prep_time ? this.form.prep_time : 0;\n      var travel_time = this.form.travel_time ? this.form.travel_time : 0;\n      var clean_up_time = this.form.clean_up_time ? this.form.clean_up_time : 0;\n      console.log(\"working_time\", parseFloat(working_time));\n      console.log(\"prep_time\", parseFloat(prep_time));\n      console.log(\"travel_time\", parseFloat(travel_time));\n      console.log(\"clean_up_time\", parseFloat(clean_up_time));\n      var total = 0;\n      total += parseFloat(working_time);\n      total += parseFloat(prep_time);\n      total += parseFloat(travel_time);\n      total += parseFloat(clean_up_time);\n      if (total < 0) {\n        total = 0;\n      }\n      this.form.total_time = total.toFixed(4);\n      return total;\n    },\n    computeTotalCharge: function computeTotalCharge() {\n      var total_time = parseFloat(this.form.total_time);\n      var rate = parseFloat(this.form.rate);\n      var surcharge = parseFloat(this.form.surcharge) / 100;\n      if (this.form.surcharge === null || this.form.surcharge === \"\") {\n        surcharge = 0;\n      }\n      var total_rate = total_time * rate;\n      var total = 0;\n      total = total_rate + surcharge * total_rate;\n      this.form.total_charges = total.toFixed(4);\n    },\n\n    getText: function getText(item) {\n      return \"DSG# \" + item.dsg_id + \"|Style# \" + item.style_no + \"|Description: \" + item.description;\n    },\n    getInitialData: function getInitialData() {\n      var _this = this;\n\n      axios.get(route(\"api.logistics.getInitialData\")).then(function (response) {\n        _this.customers = response.data.data.customers;\n      });\n    },\n    getClientPackages: function getClientPackages() {\n      var _this2 = this;\n\n      axios.get(route(\"api.logistics.getClientPackages\", {\n        client: this.form.client_id\n      })).then(function (response) {\n        _this2.form.packages = [];\n        _this2.packages = response.data;\n      });\n    },\n    submit: function submit() {\n      var self = this;\n      this.$validator.validateAll().then(function (result) {\n        if (result) {\n          // eslint-disable-next-line\n          self.createLogistics();\n        } else {\n          var validationModal = __WEBPACK_IMPORTED_MODULE_3_sweetalert2___default.a.mixin({\n            confirmButtonClass: \"v-btn blue-grey  subheading white--text\",\n            buttonsStyling: false\n          });\n          validationModal({\n            title: \"Validation Error\",\n            html: \"<p class=\\\"title\\\">Please Fix Form Errors</p>\",\n            type: \"warning\",\n            confirmButtonText: \"Back\"\n          });\n        }\n      });\n    },\n    createLogistics: function createLogistics() {\n      var self = this;\n      self.form.busy = true;\n      if (self.form.type === \"field_transfer\") {\n        delete self.form.packages;\n      }\n      if (self.form.type === \"delivery_ticket\") {\n        delete self.form.pu_address_1;\n        delete self.form.pu_address_2;\n        delete self.form.pu_city;\n        delete self.form.pu_state;\n        delete self.form.pu_zip;\n      }\n      self.form.post(route(\"api.logistics.create\"), self.form).then(function (response) {\n        console.log(response.data);\n        self.$validator.reset();\n        var successModal = __WEBPACK_IMPORTED_MODULE_3_sweetalert2___default.a.mixin({\n          confirmButtonClass: \"v-btn blue-grey  subheading white--text\",\n          buttonsStyling: false\n        });\n        successModal({\n          title: \"Success!\",\n          html: \"<p class=\\\"title\\\">Ticket Has Been Created!</p>\",\n          type: \"success\",\n          confirmButtonText: \"Ok\"\n        });\n        self.$nextTick(function () {\n          return self.$router.push({ name: \"logistics\" });\n        });\n      }).catch(function (errors) {\n        console.log(errors.response.data);\n        if (self.form.type === \"field_transfer\") {\n          self.form.packages = [];\n        }\n        if (self.form.type === \"delivery_ticket\") {\n          self.form.pu_address_1 = \"\";\n          self.form.pu_address_2 = \"\";\n          self.form.pu_city = \"\";\n          self.form.pu_state = \"\";\n          self.form.pu_zip = \"\";\n        }\n        var failedModal = __WEBPACK_IMPORTED_MODULE_3_sweetalert2___default.a.mixin({\n          confirmButtonClass: \"v-btn blue-grey  subheading white--text\",\n          buttonsStyling: false\n        });\n        failedModal({\n          title: \"Validation Error!\",\n          html: \"<p class=\\\"title\\\">Please Complete Form To Submit!</p>\",\n          type: \"error\",\n          confirmButtonText: \"Ok\"\n        });\n      });\n    },\n    redirectBack: function redirectBack() {\n      var self = this;\n      self.$nextTick(function () {\n        return self.$router.push({ name: \"logistics\" });\n      });\n    }\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1055\n");

/***/ }),

/***/ 1056:
/***/ (function(module, exports, __webpack_require__) {

eval("var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"modal-layout\",\n    { staticClass: \"white\" },\n    [\n      _c(\n        \"v-card\",\n        { attrs: { flat: true } },\n        [\n          _c(\n            \"v-toolbar\",\n            { staticClass: \"primary\", attrs: { fixed: \"\", app: \"\" } },\n            [\n              _c(\n                \"v-btn\",\n                {\n                  attrs: { flat: \"\", icon: \"\", color: \"white\" },\n                  nativeOn: {\n                    click: function($event) {\n                      _vm.redirectBack()\n                    }\n                  }\n                },\n                [_c(\"v-icon\", [_vm._v(\"arrow_back\")])],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\"v-spacer\"),\n              _vm._v(\" \"),\n              _c(\n                \"v-toolbar-title\",\n                { staticClass: \"text-xs-center white--text\" },\n                [_vm._v(\"Create New Ticket\")]\n              ),\n              _vm._v(\" \"),\n              _c(\"v-spacer\"),\n              _vm._v(\" \"),\n              _c(\n                \"v-toolbar-items\",\n                [\n                  _c(\n                    \"v-btn\",\n                    {\n                      attrs: {\n                        loading: _vm.form.busy,\n                        disabled: _vm.errors.any() || _vm.form.busy,\n                        flat: \"\",\n                        color: \"white\"\n                      },\n                      nativeOn: {\n                        click: function($event) {\n                          _vm.submit()\n                        }\n                      }\n                    },\n                    [\n                      _vm._v(\"\\n          Save\\n          \"),\n                      _c(\"v-icon\", { attrs: { right: \"\" } }, [_vm._v(\"save\")])\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"v-layout\",\n            {\n              attrs: {\n                row: \"\",\n                wrap: \"\",\n                \"my-0\": \"\",\n                \"py-0\": \"\",\n                \"mx-3\": \"\",\n                \"px-3\": \"\"\n              }\n            },\n            [\n              _c(\n                \"v-flex\",\n                { attrs: { xs12: \"\", lg2: \"\", \"offset-lg1\": \"\" } },\n                [\n                  _c(\n                    \"v-subheader\",\n                    {\n                      staticClass: \"indigo--text\",\n                      staticStyle: { \"margin-left\": \"-15px\" }\n                    },\n                    [\n                      _vm._v(\n                        \"\\n          What Type Of Ticket Is This?\\n        \"\n                      )\n                    ]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"v-radio-group\",\n                    {\n                      staticStyle: { \"margin-top\": \"-15px\" },\n                      model: {\n                        value: _vm.form.type,\n                        callback: function($$v) {\n                          _vm.$set(_vm.form, \"type\", $$v)\n                        },\n                        expression: \"form.type\"\n                      }\n                    },\n                    [\n                      _c(\"v-radio\", {\n                        attrs: {\n                          value: \"delivery_ticket\",\n                          label: \"Delivery Ticket\"\n                        }\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"v-radio\", {\n                        attrs: {\n                          value: \"field_transfer\",\n                          label: \"Field Transfer\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"v-flex\",\n                { attrs: { xs12: \"\", lg3: \"\" } },\n                [\n                  _c(\"v-autocomplete\", {\n                    directives: [\n                      {\n                        name: \"validate\",\n                        rawName: \"v-validate\",\n                        value: \"required\",\n                        expression: \"'required'\"\n                      }\n                    ],\n                    class: { \"error--text\": _vm.hasErrors(\"customer\") },\n                    attrs: {\n                      items: _vm.customers,\n                      \"error-messages\": _vm.errorMessages(\"customer\"),\n                      \"item-text\": \"name\",\n                      \"item-value\": \"id\",\n                      required: \"\",\n                      label: \"Choose Customer\",\n                      light: \"\",\n                      chips: \"\",\n                      \"prepend-icon\": \"supervised_user_circle\",\n                      \"data-vv-name\": \"customer\"\n                    },\n                    model: {\n                      value: _vm.form.customer_id,\n                      callback: function($$v) {\n                        _vm.$set(_vm.form, \"customer_id\", $$v)\n                      },\n                      expression: \"form.customer_id\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"v-flex\",\n                { attrs: { xs12: \"\", lg3: \"\" } },\n                [\n                  _c(\"v-combobox\", {\n                    directives: [\n                      {\n                        name: \"validate\",\n                        rawName: \"v-validate\",\n                        value: \"required\",\n                        expression: \"'required'\"\n                      }\n                    ],\n                    class: { \"error--text\": _vm.hasErrors(\"client\") },\n                    attrs: {\n                      items: _vm.clients,\n                      \"error-messages\": _vm.errorMessages(\"client\"),\n                      \"item-text\": \"name\",\n                      \"item-value\": \"name\",\n                      chips: \"\",\n                      light: \"\",\n                      dense: \"\",\n                      required: \"\",\n                      label: \"Choose Client or Type Name\",\n                      \"prepend-icon\": \"fa-users\",\n                      \"data-vv-name\": \"client\"\n                    },\n                    model: {\n                      value: _vm.form.client_name,\n                      callback: function($$v) {\n                        _vm.$set(_vm.form, \"client_name\", $$v)\n                      },\n                      expression: \"form.client_name\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"v-flex\",\n                { attrs: { xs12: \"\", lg2: \"\" } },\n                [\n                  _c(\n                    \"v-dialog\",\n                    {\n                      ref: \"date_delivered\",\n                      attrs: {\n                        \"return-value\": _vm.form.date_delivered,\n                        persistent: \"\",\n                        lazy: \"\",\n                        \"full-width\": \"\",\n                        width: \"290px\"\n                      },\n                      on: {\n                        \"update:returnValue\": function($event) {\n                          _vm.$set(_vm.form, \"date_delivered\", $event)\n                        }\n                      },\n                      model: {\n                        value: _vm.date_delivered_modal,\n                        callback: function($$v) {\n                          _vm.date_delivered_modal = $$v\n                        },\n                        expression: \"date_delivered_modal\"\n                      }\n                    },\n                    [\n                      _c(\"v-text-field\", {\n                        staticStyle: { \"margin-top\": \"26px\" },\n                        attrs: {\n                          slot: \"activator\",\n                          label: \"Delivery Date\",\n                          \"prepend-icon\": \"event_available\",\n                          readonly: \"\"\n                        },\n                        slot: \"activator\",\n                        model: {\n                          value: _vm.form.date_delivered,\n                          callback: function($$v) {\n                            _vm.$set(_vm.form, \"date_delivered\", $$v)\n                          },\n                          expression: \"form.date_delivered\"\n                        }\n                      }),\n                      _vm._v(\" \"),\n                      _c(\n                        \"v-date-picker\",\n                        {\n                          attrs: { scrollable: \"\" },\n                          model: {\n                            value: _vm.form.date_delivered,\n                            callback: function($$v) {\n                              _vm.$set(_vm.form, \"date_delivered\", $$v)\n                            },\n                            expression: \"form.date_delivered\"\n                          }\n                        },\n                        [\n                          _c(\"v-spacer\"),\n                          _vm._v(\" \"),\n                          _c(\n                            \"v-btn\",\n                            {\n                              attrs: { flat: \"\", color: \"primary\" },\n                              on: {\n                                click: function($event) {\n                                  _vm.date_delivered_modal = false\n                                }\n                              }\n                            },\n                            [_vm._v(\"Cancel\")]\n                          ),\n                          _vm._v(\" \"),\n                          _c(\n                            \"v-btn\",\n                            {\n                              attrs: { flat: \"\", color: \"primary\" },\n                              on: {\n                                click: function($event) {\n                                  _vm.$refs.date_delivered.save(\n                                    _vm.form.date_delivered\n                                  )\n                                }\n                              }\n                            },\n                            [_vm._v(\"OK\")]\n                          )\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"v-flex\",\n                { attrs: { xs12: \"\", lg2: \"\", \"offset-lg1\": \"\" } },\n                [\n                  _c(\"v-text-field\", {\n                    directives: [\n                      {\n                        name: \"validate\",\n                        rawName: \"v-validate\",\n                        value: {\n                          regex: /^(((([0-1][0-9])|(2[0-3])):?[0-5][0-9])|(24:?00))$/\n                        },\n                        expression:\n                          \"{ regex:/^(((([0-1][0-9])|(2[0-3])):?[0-5][0-9])|(24:?00))$/}\"\n                      }\n                    ],\n                    class: { \"error--text\": _vm.hasErrors(\"start_time\") },\n                    attrs: {\n                      \"error-messages\": _vm.errorMessages(\"start_time\"),\n                      light: \"\",\n                      label: \"Start Time\",\n                      \"prepend-icon\": \"timer\",\n                      \"data-vv-name\": \"start_time\"\n                    },\n                    model: {\n                      value: _vm.form.start_time,\n                      callback: function($$v) {\n                        _vm.$set(_vm.form, \"start_time\", $$v)\n                      },\n                      expression: \"form.start_time\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"v-flex\",\n                { attrs: { xs12: \"\", lg2: \"\" } },\n                [\n                  _c(\"v-text-field\", {\n                    directives: [\n                      {\n                        name: \"validate\",\n                        rawName: \"v-validate\",\n                        value: {\n                          regex: /^(((([0-1][0-9])|(2[0-3])):?[0-5][0-9])|(24:?00))$/,\n                          min_value: _vm.form.start_time\n                        },\n                        expression:\n                          \"{ regex:/^(((([0-1][0-9])|(2[0-3])):?[0-5][0-9])|(24:?00))$/,min_value:form.start_time}\"\n                      }\n                    ],\n                    class: { \"error--text\": _vm.hasErrors(\"end_time\") },\n                    attrs: {\n                      \"error-messages\": _vm.errorMessages(\"end_time\"),\n                      light: \"\",\n                      label: \"End Time\",\n                      \"prepend-icon\": \"timer\",\n                      \"data-vv-name\": \"end_time\"\n                    },\n                    model: {\n                      value: _vm.form.end_time,\n                      callback: function($$v) {\n                        _vm.$set(_vm.form, \"end_time\", $$v)\n                      },\n                      expression: \"form.end_time\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"v-flex\",\n                { attrs: { xs12: \"\", lg2: \"\" } },\n                [\n                  _c(\"v-text-field\", {\n                    directives: [\n                      {\n                        name: \"validate\",\n                        rawName: \"v-validate\",\n                        value: { decimal: 4, min_value: 0 },\n                        expression: \"{ decimal:4, min_value:0 }\"\n                      }\n                    ],\n                    class: { \"error--text\": _vm.hasErrors(\"prep_time\") },\n                    attrs: {\n                      \"error-messages\": _vm.errorMessages(\"prep_time\"),\n                      light: \"\",\n                      label: \"Prep Time\",\n                      \"prepend-icon\": \"access_time\",\n                      \"data-vv-name\": \"prep_time\"\n                    },\n                    model: {\n                      value: _vm.form.prep_time,\n                      callback: function($$v) {\n                        _vm.$set(_vm.form, \"prep_time\", $$v)\n                      },\n                      expression: \"form.prep_time\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"v-flex\",\n                { attrs: { xs12: \"\", lg2: \"\" } },\n                [\n                  _c(\"v-text-field\", {\n                    directives: [\n                      {\n                        name: \"validate\",\n                        rawName: \"v-validate\",\n                        value: { decimal: 4, min_value: 0 },\n                        expression: \"{ decimal:4, min_value:0 }\"\n                      }\n                    ],\n                    class: { \"error--text\": _vm.hasErrors(\"travel_time\") },\n                    attrs: {\n                      \"error-messages\": _vm.errorMessages(\"travel_time\"),\n                      light: \"\",\n                      label: \"Travel Time\",\n                      \"prepend-icon\": \"access_time\",\n                      \"data-vv-name\": \"travel_time\"\n                    },\n                    model: {\n                      value: _vm.form.travel_time,\n                      callback: function($$v) {\n                        _vm.$set(_vm.form, \"travel_time\", $$v)\n                      },\n                      expression: \"form.travel_time\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"v-flex\",\n                { attrs: { xs12: \"\", lg2: \"\" } },\n                [\n                  _c(\"v-text-field\", {\n                    directives: [\n                      {\n                        name: \"validate\",\n                        rawName: \"v-validate\",\n                        value: { decimal: 4, min_value: 0 },\n                        expression: \"{ decimal:4, min_value:0 }\"\n                      }\n                    ],\n                    class: { \"error--text\": _vm.hasErrors(\"clean_up_time\") },\n                    attrs: {\n                      \"error-messages\": _vm.errorMessages(\"clean_up_time\"),\n                      light: \"\",\n                      label: \"Clean Up Time\",\n                      \"prepend-icon\": \"access_time\",\n                      \"data-vv-name\": \"clean_up_time\"\n                    },\n                    model: {\n                      value: _vm.form.clean_up_time,\n                      callback: function($$v) {\n                        _vm.$set(_vm.form, \"clean_up_time\", $$v)\n                      },\n                      expression: \"form.clean_up_time\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"v-flex\",\n                { attrs: { xs12: \"\", lg2: \"\", \"offset-lg1\": \"\" } },\n                [\n                  _c(\"v-text-field\", {\n                    directives: [\n                      {\n                        name: \"validate\",\n                        rawName: \"v-validate\",\n                        value: { decimal: 4, min_value: 0 },\n                        expression: \"{ decimal:4, min_value:0 }\"\n                      }\n                    ],\n                    class: { \"error--text\": _vm.hasErrors(\"total_time\") },\n                    attrs: {\n                      \"error-messages\": _vm.errorMessages(\"total_time\"),\n                      light: \"\",\n                      readonly: \"\",\n                      disabled: \"\",\n                      label: \"Total Time\",\n                      \"prepend-icon\": \"av_timer\",\n                      \"data-vv-name\": \"total_time\",\n                      hint: \"Total No. Of Hours\",\n                      \"persistent-hint\": \"\"\n                    },\n                    model: {\n                      value: _vm.form.total_time,\n                      callback: function($$v) {\n                        _vm.$set(_vm.form, \"total_time\", $$v)\n                      },\n                      expression: \"form.total_time\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"v-flex\",\n                { attrs: { xs12: \"\", lg2: \"\" } },\n                [\n                  _c(\"v-text-field\", {\n                    directives: [\n                      {\n                        name: \"validate\",\n                        rawName: \"v-validate\",\n                        value: { decimal: 4, min_value: 0 },\n                        expression: \"{ decimal:4, min_value:0 }\"\n                      }\n                    ],\n                    class: { \"error--text\": _vm.hasErrors(\"rate\") },\n                    attrs: {\n                      \"error-messages\": _vm.errorMessages(\"rate\"),\n                      light: \"\",\n                      label: \"Rate\",\n                      \"prepend-icon\": \"fa-money\",\n                      \"data-vv-name\": \"rate\",\n                      hint: \"Delivery Charge Rate\",\n                      \"persistent-hint\": \"\"\n                    },\n                    model: {\n                      value: _vm.form.rate,\n                      callback: function($$v) {\n                        _vm.$set(_vm.form, \"rate\", $$v)\n                      },\n                      expression: \"form.rate\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"v-flex\",\n                { attrs: { xs12: \"\", lg3: \"\" } },\n                [\n                  _c(\"v-text-field\", {\n                    directives: [\n                      {\n                        name: \"validate\",\n                        rawName: \"v-validate\",\n                        value: { decimal: 4, min_value: 0 },\n                        expression: \"{ decimal:4, min_value:0 }\"\n                      }\n                    ],\n                    class: { \"error--text\": _vm.hasErrors(\"surcharge\") },\n                    attrs: {\n                      \"error-messages\": _vm.errorMessages(\"surcharge\"),\n                      light: \"\",\n                      label: \"Surchage\",\n                      \"prepend-icon\": \"money\",\n                      \"append-icon\": \"fa-percent\",\n                      \"data-vv-name\": \"surcharge\",\n                      hint: \"Percentage ie. 20% = 20\",\n                      \"persistent-hint\": \"\"\n                    },\n                    model: {\n                      value: _vm.form.surcharge,\n                      callback: function($$v) {\n                        _vm.$set(_vm.form, \"surcharge\", $$v)\n                      },\n                      expression: \"form.surcharge\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"v-flex\",\n                { attrs: { xs12: \"\", lg3: \"\" } },\n                [\n                  _c(\"v-text-field\", {\n                    directives: [\n                      {\n                        name: \"validate\",\n                        rawName: \"v-validate\",\n                        value: { decimal: 4, min_value: 0 },\n                        expression: \"{ decimal:4, min_value:0 }\"\n                      }\n                    ],\n                    class: { \"error--text\": _vm.hasErrors(\"total_charges\") },\n                    attrs: {\n                      \"error-messages\": _vm.errorMessages(\"total_charges\"),\n                      light: \"\",\n                      readonly: \"\",\n                      disabled: \"\",\n                      label: \"Total Charges\",\n                      \"prepend-icon\": \"attach_money\",\n                      suffix: \"USD\",\n                      \"data-vv-name\": \"total_charges\",\n                      hint: \"Delivery Fee\",\n                      \"persistent-hint\": \"\"\n                    },\n                    model: {\n                      value: _vm.form.total_charges,\n                      callback: function($$v) {\n                        _vm.$set(_vm.form, \"total_charges\", $$v)\n                      },\n                      expression: \"form.total_charges\"\n                    }\n                  })\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _vm.form.type === \"field_transfer\"\n            ? _c(\n                \"v-layout\",\n                {\n                  attrs: {\n                    row: \"\",\n                    wrap: \"\",\n                    \"my-0\": \"\",\n                    \"py-0\": \"\",\n                    \"mx-3\": \"\",\n                    \"px-3\": \"\"\n                  }\n                },\n                [\n                  _c(\n                    \"v-flex\",\n                    { attrs: { xs12: \"\", lg10: \"\", \"offset-lg1\": \"\" } },\n                    [\n                      _c(\n                        \"v-alert\",\n                        {\n                          staticClass: \"text-xs-center\",\n                          attrs: {\n                            value: true,\n                            type: \"info\",\n                            color: \"secondary\",\n                            \"my-0\": \"\",\n                            \"py-0\": \"\",\n                            \"mx-3\": \"\",\n                            \"px-3\": \"\"\n                          }\n                        },\n                        [_vm._v(\"\\n          Pick Up Address\\n        \")]\n                      )\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"v-flex\",\n                    { attrs: { xs12: \"\", lg2: \"\", \"offset-lg1\": \"\" } },\n                    [\n                      _c(\"v-text-field\", {\n                        attrs: {\n                          light: \"\",\n                          label: \"Address 1\",\n                          \"prepend-icon\": \"looks_one\"\n                        },\n                        model: {\n                          value: _vm.form.pu_address_1,\n                          callback: function($$v) {\n                            _vm.$set(_vm.form, \"pu_address_1\", $$v)\n                          },\n                          expression: \"form.pu_address_1\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"v-flex\",\n                    { attrs: { xs12: \"\", lg2: \"\" } },\n                    [\n                      _c(\"v-text-field\", {\n                        attrs: {\n                          light: \"\",\n                          label: \"Address 2\",\n                          \"prepend-icon\": \"looks_two\"\n                        },\n                        model: {\n                          value: _vm.form.pu_address_2,\n                          callback: function($$v) {\n                            _vm.$set(_vm.form, \"pu_address_2\", $$v)\n                          },\n                          expression: \"form.pu_address_2\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"v-flex\",\n                    { attrs: { xs12: \"\", lg2: \"\" } },\n                    [\n                      _c(\"v-text-field\", {\n                        attrs: {\n                          light: \"\",\n                          label: \"City\",\n                          \"prepend-icon\": \"location_city\"\n                        },\n                        model: {\n                          value: _vm.form.pu_city,\n                          callback: function($$v) {\n                            _vm.$set(_vm.form, \"pu_city\", $$v)\n                          },\n                          expression: \"form.pu_city\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"v-flex\",\n                    { attrs: { xs12: \"\", lg2: \"\" } },\n                    [\n                      _c(\"v-text-field\", {\n                        attrs: {\n                          light: \"\",\n                          label: \"State\",\n                          \"prepend-icon\": \"map\"\n                        },\n                        model: {\n                          value: _vm.form.pu_state,\n                          callback: function($$v) {\n                            _vm.$set(_vm.form, \"pu_state\", $$v)\n                          },\n                          expression: \"form.pu_state\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"v-flex\",\n                    { attrs: { xs12: \"\", lg2: \"\" } },\n                    [\n                      _c(\"v-text-field\", {\n                        directives: [\n                          {\n                            name: \"validate\",\n                            rawName: \"v-validate\",\n                            value: { regex: /^\\d{5}(?:[-\\s]\\d{4})?$/ },\n                            expression: \"{ regex: /^\\\\d{5}(?:[-\\\\s]\\\\d{4})?$/ }\"\n                          }\n                        ],\n                        class: { \"error--text\": _vm.hasErrors(\"pu_zip\") },\n                        attrs: {\n                          \"error-messages\": _vm.errorMessages(\"pu_zip\"),\n                          light: \"\",\n                          label: \"Zip\",\n                          \"prepend-icon\": \"markunread_mailbox\",\n                          \"data-vv-name\": \"pu_zip\"\n                        },\n                        model: {\n                          value: _vm.form.pu_zip,\n                          callback: function($$v) {\n                            _vm.$set(_vm.form, \"pu_zip\", $$v)\n                          },\n                          expression: \"form.pu_zip\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            : _vm._e(),\n          _vm._v(\" \"),\n          _c(\n            \"v-layout\",\n            {\n              attrs: {\n                row: \"\",\n                wrap: \"\",\n                \"my-0\": \"\",\n                \"py-0\": \"\",\n                \"mx-3\": \"\",\n                \"px-3\": \"\"\n              }\n            },\n            [\n              _c(\n                \"v-flex\",\n                { attrs: { xs12: \"\", lg10: \"\", \"offset-lg1\": \"\" } },\n                [\n                  _c(\"span\", { staticClass: \"text-xs-center title\" }),\n                  _vm._v(\" \"),\n                  _c(\n                    \"v-alert\",\n                    {\n                      staticClass: \"text-xs-center\",\n                      attrs: {\n                        value: true,\n                        type: \"info\",\n                        color: \"secondary\",\n                        \"my-0\": \"\",\n                        \"py-0\": \"\",\n                        \"mx-3\": \"\",\n                        \"px-3\": \"\"\n                      }\n                    },\n                    [_vm._v(\"\\n          Drop Off Address\\n        \")]\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"v-flex\",\n                { attrs: { xs12: \"\", lg2: \"\", \"offset-lg1\": \"\" } },\n                [\n                  _c(\"v-text-field\", {\n                    attrs: {\n                      light: \"\",\n                      label: \"Address 1\",\n                      \"prepend-icon\": \"looks_one\"\n                    },\n                    model: {\n                      value: _vm.form.do_address_1,\n                      callback: function($$v) {\n                        _vm.$set(_vm.form, \"do_address_1\", $$v)\n                      },\n                      expression: \"form.do_address_1\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"v-flex\",\n                { attrs: { xs12: \"\", lg2: \"\" } },\n                [\n                  _c(\"v-text-field\", {\n                    attrs: {\n                      light: \"\",\n                      label: \"Address 2\",\n                      \"prepend-icon\": \"looks_two\"\n                    },\n                    model: {\n                      value: _vm.form.do_address_2,\n                      callback: function($$v) {\n                        _vm.$set(_vm.form, \"do_address_2\", $$v)\n                      },\n                      expression: \"form.do_address_2\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"v-flex\",\n                { attrs: { xs12: \"\", lg2: \"\" } },\n                [\n                  _c(\"v-text-field\", {\n                    attrs: {\n                      light: \"\",\n                      label: \"City\",\n                      \"prepend-icon\": \"location_city\"\n                    },\n                    model: {\n                      value: _vm.form.do_city,\n                      callback: function($$v) {\n                        _vm.$set(_vm.form, \"do_city\", $$v)\n                      },\n                      expression: \"form.do_city\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"v-flex\",\n                { attrs: { xs12: \"\", lg2: \"\" } },\n                [\n                  _c(\"v-text-field\", {\n                    attrs: { light: \"\", label: \"State\", \"prepend-icon\": \"map\" },\n                    model: {\n                      value: _vm.form.do_state,\n                      callback: function($$v) {\n                        _vm.$set(_vm.form, \"do_state\", $$v)\n                      },\n                      expression: \"form.do_state\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"v-flex\",\n                { attrs: { xs12: \"\", lg2: \"\" } },\n                [\n                  _c(\"v-text-field\", {\n                    directives: [\n                      {\n                        name: \"validate\",\n                        rawName: \"v-validate\",\n                        value: { regex: /^\\d{5}(?:[-\\s]\\d{4})?$/ },\n                        expression: \"{ regex: /^\\\\d{5}(?:[-\\\\s]\\\\d{4})?$/ }\"\n                      }\n                    ],\n                    class: { \"error--text\": _vm.hasErrors(\"do_zip\") },\n                    attrs: {\n                      \"error-messages\": _vm.errorMessages(\"do_zip\"),\n                      light: \"\",\n                      label: \"Zip\",\n                      \"prepend-icon\": \"markunread_mailbox\",\n                      \"data-vv-name\": \"do_zip\"\n                    },\n                    model: {\n                      value: _vm.form.do_zip,\n                      callback: function($$v) {\n                        _vm.$set(_vm.form, \"do_zip\", $$v)\n                      },\n                      expression: \"form.do_zip\"\n                    }\n                  })\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _vm.form.type === \"delivery_ticket\"\n            ? _c(\n                \"v-layout\",\n                {\n                  attrs: {\n                    row: \"\",\n                    wrap: \"\",\n                    \"my-0\": \"\",\n                    \"py-0\": \"\",\n                    \"mx-3\": \"\",\n                    \"px-3\": \"\"\n                  }\n                },\n                [\n                  _c(\n                    \"v-flex\",\n                    { attrs: { xs10: \"\", \"offset-xs1\": \"\" } },\n                    [\n                      _c(\"v-subheader\", [\n                        _vm._v(\n                          \"\\n          Packages To Be Delivered (\" +\n                            _vm._s(_vm.packages.length) +\n                            \")\\n        \"\n                        )\n                      ]),\n                      _vm._v(\" \"),\n                      _vm.packages.length > 1\n                        ? _c(\n                            \"v-btn\",\n                            {\n                              attrs: { color: \"secondary\" },\n                              on: { click: _vm.toggleAll }\n                            },\n                            [\n                              _vm.selected.length === 0\n                                ? _c(\"span\", [_vm._v(\"Select All\")])\n                                : _c(\"span\", [_vm._v(\"Unselect All\")])\n                            ]\n                          )\n                        : _vm._e(),\n                      _vm._v(\" \"),\n                      _c(\"v-autocomplete\", {\n                        directives: [\n                          {\n                            name: \"validate\",\n                            rawName: \"v-validate\",\n                            value: \"required\",\n                            expression: \"'required'\"\n                          }\n                        ],\n                        class: { \"error--text\": _vm.hasErrors(\"packages\") },\n                        attrs: {\n                          items: _vm.packages,\n                          \"error-messages\": _vm.errorMessages(\"packages\"),\n                          \"item-text\": _vm.getText,\n                          \"item-value\": \"id\",\n                          hint: \"Choose Packages To Be Delivered\",\n                          \"persistent-hint\": \"\",\n                          \"no-data-text\": \"No Client's Packages For Delivery\",\n                          required: \"\",\n                          \"max-height\": \"auto\",\n                          light: \"\",\n                          outline: \"\",\n                          tags: \"\",\n                          chips: \"\",\n                          \"deletable-chips\": \"\",\n                          \"full-width\": \"\",\n                          multiple: \"\",\n                          \"multi-line\": \"\",\n                          dense: \"\",\n                          auto: \"\",\n                          \"hide-selected\": \"\",\n                          \"small-chips\": \"\",\n                          clearable: \"\",\n                          \"data-vv-name\": \"packages\"\n                        },\n                        model: {\n                          value: _vm.form.packages,\n                          callback: function($$v) {\n                            _vm.$set(_vm.form, \"packages\", $$v)\n                          },\n                          expression: \"form.packages\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            : _vm._e(),\n          _vm._v(\" \"),\n          _c(\n            \"v-layout\",\n            {\n              attrs: {\n                row: \"\",\n                wrap: \"\",\n                \"my-0\": \"\",\n                \"py-0\": \"\",\n                \"mx-3\": \"\",\n                \"px-3\": \"\"\n              }\n            },\n            [\n              _c(\n                \"v-flex\",\n                { attrs: { xs10: \"\", \"offset-xs1\": \"\" } },\n                [\n                  _c(\"v-subheader\", [_vm._v(\"\\n          Notes:\\n        \")]),\n                  _vm._v(\" \"),\n                  _c(\"v-textarea\", {\n                    attrs: {\n                      counter: \"\",\n                      maxlength: \"255\",\n                      \"full-width\": \"\",\n                      outline: \"\",\n                      hint: \"(Optional)\",\n                      \"persistent-hint\": \"\"\n                    },\n                    model: {\n                      value: _vm.form.notes,\n                      callback: function($$v) {\n                        _vm.$set(_vm.form, \"notes\", $$v)\n                      },\n                      expression: \"form.notes\"\n                    }\n                  })\n                ],\n                1\n              )\n            ],\n            1\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\nmodule.exports = { render: render, staticRenderFns: staticRenderFns }\nif (false) {\n  module.hot.accept()\n  if (module.hot.data) {\n    require(\"vue-hot-reload-api\")      .rerender(\"data-v-10ca036e\", module.exports)\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1056\n");

/***/ }),

/***/ 922:
/***/ (function(module, exports, __webpack_require__) {

eval("var disposed = false\nvar normalizeComponent = __webpack_require__(370)\n/* script */\nvar __vue_script__ = __webpack_require__(1055)\n/* template */\nvar __vue_template__ = __webpack_require__(1056)\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\nComponent.options.__file = \"resources/assets/js/pages/Logistics/CreateLogistics.vue\"\n\n/* hot reload */\nif (false) {(function () {\n  var hotAPI = require(\"vue-hot-reload-api\")\n  hotAPI.install(require(\"vue\"), false)\n  if (!hotAPI.compatible) return\n  module.hot.accept()\n  if (!module.hot.data) {\n    hotAPI.createRecord(\"data-v-10ca036e\", Component.options)\n  } else {\n    hotAPI.reload(\"data-v-10ca036e\", Component.options)\n  }\n  module.hot.dispose(function (data) {\n    disposed = true\n  })\n})()}\n\nmodule.exports = Component.exports\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvYXNzZXRzL2pzL3BhZ2VzL0xvZ2lzdGljcy9DcmVhdGVMb2dpc3RpY3MudnVlP2NlZjkiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0EsNkNBQTBaO0FBQzFaO0FBQ0EsK0NBQW1MO0FBQ25MO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxZQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsQ0FBQzs7QUFFRCIsImZpbGUiOiI5MjIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZGlzcG9zZWQgPSBmYWxzZVxudmFyIG5vcm1hbGl6ZUNvbXBvbmVudCA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2NvbXBvbmVudC1ub3JtYWxpemVyXCIpXG4vKiBzY3JpcHQgKi9cbnZhciBfX3Z1ZV9zY3JpcHRfXyA9IHJlcXVpcmUoXCIhIWJhYmVsLWxvYWRlcj97XFxcImNhY2hlRGlyZWN0b3J5XFxcIjp0cnVlLFxcXCJwcmVzZXRzXFxcIjpbW1xcXCJlbnZcXFwiLHtcXFwibW9kdWxlc1xcXCI6ZmFsc2UsXFxcInRhcmdldHNcXFwiOntcXFwiYnJvd3NlcnNcXFwiOltcXFwiPiAyJVxcXCJdLFxcXCJ1Z2xpZnlcXFwiOnRydWV9fV0sW1xcXCJ2dWUtYXBwXFxcIl1dLFxcXCJwbHVnaW5zXFxcIjpbXFxcInRyYW5zZm9ybS1vYmplY3QtcmVzdC1zcHJlYWRcXFwiLFtcXFwidHJhbnNmb3JtLXJ1bnRpbWVcXFwiLHtcXFwicG9seWZpbGxcXFwiOmZhbHNlLFxcXCJoZWxwZXJzXFxcIjpmYWxzZX1dLFtcXFwidHJhbnNmb3JtLWltcG9ydHNcXFwiLHtcXFwidnVldGlmeVxcXCI6e1xcXCJ0cmFuc2Zvcm1cXFwiOlxcXCJ2dWV0aWZ5L2VzNS9jb21wb25lbnRzLyR7bWVtYmVyfVxcXCIsXFxcInByZXZlbnRGdWxsSW1wb3J0XFxcIjp0cnVlfX1dXX0hLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3NlbGVjdG9yP3R5cGU9c2NyaXB0JmluZGV4PTAhLi9DcmVhdGVMb2dpc3RpY3MudnVlXCIpXG4vKiB0ZW1wbGF0ZSAqL1xudmFyIF9fdnVlX3RlbXBsYXRlX18gPSByZXF1aXJlKFwiISEuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvdGVtcGxhdGUtY29tcGlsZXIvaW5kZXg/e1xcXCJpZFxcXCI6XFxcImRhdGEtdi0xMGNhMDM2ZVxcXCIsXFxcImhhc1Njb3BlZFxcXCI6ZmFsc2UsXFxcImJ1YmxlXFxcIjp7XFxcInRyYW5zZm9ybXNcXFwiOnt9fX0hLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3NlbGVjdG9yP3R5cGU9dGVtcGxhdGUmaW5kZXg9MCEuL0NyZWF0ZUxvZ2lzdGljcy52dWVcIilcbi8qIHRlbXBsYXRlIGZ1bmN0aW9uYWwgKi9cbnZhciBfX3Z1ZV90ZW1wbGF0ZV9mdW5jdGlvbmFsX18gPSBmYWxzZVxuLyogc3R5bGVzICovXG52YXIgX192dWVfc3R5bGVzX18gPSBudWxsXG4vKiBzY29wZUlkICovXG52YXIgX192dWVfc2NvcGVJZF9fID0gbnVsbFxuLyogbW9kdWxlSWRlbnRpZmllciAoc2VydmVyIG9ubHkpICovXG52YXIgX192dWVfbW9kdWxlX2lkZW50aWZpZXJfXyA9IG51bGxcbnZhciBDb21wb25lbnQgPSBub3JtYWxpemVDb21wb25lbnQoXG4gIF9fdnVlX3NjcmlwdF9fLFxuICBfX3Z1ZV90ZW1wbGF0ZV9fLFxuICBfX3Z1ZV90ZW1wbGF0ZV9mdW5jdGlvbmFsX18sXG4gIF9fdnVlX3N0eWxlc19fLFxuICBfX3Z1ZV9zY29wZUlkX18sXG4gIF9fdnVlX21vZHVsZV9pZGVudGlmaWVyX19cbilcbkNvbXBvbmVudC5vcHRpb25zLl9fZmlsZSA9IFwicmVzb3VyY2VzL2Fzc2V0cy9qcy9wYWdlcy9Mb2dpc3RpY3MvQ3JlYXRlTG9naXN0aWNzLnZ1ZVwiXG5cbi8qIGhvdCByZWxvYWQgKi9cbmlmIChtb2R1bGUuaG90KSB7KGZ1bmN0aW9uICgpIHtcbiAgdmFyIGhvdEFQSSA9IHJlcXVpcmUoXCJ2dWUtaG90LXJlbG9hZC1hcGlcIilcbiAgaG90QVBJLmluc3RhbGwocmVxdWlyZShcInZ1ZVwiKSwgZmFsc2UpXG4gIGlmICghaG90QVBJLmNvbXBhdGlibGUpIHJldHVyblxuICBtb2R1bGUuaG90LmFjY2VwdCgpXG4gIGlmICghbW9kdWxlLmhvdC5kYXRhKSB7XG4gICAgaG90QVBJLmNyZWF0ZVJlY29yZChcImRhdGEtdi0xMGNhMDM2ZVwiLCBDb21wb25lbnQub3B0aW9ucylcbiAgfSBlbHNlIHtcbiAgICBob3RBUEkucmVsb2FkKFwiZGF0YS12LTEwY2EwMzZlXCIsIENvbXBvbmVudC5vcHRpb25zKVxuICB9XG4gIG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbiAoZGF0YSkge1xuICAgIGRpc3Bvc2VkID0gdHJ1ZVxuICB9KVxufSkoKX1cblxubW9kdWxlLmV4cG9ydHMgPSBDb21wb25lbnQuZXhwb3J0c1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9yZXNvdXJjZXMvYXNzZXRzL2pzL3BhZ2VzL0xvZ2lzdGljcy9DcmVhdGVMb2dpc3RpY3MudnVlXG4vLyBtb2R1bGUgaWQgPSA5MjJcbi8vIG1vZHVsZSBjaHVua3MgPSAyMyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///922\n");

/***/ }),

/***/ 929:
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"./\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(\"lVK7\");\n\n\n/***/ }),\n\n/***/ \"OMN4\":\n/***/ (function(module, exports) {\n\nmodule.exports = __webpack_require__(371);\n\n/***/ }),\n\n/***/ \"lVK7\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n\n// EXTERNAL MODULE: external \"axios\"\nvar external__axios_ = __webpack_require__(\"OMN4\");\nvar external__axios__default = /*#__PURE__*/__webpack_require__.n(external__axios_);\n\n// CONCATENATED MODULE: ./src/util.js\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\r\n * Deep copy the given object.\r\n *\r\n * @param  {Object} obj\r\n * @return {Object}\r\n */\nfunction deepCopy(obj) {\n  if (obj === null || _typeof(obj) !== 'object') {\n    return obj;\n  }\n\n  var copy = Array.isArray(obj) ? [] : {};\n  Object.keys(obj).forEach(function (key) {\n    copy[key] = deepCopy(obj[key]);\n  });\n  return copy;\n}\n/**\r\n * If the given value is not an array, wrap it in one.\r\n *\r\n * @param  {Any} value\r\n * @return {Array}\r\n */\n\nfunction arrayWrap(value) {\n  return Array.isArray(value) ? value : [value];\n}\n// CONCATENATED MODULE: ./src/Errors.js\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction Errors__typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { Errors__typeof = function _typeof(obj) { return typeof obj; }; } else { Errors__typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return Errors__typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\nvar Errors_Errors =\n/*#__PURE__*/\nfunction () {\n  /**\r\n   * Create a new error bag instance.\r\n   */\n  function Errors() {\n    _classCallCheck(this, Errors);\n\n    this.errors = {};\n  }\n  /**\r\n   * Set the errors object or field error messages.\r\n   *\r\n   * @param {Object|String} field\r\n   * @param {Array|String|undefined} messages\r\n   */\n\n\n  _createClass(Errors, [{\n    key: \"set\",\n    value: function set(field, messages) {\n      if (Errors__typeof(field) === 'object') {\n        this.errors = field;\n      } else {\n        this.set(_extends({}, this.errors, _defineProperty({}, field, arrayWrap(messages))));\n      }\n    }\n    /**\r\n     * Get all the errors.\r\n     *\r\n     * @return {Object}\r\n     */\n\n  }, {\n    key: \"all\",\n    value: function all() {\n      return this.errors;\n    }\n    /**\r\n     * Determine if there is an error for the given field.\r\n     *\r\n     * @param  {String} field\r\n     * @return {Boolean}\r\n     */\n\n  }, {\n    key: \"has\",\n    value: function has(field) {\n      return this.errors.hasOwnProperty(field);\n    }\n    /**\r\n     * Determine if there are any errors for the given fields.\r\n     *\r\n     * @param  {...String} fields\r\n     * @return {Boolean}\r\n     */\n\n  }, {\n    key: \"hasAny\",\n    value: function hasAny() {\n      var _this = this;\n\n      for (var _len = arguments.length, fields = new Array(_len), _key = 0; _key < _len; _key++) {\n        fields[_key] = arguments[_key];\n      }\n\n      return fields.some(function (field) {\n        return _this.has(field);\n      });\n    }\n    /**\r\n     * Determine if there are any errors.\r\n     *\r\n     * @return {Boolean}\r\n     */\n\n  }, {\n    key: \"any\",\n    value: function any() {\n      return Object.keys(this.errors).length > 0;\n    }\n    /**\r\n     * Get the first error message for the given field.\r\n     *\r\n     * @param  String} field\r\n     * @return {String|undefined}\r\n     */\n\n  }, {\n    key: \"get\",\n    value: function get(field) {\n      if (this.has(field)) {\n        return this.getAll(field)[0];\n      }\n    }\n    /**\r\n     * Get all the error messages for the given field.\r\n     *\r\n     * @param  {String} field\r\n     * @return {Array}\r\n     */\n\n  }, {\n    key: \"getAll\",\n    value: function getAll(field) {\n      return arrayWrap(this.errors[field] || []);\n    }\n    /**\r\n     * Get the error message for the given fields.\r\n     *\r\n     * @param  {...String} fields\r\n     * @return {Array}\r\n     */\n\n  }, {\n    key: \"only\",\n    value: function only() {\n      var _this2 = this;\n\n      var messages = [];\n\n      for (var _len2 = arguments.length, fields = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        fields[_key2] = arguments[_key2];\n      }\n\n      fields.forEach(function (field) {\n        var message = _this2.get(field);\n\n        if (message) {\n          messages.push(message);\n        }\n      });\n      return messages;\n    }\n    /**\r\n     * Get all the errors in a flat array.\r\n     *\r\n     * @return {Array}\r\n     */\n\n  }, {\n    key: \"flatten\",\n    value: function flatten() {\n      return Object.values(this.errors).reduce(function (a, b) {\n        return a.concat(b);\n      }, []);\n    }\n    /**\r\n     * Clear one or all error fields.\r\n     *\r\n     * @param {String|undefined} field\r\n     */\n\n  }, {\n    key: \"clear\",\n    value: function clear(field) {\n      var _this3 = this;\n\n      var errors = {};\n\n      if (field) {\n        Object.keys(this.errors).forEach(function (key) {\n          if (key !== field) {\n            errors[key] = _this3.errors[key];\n          }\n        });\n      }\n\n      this.set(errors);\n    }\n  }]);\n\n  return Errors;\n}();\n\n\n// CONCATENATED MODULE: ./src/Form.js\nfunction Form__typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { Form__typeof = function _typeof(obj) { return typeof obj; }; } else { Form__typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return Form__typeof(obj); }\n\nfunction Form__defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction Form__extends() { Form__extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Form__extends.apply(this, arguments); }\n\nfunction Form__classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction Form__defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Form__createClass(Constructor, protoProps, staticProps) { if (protoProps) Form__defineProperties(Constructor.prototype, protoProps); if (staticProps) Form__defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\n\nvar Form_Form =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Create a new form instance.\n   *\n   * @param {Object} data\n   */\n  function Form() {\n    var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    Form__classCallCheck(this, Form);\n\n    this.busy = false;\n    this.successful = false;\n    this.errors = new Errors_Errors();\n    this.originalData = deepCopy(data);\n    Object.assign(this, data);\n  }\n  /**\n   * Fill form data.\n   *\n   * @param {Object} data\n   */\n\n\n  Form__createClass(Form, [{\n    key: \"fill\",\n    value: function fill(data) {\n      var _this = this;\n\n      this.keys().forEach(function (key) {\n        _this[key] = data[key];\n      });\n    }\n    /**\n     * Get the form data.\n     *\n     * @return {Object}\n     */\n\n  }, {\n    key: \"data\",\n    value: function data() {\n      var _this2 = this;\n\n      return this.keys().reduce(function (data, key) {\n        return Form__extends({}, data, Form__defineProperty({}, key, _this2[key]));\n      }, {});\n    }\n    /**\n     * Get the form data keys.\n     *\n     * @return {Array}\n     */\n\n  }, {\n    key: \"keys\",\n    value: function keys() {\n      return Object.keys(this).filter(function (key) {\n        return !Form.ignore.includes(key);\n      });\n    }\n    /**\n     * Start processing the form.\n     */\n\n  }, {\n    key: \"startProcessing\",\n    value: function startProcessing() {\n      this.errors.clear();\n      this.busy = true;\n      this.successful = false;\n    }\n    /**\n     * Finish processing the form.\n     */\n\n  }, {\n    key: \"finishProcessing\",\n    value: function finishProcessing() {\n      this.busy = false;\n      this.successful = true;\n    }\n    /**\n     * Clear the form errors.\n     */\n\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.errors.clear();\n      this.successful = false;\n    }\n    /**\n     * Reset the form fields.\n     */\n\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      var _this3 = this;\n\n      Object.keys(this).filter(function (key) {\n        return !Form.ignore.includes(key);\n      }).forEach(function (key) {\n        _this3[key] = deepCopy(_this3.originalData[key]);\n      });\n    }\n    /**\n     * Submit the from via a GET request.\n     *\n     * @param  {String} url\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"get\",\n    value: function get(url) {\n      return this.submit('get', url);\n    }\n    /**\n     * Submit the from via a POST request.\n     *\n     * @param  {String} url\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"post\",\n    value: function post(url) {\n      return this.submit('post', url);\n    }\n    /**\n     * Submit the from via a PATCH request.\n     *\n     * @param  {String} url\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"patch\",\n    value: function patch(url) {\n      return this.submit('patch', url);\n    }\n    /**\n     * Submit the from via a PUT request.\n     *\n     * @param  {String} url\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"put\",\n    value: function put(url) {\n      return this.submit('put', url);\n    }\n    /**\n     * Submit the from via a DELETE request.\n     *\n     * @param  {String} url\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"delete\",\n    value: function _delete(url) {\n      return this.submit('delete', url);\n    }\n    /**\n     * Submit the form data via an HTTP request.\n     *\n     * @param  {String} method (get, post, patch, put)\n     * @param  {String} url\n     * @param  {Object} config (axios config)\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"submit\",\n    value: function submit(method, url) {\n      var _this4 = this;\n\n      var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      this.startProcessing();\n      var data = method === 'get' ? {\n        params: this.data()\n      } : this.data();\n      return new Promise(function (resolve, reject) {\n        external__axios__default.a.request(Form__extends({\n          url: _this4.route(url),\n          method: method,\n          data: data\n        }, config)).then(function (response) {\n          _this4.finishProcessing();\n\n          resolve(response);\n        }).catch(function (error) {\n          _this4.busy = false;\n\n          if (error.response) {\n            _this4.errors.set(_this4.extractErrors(error.response));\n          }\n\n          reject(error);\n        });\n      });\n    }\n    /**\n     * Extract the errors from the response object.\n     *\n     * @param  {Object} response\n     * @return {Object}\n     */\n\n  }, {\n    key: \"extractErrors\",\n    value: function extractErrors(response) {\n      if (!response.data || Form__typeof(response.data) !== 'object') {\n        return {\n          error: Form.errorMessage\n        };\n      }\n\n      if (response.data.errors) {\n        return Form__extends({}, response.data.errors);\n      }\n\n      if (response.data.message) {\n        return {\n          error: response.data.message\n        };\n      }\n\n      return Form__extends({}, response.data);\n    }\n    /**\n     * Get a named route.\n     *\n     * @param  {String} name\n     * @return {Object} parameters\n     * @return {String}\n     */\n\n  }, {\n    key: \"route\",\n    value: function route(name) {\n      var parameters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var url = name;\n\n      if (Form.routes.hasOwnProperty(name)) {\n        url = decodeURI(Form.routes[name]);\n      }\n\n      if (Form__typeof(parameters) !== 'object') {\n        parameters = {\n          id: parameters\n        };\n      }\n\n      Object.keys(parameters).forEach(function (key) {\n        url = url.replace(\"{\".concat(key, \"}\"), parameters[key]);\n      });\n      return url;\n    }\n    /**\n     * Clear errors on keydown.\n     *\n     * @param {KeyboardEvent} event\n     */\n\n  }, {\n    key: \"onKeydown\",\n    value: function onKeydown(event) {\n      if (event.target.name) {\n        this.errors.clear(event.target.name);\n      }\n    }\n  }]);\n\n  return Form;\n}();\n\nForm_Form.routes = {};\nForm_Form.errorMessage = 'Something went wrong. Please try again.';\nForm_Form.ignore = ['busy', 'successful', 'errors', 'originalData'];\n/* harmony default export */ var src_Form = (Form_Form);\n// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{\"cacheDirectory\":\"C://Users//Otinsoft//Code//github//vform//node_modules//.cache//cache-loader\"}!./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./src/components/HasError.vue\n//\n//\n//\n//\n/* harmony default export */ var HasError = ({\n  name: 'has-error',\n  props: {\n    form: {\n      type: Object,\n      required: true\n    },\n    field: {\n      type: String,\n      required: true\n    }\n  }\n});\n// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-4389a6dd\",\"hasScoped\":false,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/HasError.vue\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (_vm.form.errors.has(_vm.field))?_c('div',{staticClass:\"help-block invalid-feedback\",domProps:{\"innerHTML\":_vm._s(_vm.form.errors.get(_vm.field))}}):_vm._e()}\nvar staticRenderFns = []\n\n// CONCATENATED MODULE: ./node_modules/vue-loader/lib/runtime/component-normalizer.js\n/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nfunction normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  scriptExports = scriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof scriptExports.default\n  if (type === 'object' || type === 'function') {\n    scriptExports = scriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n\n// CONCATENATED MODULE: ./src/components/HasError.vue\n/* script */\n\n\n/* template */\n\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\n\nvar Component = normalizeComponent(\n  HasError,\n  render,\n  staticRenderFns,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ var components_HasError = (Component.exports);\n\n// CONCATENATED MODULE: ./src/components/Alert.js\n/* harmony default export */ var Alert = ({\n  props: {\n    form: {\n      type: Object,\n      required: true\n    },\n    dismissible: {\n      type: Boolean,\n      default: true\n    }\n  },\n  methods: {\n    dismiss: function dismiss() {\n      if (this.dismissible) {\n        this.form.clear();\n      }\n    }\n  }\n});\n// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{\"cacheDirectory\":\"C://Users//Otinsoft//Code//github//vform//node_modules//.cache//cache-loader\"}!./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./src/components/AlertError.vue\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/* harmony default export */ var AlertError = ({\n  name: 'alert-error',\n  extends: Alert,\n  props: {\n    message: {\n      type: String,\n      default: 'There were some problems with your input.'\n    }\n  }\n});\n// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-e73aa7c8\",\"hasScoped\":false,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/AlertError.vue\nvar AlertError_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (_vm.form.errors.any())?_c('div',{staticClass:\"alert alert-danger alert-dismissible\",attrs:{\"role\":\"alert\"}},[(_vm.dismissible)?_c('button',{staticClass:\"close\",attrs:{\"type\":\"button\",\"aria-label\":\"Close\"},on:{\"click\":_vm.dismiss}},[_c('span',{attrs:{\"aria-hidden\":\"true\"}},[_vm._v(\"×\")])]):_vm._e(),_vm._v(\" \"),_vm._t(\"default\",[(_vm.form.errors.has('error'))?_c('div',{domProps:{\"innerHTML\":_vm._s(_vm.form.errors.get('error'))}}):_c('div',{domProps:{\"innerHTML\":_vm._s(_vm.message)}})])],2):_vm._e()}\nvar AlertError_staticRenderFns = []\n\n// CONCATENATED MODULE: ./src/components/AlertError.vue\n/* script */\n\n\n/* template */\n\n/* template functional */\nvar AlertError___vue_template_functional__ = false\n/* styles */\nvar AlertError___vue_styles__ = null\n/* scopeId */\nvar AlertError___vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar AlertError___vue_module_identifier__ = null\n\nvar AlertError_Component = normalizeComponent(\n  AlertError,\n  AlertError_render,\n  AlertError_staticRenderFns,\n  AlertError___vue_template_functional__,\n  AlertError___vue_styles__,\n  AlertError___vue_scopeId__,\n  AlertError___vue_module_identifier__\n)\n\n/* harmony default export */ var components_AlertError = (AlertError_Component.exports);\n\n// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{\"cacheDirectory\":\"C://Users//Otinsoft//Code//github//vform//node_modules//.cache//cache-loader\"}!./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./src/components/AlertErrors.vue\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/* harmony default export */ var AlertErrors = ({\n  name: 'alert-errors',\n  extends: Alert,\n  props: {\n    message: {\n      type: String,\n      default: 'There were some problems with your input.'\n    }\n  }\n});\n// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-422a6591\",\"hasScoped\":false,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/AlertErrors.vue\nvar AlertErrors_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (_vm.form.errors.any())?_c('div',{staticClass:\"alert alert-danger alert-dismissible\",attrs:{\"role\":\"alert\"}},[(_vm.dismissible)?_c('button',{staticClass:\"close\",attrs:{\"type\":\"button\",\"aria-label\":\"Close\"},on:{\"click\":_vm.dismiss}},[_c('span',{attrs:{\"aria-hidden\":\"true\"}},[_vm._v(\"×\")])]):_vm._e(),_vm._v(\" \"),(_vm.message)?_c('div',{domProps:{\"innerHTML\":_vm._s(_vm.message)}}):_vm._e(),_vm._v(\" \"),_c('ul',_vm._l((_vm.form.errors.flatten()),function(error){return _c('li',{domProps:{\"innerHTML\":_vm._s(error)}})}))]):_vm._e()}\nvar AlertErrors_staticRenderFns = []\n\n// CONCATENATED MODULE: ./src/components/AlertErrors.vue\n/* script */\n\n\n/* template */\n\n/* template functional */\nvar AlertErrors___vue_template_functional__ = false\n/* styles */\nvar AlertErrors___vue_styles__ = null\n/* scopeId */\nvar AlertErrors___vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar AlertErrors___vue_module_identifier__ = null\n\nvar AlertErrors_Component = normalizeComponent(\n  AlertErrors,\n  AlertErrors_render,\n  AlertErrors_staticRenderFns,\n  AlertErrors___vue_template_functional__,\n  AlertErrors___vue_styles__,\n  AlertErrors___vue_scopeId__,\n  AlertErrors___vue_module_identifier__\n)\n\n/* harmony default export */ var components_AlertErrors = (AlertErrors_Component.exports);\n\n// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{\"cacheDirectory\":\"C://Users//Otinsoft//Code//github//vform//node_modules//.cache//cache-loader\"}!./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./src/components/AlertSuccess.vue\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/* harmony default export */ var AlertSuccess = ({\n  name: 'alert-success',\n  extends: Alert,\n  props: {\n    message: {\n      type: String,\n      default: ''\n    }\n  }\n});\n// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-0afdb8a8\",\"hasScoped\":false,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/AlertSuccess.vue\nvar AlertSuccess_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (_vm.form.successful)?_c('div',{staticClass:\"alert alert-success alert-dismissible\",attrs:{\"role\":\"alert\"}},[(_vm.dismissible)?_c('button',{staticClass:\"close\",attrs:{\"type\":\"button\",\"aria-label\":\"Close\"},on:{\"click\":_vm.dismiss}},[_c('span',{attrs:{\"aria-hidden\":\"true\"}},[_vm._v(\"×\")])]):_vm._e(),_vm._v(\" \"),_vm._t(\"default\",[_c('div',{domProps:{\"innerHTML\":_vm._s(_vm.message)}})])],2):_vm._e()}\nvar AlertSuccess_staticRenderFns = []\n\n// CONCATENATED MODULE: ./src/components/AlertSuccess.vue\n/* script */\n\n\n/* template */\n\n/* template functional */\nvar AlertSuccess___vue_template_functional__ = false\n/* styles */\nvar AlertSuccess___vue_styles__ = null\n/* scopeId */\nvar AlertSuccess___vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar AlertSuccess___vue_module_identifier__ = null\n\nvar AlertSuccess_Component = normalizeComponent(\n  AlertSuccess,\n  AlertSuccess_render,\n  AlertSuccess_staticRenderFns,\n  AlertSuccess___vue_template_functional__,\n  AlertSuccess___vue_styles__,\n  AlertSuccess___vue_scopeId__,\n  AlertSuccess___vue_module_identifier__\n)\n\n/* harmony default export */ var components_AlertSuccess = (AlertSuccess_Component.exports);\n\n// CONCATENATED MODULE: ./src/index.js\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"Form\", function() { return src_Form; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"Errors\", function() { return Errors_Errors; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"HasError\", function() { return components_HasError; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"AlertError\", function() { return components_AlertError; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"AlertErrors\", function() { return components_AlertErrors; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"AlertSuccess\", function() { return components_AlertSuccess; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"default\", function() { return src_Form; });\n\n\n\n\n\n\n\n\n/***/ })\n\n/******/ });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///929\n");

/***/ }),

/***/ 930:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  /* this mixins is responsible for concatinating error messages from vform and vee-validate  */\n  methods: {\n    /* errorBag is relataed to veeValidate config name*/\n    /* form is related to vform */\n    errorMessages: function errorMessages(field) {\n      return this.errors.collect(field).concat(this.form.errors.only(field));\n    },\n    hasErrors: function hasErrors(field) {\n      var errors = this.errors.collect(field).concat(this.form.errors.only(field));\n      if (errors.length > 0) {\n        return true;\n      }\n      return false;\n    }\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvYXNzZXRzL2pzL21peGlucy92YWxpZGF0aW9uLWVycm9yLmpzPzgyZjUiXSwibmFtZXMiOlsibWV0aG9kcyIsImVycm9yTWVzc2FnZXMiLCJmaWVsZCIsImVycm9ycyIsImNvbGxlY3QiLCJjb25jYXQiLCJmb3JtIiwib25seSIsImhhc0Vycm9ycyIsImxlbmd0aCJdLCJtYXBwaW5ncyI6IkFBQUEseURBQWU7QUFDYjtBQUNBQSxXQUFTO0FBQ1A7QUFDQTtBQUNBQyxpQkFITyx5QkFHT0MsS0FIUCxFQUdjO0FBQ25CLGFBQU8sS0FBS0MsTUFBTCxDQUFZQyxPQUFaLENBQW9CRixLQUFwQixFQUEyQkcsTUFBM0IsQ0FBa0MsS0FBS0MsSUFBTCxDQUFVSCxNQUFWLENBQWlCSSxJQUFqQixDQUFzQkwsS0FBdEIsQ0FBbEMsQ0FBUDtBQUNELEtBTE07QUFNUE0sYUFOTyxxQkFNR04sS0FOSCxFQU1VO0FBQ2YsVUFBSUMsU0FBUyxLQUFLQSxNQUFMLENBQ1ZDLE9BRFUsQ0FDRkYsS0FERSxFQUVWRyxNQUZVLENBRUgsS0FBS0MsSUFBTCxDQUFVSCxNQUFWLENBQWlCSSxJQUFqQixDQUFzQkwsS0FBdEIsQ0FGRyxDQUFiO0FBR0EsVUFBSUMsT0FBT00sTUFBUCxHQUFnQixDQUFwQixFQUF1QjtBQUNyQixlQUFPLElBQVA7QUFDRDtBQUNELGFBQU8sS0FBUDtBQUNEO0FBZE07QUFGSSxDQUFmIiwiZmlsZSI6IjkzMC5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IHtcbiAgLyogdGhpcyBtaXhpbnMgaXMgcmVzcG9uc2libGUgZm9yIGNvbmNhdGluYXRpbmcgZXJyb3IgbWVzc2FnZXMgZnJvbSB2Zm9ybSBhbmQgdmVlLXZhbGlkYXRlICAqL1xuICBtZXRob2RzOiB7XG4gICAgLyogZXJyb3JCYWcgaXMgcmVsYXRhZWQgdG8gdmVlVmFsaWRhdGUgY29uZmlnIG5hbWUqL1xuICAgIC8qIGZvcm0gaXMgcmVsYXRlZCB0byB2Zm9ybSAqL1xuICAgIGVycm9yTWVzc2FnZXMoZmllbGQpIHtcbiAgICAgIHJldHVybiB0aGlzLmVycm9ycy5jb2xsZWN0KGZpZWxkKS5jb25jYXQodGhpcy5mb3JtLmVycm9ycy5vbmx5KGZpZWxkKSk7XG4gICAgfSxcbiAgICBoYXNFcnJvcnMoZmllbGQpIHtcbiAgICAgIGxldCBlcnJvcnMgPSB0aGlzLmVycm9yc1xuICAgICAgICAuY29sbGVjdChmaWVsZClcbiAgICAgICAgLmNvbmNhdCh0aGlzLmZvcm0uZXJyb3JzLm9ubHkoZmllbGQpKTtcbiAgICAgIGlmIChlcnJvcnMubGVuZ3RoID4gMCkge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cbn07XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9yZXNvdXJjZXMvYXNzZXRzL2pzL21peGlucy92YWxpZGF0aW9uLWVycm9yLmpzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///930\n");

/***/ }),

/***/ 931:
/***/ (function(module, exports, __webpack_require__) {

eval("var disposed = false\nvar normalizeComponent = __webpack_require__(370)\n/* script */\nvar __vue_script__ = null\n/* template */\nvar __vue_template__ = __webpack_require__(932)\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\nComponent.options.__file = \"resources/assets/js/layouts/ModalLayout.vue\"\n\n/* hot reload */\nif (false) {(function () {\n  var hotAPI = require(\"vue-hot-reload-api\")\n  hotAPI.install(require(\"vue\"), false)\n  if (!hotAPI.compatible) return\n  module.hot.accept()\n  if (!module.hot.data) {\n    hotAPI.createRecord(\"data-v-da953062\", Component.options)\n  } else {\n    hotAPI.reload(\"data-v-da953062\", Component.options)\n  }\n  module.hot.dispose(function (data) {\n    disposed = true\n  })\n})()}\n\nmodule.exports = Component.exports\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvYXNzZXRzL2pzL2xheW91dHMvTW9kYWxMYXlvdXQudnVlPzYzOGMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUFnTDtBQUNoTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsWUFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNILENBQUM7O0FBRUQiLCJmaWxlIjoiOTMxLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGRpc3Bvc2VkID0gZmFsc2VcbnZhciBub3JtYWxpemVDb21wb25lbnQgPSByZXF1aXJlKFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9jb21wb25lbnQtbm9ybWFsaXplclwiKVxuLyogc2NyaXB0ICovXG52YXIgX192dWVfc2NyaXB0X18gPSBudWxsXG4vKiB0ZW1wbGF0ZSAqL1xudmFyIF9fdnVlX3RlbXBsYXRlX18gPSByZXF1aXJlKFwiISEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvdGVtcGxhdGUtY29tcGlsZXIvaW5kZXg/e1xcXCJpZFxcXCI6XFxcImRhdGEtdi1kYTk1MzA2MlxcXCIsXFxcImhhc1Njb3BlZFxcXCI6ZmFsc2UsXFxcImJ1YmxlXFxcIjp7XFxcInRyYW5zZm9ybXNcXFwiOnt9fX0hLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3NlbGVjdG9yP3R5cGU9dGVtcGxhdGUmaW5kZXg9MCEuL01vZGFsTGF5b3V0LnZ1ZVwiKVxuLyogdGVtcGxhdGUgZnVuY3Rpb25hbCAqL1xudmFyIF9fdnVlX3RlbXBsYXRlX2Z1bmN0aW9uYWxfXyA9IGZhbHNlXG4vKiBzdHlsZXMgKi9cbnZhciBfX3Z1ZV9zdHlsZXNfXyA9IG51bGxcbi8qIHNjb3BlSWQgKi9cbnZhciBfX3Z1ZV9zY29wZUlkX18gPSBudWxsXG4vKiBtb2R1bGVJZGVudGlmaWVyIChzZXJ2ZXIgb25seSkgKi9cbnZhciBfX3Z1ZV9tb2R1bGVfaWRlbnRpZmllcl9fID0gbnVsbFxudmFyIENvbXBvbmVudCA9IG5vcm1hbGl6ZUNvbXBvbmVudChcbiAgX192dWVfc2NyaXB0X18sXG4gIF9fdnVlX3RlbXBsYXRlX18sXG4gIF9fdnVlX3RlbXBsYXRlX2Z1bmN0aW9uYWxfXyxcbiAgX192dWVfc3R5bGVzX18sXG4gIF9fdnVlX3Njb3BlSWRfXyxcbiAgX192dWVfbW9kdWxlX2lkZW50aWZpZXJfX1xuKVxuQ29tcG9uZW50Lm9wdGlvbnMuX19maWxlID0gXCJyZXNvdXJjZXMvYXNzZXRzL2pzL2xheW91dHMvTW9kYWxMYXlvdXQudnVlXCJcblxuLyogaG90IHJlbG9hZCAqL1xuaWYgKG1vZHVsZS5ob3QpIHsoZnVuY3Rpb24gKCkge1xuICB2YXIgaG90QVBJID0gcmVxdWlyZShcInZ1ZS1ob3QtcmVsb2FkLWFwaVwiKVxuICBob3RBUEkuaW5zdGFsbChyZXF1aXJlKFwidnVlXCIpLCBmYWxzZSlcbiAgaWYgKCFob3RBUEkuY29tcGF0aWJsZSkgcmV0dXJuXG4gIG1vZHVsZS5ob3QuYWNjZXB0KClcbiAgaWYgKCFtb2R1bGUuaG90LmRhdGEpIHtcbiAgICBob3RBUEkuY3JlYXRlUmVjb3JkKFwiZGF0YS12LWRhOTUzMDYyXCIsIENvbXBvbmVudC5vcHRpb25zKVxuICB9IGVsc2Uge1xuICAgIGhvdEFQSS5yZWxvYWQoXCJkYXRhLXYtZGE5NTMwNjJcIiwgQ29tcG9uZW50Lm9wdGlvbnMpXG4gIH1cbiAgbW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgZGlzcG9zZWQgPSB0cnVlXG4gIH0pXG59KSgpfVxuXG5tb2R1bGUuZXhwb3J0cyA9IENvbXBvbmVudC5leHBvcnRzXG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3Jlc291cmNlcy9hc3NldHMvanMvbGF5b3V0cy9Nb2RhbExheW91dC52dWVcbi8vIG1vZHVsZSBpZCA9IDkzMVxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMTEgMTIgMTMgMTQgMTUgMTYgMTcgMTggMTkgMjAgMjEgMjIgMjMgMjQgMjUgMjYgMjcgMjggMjkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///931\n");

/***/ }),

/***/ 932:
/***/ (function(module, exports, __webpack_require__) {

eval("var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"v-app\",\n    { attrs: { standalone: \"\" } },\n    [\n      _c(\n        \"v-content\",\n        { staticClass: \"white\" },\n        [\n          _c(\n            \"v-container\",\n            {\n              staticClass: \"pa-0 ma-0\",\n              attrs: { transition: \"slide-x-transition\", fluid: \"\" }\n            },\n            [\n              _c(\n                \"v-card\",\n                { attrs: { flat: true } },\n                [_vm._t(\"toolbar\"), _vm._v(\" \"), _vm._t(\"default\")],\n                2\n              )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _vm._t(\"footer\")\n        ],\n        2\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\nmodule.exports = { render: render, staticRenderFns: staticRenderFns }\nif (false) {\n  module.hot.accept()\n  if (module.hot.data) {\n    require(\"vue-hot-reload-api\")      .rerender(\"data-v-da953062\", module.exports)\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvYXNzZXRzL2pzL2xheW91dHMvTW9kYWxMYXlvdXQudnVlPzliMjQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSyxTQUFTLGlCQUFpQixFQUFFO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBLFNBQVMsdUJBQXVCO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0I7QUFDdEIsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixTQUFTLGFBQWEsRUFBRTtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiI5MzIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgcmVuZGVyID0gZnVuY3Rpb24oKSB7XG4gIHZhciBfdm0gPSB0aGlzXG4gIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudFxuICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2hcbiAgcmV0dXJuIF9jKFxuICAgIFwidi1hcHBcIixcbiAgICB7IGF0dHJzOiB7IHN0YW5kYWxvbmU6IFwiXCIgfSB9LFxuICAgIFtcbiAgICAgIF9jKFxuICAgICAgICBcInYtY29udGVudFwiLFxuICAgICAgICB7IHN0YXRpY0NsYXNzOiBcIndoaXRlXCIgfSxcbiAgICAgICAgW1xuICAgICAgICAgIF9jKFxuICAgICAgICAgICAgXCJ2LWNvbnRhaW5lclwiLFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICBzdGF0aWNDbGFzczogXCJwYS0wIG1hLTBcIixcbiAgICAgICAgICAgICAgYXR0cnM6IHsgdHJhbnNpdGlvbjogXCJzbGlkZS14LXRyYW5zaXRpb25cIiwgZmx1aWQ6IFwiXCIgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgX2MoXG4gICAgICAgICAgICAgICAgXCJ2LWNhcmRcIixcbiAgICAgICAgICAgICAgICB7IGF0dHJzOiB7IGZsYXQ6IHRydWUgfSB9LFxuICAgICAgICAgICAgICAgIFtfdm0uX3QoXCJ0b29sYmFyXCIpLCBfdm0uX3YoXCIgXCIpLCBfdm0uX3QoXCJkZWZhdWx0XCIpXSxcbiAgICAgICAgICAgICAgICAyXG4gICAgICAgICAgICAgIClcbiAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAxXG4gICAgICAgICAgKSxcbiAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgIF92bS5fdChcImZvb3RlclwiKVxuICAgICAgICBdLFxuICAgICAgICAyXG4gICAgICApXG4gICAgXSxcbiAgICAxXG4gIClcbn1cbnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbXVxucmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlXG5tb2R1bGUuZXhwb3J0cyA9IHsgcmVuZGVyOiByZW5kZXIsIHN0YXRpY1JlbmRlckZuczogc3RhdGljUmVuZGVyRm5zIH1cbmlmIChtb2R1bGUuaG90KSB7XG4gIG1vZHVsZS5ob3QuYWNjZXB0KClcbiAgaWYgKG1vZHVsZS5ob3QuZGF0YSkge1xuICAgIHJlcXVpcmUoXCJ2dWUtaG90LXJlbG9hZC1hcGlcIikgICAgICAucmVyZW5kZXIoXCJkYXRhLXYtZGE5NTMwNjJcIiwgbW9kdWxlLmV4cG9ydHMpXG4gIH1cbn1cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi90ZW1wbGF0ZS1jb21waWxlcj97XCJpZFwiOlwiZGF0YS12LWRhOTUzMDYyXCIsXCJoYXNTY29wZWRcIjpmYWxzZSxcImJ1YmxlXCI6e1widHJhbnNmb3Jtc1wiOnt9fX0hLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc2VsZWN0b3IuanM/dHlwZT10ZW1wbGF0ZSZpbmRleD0wIS4vcmVzb3VyY2VzL2Fzc2V0cy9qcy9sYXlvdXRzL01vZGFsTGF5b3V0LnZ1ZVxuLy8gbW9kdWxlIGlkID0gOTMyXG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxMSAxMiAxMyAxNCAxNSAxNiAxNyAxOCAxOSAyMCAyMSAyMiAyMyAyNCAyNSAyNiAyNyAyOCAyOSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///932\n");

/***/ })

});