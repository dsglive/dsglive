webpackJsonp([3],{"+3vX":function(t,e){var a=function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("v-layout",{attrs:{row:"",wrap:"","pa-5":"","ma-5":""}},[t.getMe.email?t._e():a("v-flex",{attrs:{xs12:""}},[a("v-alert",{attrs:{value:!0,color:"warning",outline:"",icon:"warning"}},[t._v("\n      Please Update Your Account Email To Received Reports, Billings , and Updates. Go To\n      "),a("v-btn",{attrs:{color:"blue",dark:""},on:{click:function(e){t.$router.push({name:"settings"})}}},[t._v("\n        Profile\n      ")]),t._v(" "),a("br")],1)],1),t._v(" "),a("v-flex",{attrs:{xs12:"",md4:"","text-xs-center":""}},[a("v-card",{staticClass:"ma-1",attrs:{color:"blue-grey white--text",height:"110px"}},[a("v-card-text",{staticClass:"title pa-5",staticStyle:{cursor:"pointer"},on:{click:function(e){t.$router.push({name:"invoices"})}}},[a("v-icon",{attrs:{large:"",color:"teal lighten-4"}},[t._v("receipt\n        ")]),t._v(" Balance: $"+t._s(t.stats.balance)+"\n        "),a("br"),t._v(" "),a("span",{staticClass:"caption"},[t._v("(Unsettled Invoice)")])],1)],1)],1),t._v(" "),a("v-flex",{attrs:{xs12:"",md4:"","text-xs-center":""}},[a("v-card",{staticClass:"ma-1",attrs:{color:"blue-grey white--text",height:"110px"}},[a("v-card-text",{staticClass:"title pa-5",staticStyle:{cursor:"pointer"},on:{click:function(e){t.$router.push({name:"clients"})}}},[a("v-icon",{attrs:{large:"",color:"amber lighten-4"}},[t._v("\n          fa-users\n        ")]),t._v(" \n        Clients: "+t._s(t.stats.clients)+"\n        "),a("br"),t._v(" "),a("span",{staticClass:"caption"},[t._v("(Total Clients)")])],1)],1)],1),t._v(" "),a("v-flex",{attrs:{xs12:"",md4:"","text-xs-center":""}},[a("v-card",{staticClass:"ma-1",attrs:{color:"blue-grey white--text",height:"110px"}},[a("v-card-text",{staticClass:"title pa-5",staticStyle:{cursor:"pointer"},on:{click:function(e){t.$router.push({name:"unknown-client"})}}},[a("v-icon",{attrs:{large:"",color:"blue lighten-5"}},[t._v("fa-question-circle")]),t._v(" Unknown Clients: "+t._s(t.stats.unknown)+"\n        "),a("br"),t._v(" "),a("span",{staticClass:"caption"},[t._v("(Needs Verification)")])],1)],1)],1),t._v(" "),a("v-flex",{attrs:{xs12:"",md4:"","text-xs-center":""}},[a("v-card",{staticClass:"ma-1",attrs:{color:"blue-grey white--text",height:"110px"}},[a("v-card-text",{staticClass:"title pa-5",staticStyle:{cursor:"pointer"},on:{click:function(e){t.$router.push({name:"undelivered-reports"})}}},[a("v-icon",{attrs:{large:"",color:"indigo lighten-4"}},[t._v("fa-truck")]),t._v(" Undelivered: "+t._s(t.stats.undelivered)+"\n        "),a("br"),t._v(" "),a("span",{staticClass:"caption"},[t._v("(Available For Delivery)")])],1)],1)],1),t._v(" "),a("v-flex",{attrs:{xs12:"",md4:"","text-xs-center":""}},[a("v-card",{staticClass:"ma-1",attrs:{color:"blue-grey white--text",height:"110px"}},[a("v-card-text",{staticClass:"title pa-5",staticStyle:{cursor:"pointer"},on:{click:function(e){t.$router.push({name:"damaged-reports"})}}},[a("v-icon",{attrs:{large:"",color:"red accent-1"}},[t._v("broken_image")]),t._v(" Damaged: "+t._s(t.stats.damaged)+"\n        "),a("br"),t._v(" "),a("span",{staticClass:"caption"},[t._v("(Needs Repair)")])],1)],1)],1),t._v(" "),a("v-flex",{attrs:{xs12:"",md4:"","text-xs-center":""}},[a("v-card",{staticClass:"ma-1",attrs:{color:"blue-grey white--text",height:"110px"}},[a("v-card-text",{staticClass:"title pa-5",staticStyle:{cursor:"pointer"},on:{click:function(e){t.$router.push({name:"repaired-reports"})}}},[a("v-icon",{attrs:{large:"",color:"red accent-1"}},[t._v("build")]),t._v(" Repaired: "+t._s(t.stats.repaired)+"\n        "),a("br"),t._v(" "),a("span",{staticClass:"caption"},[t._v("(Done Repair)")])],1)],1)],1)],1)},n=[];t.exports={render:a,staticRenderFns:n}},"/lvI":function(t,e,a){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var n=a("Dd8w"),r=a.n(n),i=a("NYxO"),s,o=Object(i.b)("auth").mapGetters;e.default={data:function t(){return{stats:{clients:null,receiving:null,damaged:null,unknown:null,undelivered:null,balance:null,repaired:null}}},computed:r()({},o({getMe:"getMe"})),mounted:function t(){this.getStats()},methods:{getStats:function t(){var e=this;axios.post(route("api.dashboard.customer.getStats")).then(function(t){e.stats=t.data.data,e.stats.balance=Math.ceil(e.stats.balance)})}}}},"1kS7":function(t,e){e.f=Object.getOwnPropertySymbols},"1zB9":function(t,e){var a=function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("v-app",{attrs:{id:"inspire"}},[a("left-side-bar"),t._v(" "),a("app-nav-bar"),t._v(" "),a("v-content",{staticClass:"white",attrs:{transition:"slide-x-transition",fluid:"","pa-0":"","ma-0":""}},[t._t("default")],2)],1)},n=[];t.exports={render:a,staticRenderFns:n}},"2xzx":function(t,e){var a=function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("v-toolbar",{attrs:{color:"primary",fixed:"",app:""}},[a("v-toolbar-side-icon",{staticClass:"white--text",nativeOn:{click:function(e){e.stopPropagation(),t.toggleDrawer()}}}),t._v(" "),t.extension?a("v-toolbar-title",{staticClass:"text-xs-center ml-0 pl-3",class:t.$vuetify.breakpoint.width<=1264&&"pr-3",style:t.$vuetify.breakpoint.width>1264&&"width: 300px",attrs:{slot:"extension"},slot:"extension"},[t.showIcon?a("v-icon",{staticClass:"ml-3 hidden-md-and-down accent"},[t._v("\n      "+t._s(t.icon)+"\n    ")]):t._e(),t._v(" "),a("span",{staticClass:"hidden-md-and-down"},[a("span",{staticClass:"white--text"},[t._v(t._s(t.title))])])],1):a("v-toolbar-title",{staticClass:"text-xs-center"},[t.showIcon?a("v-icon",{staticClass:"ml-3 hidden-md-and-down accent"},[t._v("\n      "+t._s(t.icon)+"\n    ")]):t._e(),t._v(" "),a("span",{staticClass:"hidden-md-and-down"},[a("span",{staticClass:"white--text"},[t._v(t._s(t.title))])])],1),t._v(" "),a("v-spacer"),t._v(" "),t.showLogo?a("img",{staticClass:"hidden-md-and-up",attrs:{src:t.logo}}):t._e(),t._v(" "),a("v-spacer")],1)},n=[];t.exports={render:a,staticRenderFns:n}},"5t+f":function(t,e,a){var n,r,i,s=!1,o=null,c=null,l=null,u=a("VU/8")(a("EU3A"),a("qd3n"),!1,null,null,null);t.exports=u.exports},"6NYk":function(t,e,a){var n=a("bKDO");"string"==typeof n&&(n=[[t.i,n,""]]),n.locals&&(t.exports=n.locals);var r=a("rjj0")("7b0e097a",n,!0,{})},"7/uR":function(t,e,a){function n(t){a("AbWS")}var r,i,s,o=!1,c,l,u=null,v=a("VU/8")(a("f+SC"),a("V3I1"),!1,n,"data-v-9d2d5a76",null);t.exports=v.exports},"8biF":function(t,e,a){(e=t.exports=a("FZ+f")(!1)).push([t.i,"",""])},"9qyG":function(t,e,a){(e=t.exports=a("FZ+f")(!1)).push([t.i,".v-list__group__header__append-icon{color:#fff!important}",""])},AbWS:function(t,e,a){var n=a("Qkdk");"string"==typeof n&&(n=[[t.i,n,""]]),n.locals&&(t.exports=n.locals);var r=a("rjj0")("2ab3e8dc",n,!0,{})},"B+0i":function(t,e,a){function n(t){a("eivZ")}var r,i,s,o=!1,c,l=null,u=null,v=a("VU/8")(a("dK5C"),a("FB9S"),!1,n,null,null);t.exports=v.exports},Dd8w:function(t,e,a){"use strict";e.__esModule=!0;var n,r=i(a("woOf"));function i(t){return t&&t.__esModule?t:{default:t}}e.default=r.default||function(t){for(var e=1;e<arguments.length;e++){var a=arguments[e];for(var n in a)Object.prototype.hasOwnProperty.call(a,n)&&(t[n]=a[n])}return t}},EU3A:function(t,e,a){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var n=a("Dd8w"),r=a.n(n),i=a("7/uR"),s=a.n(i),o=a("NYxO"),c=a("PS5i"),l=a.n(c),u=a("deHX"),v=a.n(u),d,f=Object(o.b)("auth").mapState;e.default={components:{VLink:s.a,InventoryLinks:l.a,InvoiceLinks:v.a},data:function t(){return{drawer:!1}},computed:r()({},f({isAuthenticated:"isAuthenticated"})),created:function t(){var e=this;switch(this.$vuetify.breakpoint.name){case"xs":case"sm":return this.drawer=!1;case"md":case"lg":case"xl":return this.drawer=!0}},mounted:function t(){var e=this;Bus.$on("toggleDrawer",function(){e.drawer=!e.drawer})}}},EpMA:function(t,e,a){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default={data:function t(){return{activeColor:"#4DB6AC",linkColor:"#fffff",items:[{action:"collections_bookmark",title:"Inventories",items:[{title:"All Unknown Report",href:"/reports/all-unknown-report",action:"fa-question-circle",auth:["admin"]},{title:"Unknown Customer",href:"/reports/unknown-customer",action:"supervised_user_circle",auth:["admin","warehouse"]},{title:"Unknown Client",href:"/reports/unknown-client",action:"fa-users",auth:["admin","warehouse","customer"]},{title:"Unknown Shipper",href:"/reports/unknown-shipper",action:"fa-ship",auth:["admin","warehouse"]},{title:"Damaged Report",href:"/reports/damaged",action:"broken_image",auth:["admin","warehouse","customer"]},{title:"Repaired Report",href:"/reports/repaired",action:"build",auth:["admin","warehouse","customer"]},{title:"Undelivered Report",href:"/reports/undelivered",action:"fa-truck",auth:["admin","warehouse","customer"]},{title:"Bin Report",href:"/reports/bin",action:"apps",auth:["admin"]},{title:"Customer Report",href:"/reports/customer",action:"local_library",auth:["admin"]},{title:"Client Report",href:"/reports/clients",action:"perm_contact_calendar",auth:["admin"]}]}]}},methods:{isActive:function t(e){return e.href===this.$route.path},loadview:function t(e){this.$router.push({path:""+e.href})}}}},FB9S:function(t,e){var a=function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("v-layout",{attrs:{row:"",wrap:"","px-5":"","mx-5":""}},[a("v-flex",{attrs:{xs12:""}},[a("v-alert",{staticClass:"text-xs-center blue-grey--text",attrs:{value:!0,type:"info","my-0":"","py-0":"","mx-3":"","px-3":""}},[t._v("\n      Note: Press Ctrl or CMD + F5 To Do Hard Page Refresh If You Experience Blank Page Unresponsive Due to Old Cached Of Assets (Only In Development Stage)\n    ")])],1),t._v(" "),a("v-flex",{attrs:{xs12:"",md4:"","text-xs-center":""}},[a("v-card",{staticClass:"ma-1",attrs:{color:"blue-grey white--text",height:"150px"}},[a("v-card-text",{staticClass:"title",staticStyle:{"margin-left":"auto","margin-right":"auto",width:"150px",cursor:"pointer"},on:{click:function(e){t.$router.push({name:"unknown-customer"})}}},[a("v-icon",{attrs:{"x-large":"",color:"pink lighten-4"}},[t._v("\n          supervised_user_circle\n        ")]),t._v(" "),a("v-subheader",{staticClass:"white--text"},[t._v("Unknown Customer")]),t._v("\n        "+t._s(t.stats.unknown_customer)+"\n      ")],1)],1)],1),t._v(" "),a("v-flex",{attrs:{xs12:"",md4:"","text-xs-center":""}},[a("v-card",{staticClass:"ma-1",attrs:{color:"blue-grey white--text",height:"150px"}},[a("v-card-text",{staticClass:"title",staticStyle:{"margin-left":"auto","margin-right":"auto",width:"150px",cursor:"pointer"},on:{click:function(e){t.$router.push({name:"unknown-client"})}}},[a("v-icon",{attrs:{"x-large":"",color:"cyan lighten-3"}},[t._v("\n          person_pin\n        ")]),t._v(" "),a("v-subheader",{staticClass:"white--text"},[t._v("Unknown Client")]),t._v("\n        "+t._s(t.stats.unknown_client)+"\n      ")],1)],1)],1),t._v(" "),a("v-flex",{attrs:{xs12:"",md4:"","text-xs-center":""}},[a("v-card",{staticClass:"ma-1",attrs:{color:"blue-grey white--text",height:"150px"}},[a("v-card-text",{staticClass:"title",staticStyle:{"margin-left":"auto","margin-right":"auto",width:"150px",cursor:"pointer"},on:{click:function(e){t.$router.push({name:"unknown-shipper"})}}},[a("v-icon",{attrs:{"x-large":"",color:"indigo lighten-5"}},[t._v("\n          directions_boat\n        ")]),t._v(" "),a("v-subheader",{staticClass:"white--text"},[t._v("Unknown Shipper")]),t._v("\n        "+t._s(t.stats.unknown_shipper)+"\n        "),a("br")],1)],1)],1),t._v(" "),a("v-flex",{attrs:{xs12:"",md4:"","text-xs-center":""}},[a("v-card",{staticClass:"ma-1",attrs:{color:"blue-grey white--text",height:"150px"}},[a("v-card-text",{staticClass:"title",staticStyle:{"margin-left":"auto","margin-right":"auto",width:"150px",cursor:"pointer"},on:{click:function(e){t.$router.push({name:"warehouse"})}}},[a("v-icon",{attrs:{"x-large":"",color:"brown lighten-3"}},[t._v("\n          domain\n        ")]),t._v(" "),a("v-subheader",{staticClass:"white--text"},[t._v("Warehouse")]),t._v("\n        "+t._s(t.stats.dsg_warehouse)+"\n      ")],1)],1)],1),t._v(" "),a("v-flex",{attrs:{xs12:"",md4:"","text-xs-center":""}},[a("v-card",{staticClass:"ma-1",attrs:{color:"blue-grey white--text",height:"150px"}},[a("v-card-text",{staticClass:"title",staticStyle:{"margin-left":"auto","margin-right":"auto",width:"150px",cursor:"pointer"},on:{click:function(e){t.$router.push({name:"dsg"})}}},[a("v-icon",{attrs:{"x-large":"",color:"teal lighten-3"}},[t._v("\n          receipt\n        ")]),t._v(" "),a("v-subheader",{staticClass:"white--text"},[t._v("Receiving")]),t._v("\n        "+t._s(t.stats.dsg_receiving)+"\n      ")],1)],1)],1),t._v(" "),a("v-flex",{attrs:{xs12:"",md4:"","text-xs-center":""}},[a("v-card",{staticClass:"ma-1",attrs:{color:"blue-grey white--text",height:"150px"}},[a("v-card-text",{staticClass:"title",staticStyle:{"margin-left":"auto","margin-right":"auto",width:"150px",cursor:"pointer"},on:{click:function(e){t.$router.push({name:"archived-dsg"})}}},[a("v-icon",{attrs:{"x-large":"",color:"blue-grey lighten-5"}},[t._v("\n          archive\n        ")]),t._v(" "),a("v-subheader",{staticClass:"white--text"},[t._v("Archived Dsg")]),t._v("\n        "+t._s(t.stats.dsg_archived)+"\n      ")],1)],1)],1),t._v(" "),a("v-flex",{attrs:{xs12:"",md4:"","text-xs-center":""}},[a("v-card",{staticClass:"ma-1",attrs:{color:"blue-grey white--text",height:"150px"}},[a("v-card-text",{staticClass:"title",staticStyle:{"margin-left":"auto","margin-right":"auto",width:"150px",cursor:"pointer"},on:{click:function(e){t.$router.push({name:"undelivered-reports"})}}},[a("v-icon",{attrs:{"x-large":"",color:"amber lighten-2"}},[t._v("\n          fa-truck\n        ")]),t._v(" "),a("v-subheader",{staticClass:"white--text"},[t._v("Undelivered Items")]),t._v("\n        "+t._s(t.stats.undelivered)+"\n      ")],1)],1)],1),t._v(" "),a("v-flex",{attrs:{xs12:"",md4:"","text-xs-center":""}},[a("v-card",{staticClass:"ma-1",attrs:{color:"blue-grey white--text",height:"150px"}},[a("v-card-text",{staticClass:"title",staticStyle:{"margin-left":"auto","margin-right":"auto",width:"150px",cursor:"pointer"},on:{click:function(e){t.$router.push({name:"damaged-reports"})}}},[a("v-icon",{attrs:{"x-large":"",color:"red accent-4"}},[t._v("\n          broken_image\n        ")]),t._v(" "),a("v-subheader",{staticClass:"white--text"},[t._v("Damaged Items")]),t._v("\n        "+t._s(t.stats.damaged_packages)+"\n      ")],1)],1)],1),t._v(" "),a("v-flex",{attrs:{xs12:"",md4:"","text-xs-center":""}},[a("v-card",{staticClass:"ma-1",attrs:{color:"blue-grey white--text",height:"150px"}},[a("v-card-text",{staticClass:"title",staticStyle:{"margin-left":"auto","margin-right":"auto",width:"150px",cursor:"pointer"},on:{click:function(e){t.$router.push({name:"repaired-reports"})}}},[a("v-icon",{attrs:{"x-large":"",color:"blue lighten-2"}},[t._v("\n          build\n        ")]),t._v(" "),a("v-subheader",{staticClass:"white--text"},[t._v("Repaired Items")]),t._v("\n        "+t._s(t.stats.repaired_packages)+"\n      ")],1)],1)],1)],1)},n=[];t.exports={render:a,staticRenderFns:n}},JRPR:function(t,e,a){var n=a("jTAZ");"string"==typeof n&&(n=[[t.i,n,""]]),n.locals&&(t.exports=n.locals);var r=a("rjj0")("19ca4adb",n,!0,{})},N76W:function(t,e,a){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var n=a("ockC"),r=a.n(n),i=a("5t+f"),s=a.n(i);e.default={components:{AppNavBar:r.a,LeftSideBar:s.a}}},NpIQ:function(t,e){e.f={}.propertyIsEnumerable},PS5i:function(t,e,a){function n(t){a("oud2")}var r,i,s,o=!1,c,l=null,u=null,v=a("VU/8")(a("EpMA"),a("qkTt"),!1,n,null,null);t.exports=v.exports},Qkdk:function(t,e,a){(e=t.exports=a("FZ+f")(!1)).push([t.i,".styleAvatar[data-v-9d2d5a76]{position:relative;margin-left:-55px}",""])},R4wc:function(t,e,a){var n=a("kM2E");n(n.S+n.F,"Object",{assign:a("To3L")})},RFxC:function(t,e,a){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var n=a("onlB"),r=a.n(n),i=a("B+0i"),s=a.n(i),o=a("mJy+"),c=a.n(o);e.default={components:{MainLayout:r.a,AdminDashPanel:s.a,CustomerDashPanel:c.a}}},T8Ha:function(t,e,a){var n,r,i,s=!1,o=null,c=null,l=null,u=a("VU/8")(a("RFxC"),a("x0QW"),!1,null,null,null);t.exports=u.exports},To3L:function(t,e,a){"use strict";var n=a("lktj"),r=a("1kS7"),i=a("NpIQ"),s=a("sB3e"),o=a("MU5D"),c=Object.assign;t.exports=!c||a("S82l")(function(){var t={},e={},a=Symbol(),n="abcdefghijklmnopqrst";return t[a]=7,n.split("").forEach(function(t){e[t]=t}),7!=c({},t)[a]||Object.keys(c({},e)).join("")!=n})?function t(e,a){for(var c=s(e),l=arguments.length,u=1,v=r.f,d=i.f;l>u;)for(var f=o(arguments[u++]),h=v?n(f).concat(v(f)):n(f),p=h.length,_=0,m;p>_;)d.call(f,m=h[_++])&&(c[m]=f[m]);return c}:c},UuFJ:function(t,e){var a=function(){var t=this,e=t.$createElement,a=t._self._c||e;return t.$auth.check("admin")?a("v-list",{staticClass:"blue-grey",attrs:{dark:""}},t._l(t.items,function(e){return a("v-list-group",{key:e.title,attrs:{"no-action":"","active-class":"accent--text"},model:{value:e.active,callback:function(a){t.$set(e,"active",a)},expression:"item.active"}},[a("v-list-tile",{attrs:{slot:"activator"},slot:"activator"},[a("v-list-tile-action",[a("v-icon",{attrs:{color:"white"}},[t._v(t._s(e.action))])],1),t._v(" "),a("v-list-tile-content",[a("v-list-tile-title",[t._v(t._s(e.title))])],1)],1),t._v(" "),t._l(e.items,function(e){return a("v-list-tile",{key:e.title,style:{color:t.isActive(e)?t.activeColor:t.linkColor},on:{click:function(a){t.loadview(e)}}},[a("v-list-tile-content",[a("v-list-tile-title",[t._v(t._s(e.title))])],1),t._v(" "),a("v-list-tile-action",[a("v-icon",{attrs:{color:t.isActive(e)?"teal":"white"}},[t._v(t._s(e.action))])],1)],1)})],2)})):t._e()},n=[];t.exports={render:a,staticRenderFns:n}},V3I1:function(t,e){var a=function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("v-list-tile",{class:[{styleAvatar:t.avatarOn}],attrs:{avatar:t.avatarOn},nativeOn:{click:function(e){t.navigate(t.href)}}},[t.iconOn&&!t.avatarOn?a("v-list-tile-action",[a("v-icon",{style:{color:t.isActive?t.activeColor:t.iconColor,cursor:t.href?"pointer":""}},[t._v(t._s(t.icon))])],1):t._e(),t._v(" "),t.iconOn&&t.avatarOn?a("v-list-tile-avatar",[a("img",{attrs:{src:t.avatar,alt:""}})]):t._e(),t._v(" "),a("v-list-tile-content",[a("v-list-tile-title",{style:{color:t.isActive?t.activeColor:t.linkColor}},[a("span",{style:{cursor:t.href?"pointer":""}},[t._v(t._s(t.title))])])],1),t._v(" "),t.iconOn&&t.avatarOn?a("v-list-tile-action",[a("v-icon",{style:{color:t.isActive?t.activeColor:t.iconColor,cursor:t.href?"pointer":""}},[t._v(t._s(t.icon))])],1):t._e()],1)},n=[];t.exports={render:a,staticRenderFns:n}},V3tA:function(t,e,a){a("R4wc"),t.exports=a("FeBl").Object.assign},VA5K:function(t,e,a){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default={data:function t(){return{activeColor:"#4DB6AC",linkColor:"#fffff",items:[{action:"card_membership",title:"Invoices",items:[{title:"Generate Invoice",href:"/invoices/generate",action:"schedule"},{title:"Invoices",href:"/invoices",action:"all_inbox"},{title:"Weekly Report",href:"/reports/total-all-customer-invoice",action:"picture_as_pdf"},{title:"Customer Invoice Report",href:"/reports/customer-invoice-report",action:"perm_contact_calendar"},{title:"Client Invoice Report",href:"/reports/client-invoice-report",action:"perm_identity"}]}]}},methods:{isActive:function t(e){return e.href===this.$route.path},loadview:function t(e){this.$router.push({path:""+e.href})}}}},bKDO:function(t,e,a){(e=t.exports=a("FZ+f")(!1)).push([t.i,"",""])},dK5C:function(t,e,a){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default={data:function t(){return{stats:{dsg_warehouse:null,dsg_receiving:null,dsg_archived:null,repaired_packages:null,damaged_packages:null,unknown_customer:null,unknown_client:null,undelivered:null}}},mounted:function t(){this.getStats()},methods:{getStats:function t(){var e=this;axios.post(route("api.dashboard.admin.getStats")).then(function(t){e.stats=t.data.data})}}}},deHX:function(t,e,a){function n(t){a("juyK")}var r,i,s,o=!1,c,l=null,u=null,v=a("VU/8")(a("VA5K"),a("UuFJ"),!1,n,null,null);t.exports=v.exports},eivZ:function(t,e,a){var n=a("8biF");"string"==typeof n&&(n=[[t.i,n,""]]),n.locals&&(t.exports=n.locals);var r=a("rjj0")("90a2a5ba",n,!0,{})},"f+SC":function(t,e,a){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default={props:{dark:{type:Boolean,default:function t(){return!1}},href:{type:String,required:!0},title:{type:String,required:!0},avatar:{type:String,default:function t(){return""}},icon:{type:String,default:function t(){return""}},iconColor:{type:String,default:function t(){return this.dark?"#fafafa":"#78909C"}},linkColor:{type:String,default:function t(){return this.dark?"#fafafa":"#e3b500"}},activeColor:{type:String,default:function t(){return"#f5c300"}}},computed:{isActive:function t(){return this.href===this.$route.path},isDark:function t(){return!0===this.dark},avatarOn:function t(){return!!this.avatar},iconOn:function t(){return!!this.icon}},methods:{navigate:function t(e){var a=this;this.isURL(e)?window.open(e):this.$router.push({path:""+e})},isURL:function t(e){var a,n=new RegExp("^(?!mailto:)(?:(?:http|https|ftp)://)(?:\\S+(?::\\S*)?@)?(?:(?:(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[0-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]+-?)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]+-?)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))|localhost)(?::\\d{2,5})?(?:(/|\\?|#)[^\\s]*)?$","i");return e.length<2083&&n.test(e)}}}},g4we:function(t,e,a){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default={data:function t(){return{extension:!1,showLogo:!1,logo:"/img/logo.png",showIcon:!1,title:"DSG Live"}},created:function t(){var e=this;Bus.$on("header-extension-visible",function(t){e.extension=t})},methods:{toggleDrawer:function t(){Bus.$emit("toggleDrawer")}}}},jTAZ:function(t,e,a){(e=t.exports=a("FZ+f")(!1)).push([t.i,"",""])},juyK:function(t,e,a){var n=a("r8er");"string"==typeof n&&(n=[[t.i,n,""]]),n.locals&&(t.exports=n.locals);var r=a("rjj0")("7fe0f36b",n,!0,{})},"mJy+":function(t,e,a){function n(t){a("6NYk")}var r,i,s,o=!1,c,l=null,u=null,v=a("VU/8")(a("/lvI"),a("+3vX"),!1,n,null,null);t.exports=v.exports},ockC:function(t,e,a){function n(t){a("JRPR")}var r,i,s,o=!1,c,l=null,u=null,v=a("VU/8")(a("g4we"),a("2xzx"),!1,n,null,null);t.exports=v.exports},onlB:function(t,e,a){var n,r,i,s=!1,o=null,c=null,l=null,u=a("VU/8")(a("N76W"),a("1zB9"),!1,null,null,null);t.exports=u.exports},oud2:function(t,e,a){var n=a("9qyG");"string"==typeof n&&(n=[[t.i,n,""]]),n.locals&&(t.exports=n.locals);var r=a("rjj0")("ad00c2fe",n,!0,{})},qd3n:function(t,e){var a=function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("v-navigation-drawer",{staticClass:"blue-grey",attrs:{clipped:t.$vuetify.breakpoint.width<=1264&&!0,fixed:"","hide-overlay":"",app:""},model:{value:t.drawer,callback:function(e){t.drawer=e},expression:"drawer"}},[a("v-list",{staticClass:"blue-grey",attrs:{dense:""}},[t.$auth.check("admin")?a("v-subheader",{staticClass:"white--text"},[t._v("Admin Area")]):t._e(),t._v(" "),t.$auth.check("warehouse")?a("v-subheader",{staticClass:"white--text"},[t._v("Warehouse Area")]):t._e(),t._v(" "),t.$auth.check("customer")?a("v-subheader",{staticClass:"white--text"},[t._v("Customer Area")]):t._e(),t._v(" "),t.$auth.check(["admin","customer","warehouse"])?a("v-link",{attrs:{title:"Dashboard",href:"/dashboard",icon:"fa-tachometer","link-color":"white","active-color":"#4db6ac","icon-color":"#fafafa"}}):t._e(),t._v(" "),t.$auth.check(["admin"])?a("v-link",{attrs:{title:"Tutorials",href:"/tutorials",icon:"movie","link-color":"white","active-color":"#4db6ac","icon-color":"#fafafa"}}):t._e(),t._v(" "),t.$auth.check("admin")?a("v-link",{attrs:{title:"Users",href:"/users",icon:"supervised_user_circle","link-color":"white","active-color":"#4db6ac","icon-color":"#fafafa"}}):t._e(),t._v(" "),t.$auth.check("admin")?a("v-link",{attrs:{title:"Shippers",href:"/shippers",icon:"fa-ship","link-color":"white","active-color":"#4db6ac","icon-color":"#fafafa"}}):t._e(),t._v(" "),t.$auth.check("admin")?a("v-link",{attrs:{title:"Rates",href:"/rates",icon:"attach_money","link-color":"white","active-color":"#4db6ac","icon-color":"#fafafa"}}):t._e(),t._v(" "),t.$auth.check("admin")?a("v-link",{attrs:{title:"Bins",href:"/bins",icon:"view_module","link-color":"white","active-color":"#4db6ac","icon-color":"#fafafa"}}):t._e(),t._v(" "),t.$auth.check(["warehouse","admin"])?a("v-link",{attrs:{title:"Warehouse",href:"/warehouse",icon:"location_city","link-color":"white","active-color":"#4db6ac","icon-color":"#fafafa"}}):t._e(),t._v(" "),t.$auth.check(["admin","warehouse"])?a("v-link",{attrs:{title:"Receiving",href:"/receiving",icon:"receipt","link-color":"white","active-color":"#4db6ac","icon-color":"#fafafa"}}):t._e(),t._v(" "),t.$auth.check(["admin","warehouse"])?a("v-link",{attrs:{title:"Archived",href:"/archived/dsg",icon:"archive","link-color":"white","active-color":"#4db6ac","icon-color":"#fafafa"}}):t._e(),t._v(" "),a("inventory-links"),t._v(" "),t.$auth.check("admin")?a("v-link",{attrs:{title:"Tickets",href:"/tickets",icon:"confirmation_number","link-color":"white","active-color":"#4db6ac","icon-color":"#fafafa"}}):t._e(),t._v(" "),t.$auth.check("admin")?a("v-link",{attrs:{title:"Miscellaneous",href:"/miscellaneous",icon:"note_add","link-color":"white","active-color":"#4db6ac","icon-color":"#fafafa"}}):t._e(),t._v(" "),t.$auth.check("admin")?a("v-link",{attrs:{title:"Payments",href:"/payments",icon:"attach_money","link-color":"white","active-color":"#4db6ac","icon-color":"#fafafa"}}):t._e(),t._v(" "),a("invoice-links"),t._v(" "),t.$auth.check(["customer"])?a("v-link",{attrs:{title:"Clients",href:"/clients",icon:"business_center","link-color":"white","active-color":"#4db6ac","icon-color":"#fafafa"}}):t._e(),t._v(" "),t.$auth.check(["customer"])?a("v-link",{attrs:{title:"Invoices",href:"/invoices",icon:"all_inbox","link-color":"white","active-color":"#4db6ac","icon-color":"#fafafa"}}):t._e(),t._v(" "),t.$auth.check()?a("v-link",{attrs:{title:"Settings",href:"/settings",icon:"fa-cogs","link-color":"white","active-color":"#4db6ac","icon-color":"#fafafa"}}):t._e(),t._v(" "),t.$auth.check()?a("v-link",{attrs:{title:"Logout",href:"/logout",icon:"power_settings_new","link-color":"white","active-color":"#4db6ac","icon-color":"#fafafa"}}):t._e()],1)],1)},n=[];t.exports={render:a,staticRenderFns:n}},qkTt:function(t,e){var a=function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("v-list",{staticClass:"blue-grey",attrs:{dark:""}},t._l(t.items,function(e){return a("v-list-group",{key:e.title,attrs:{"no-action":"","active-class":"accent--text"},model:{value:e.active,callback:function(a){t.$set(e,"active",a)},expression:"item.active"}},[a("v-list-tile",{attrs:{slot:"activator"},slot:"activator"},[a("v-list-tile-action",[a("v-icon",{attrs:{color:"white"}},[t._v(t._s(e.action))])],1),t._v(" "),a("v-list-tile-content",[a("v-list-tile-title",[t._v(t._s(e.title))])],1)],1),t._v(" "),t._l(e.items,function(e){return t.$auth.check(e.auth)?a("v-list-tile",{key:e.title,style:{color:t.isActive(e)?t.activeColor:t.linkColor},on:{click:function(a){t.loadview(e)}}},[a("v-list-tile-content",[a("v-list-tile-title",[t._v(t._s(e.title))])],1),t._v(" "),a("v-list-tile-action",[a("v-icon",{attrs:{color:t.isActive(e)?"teal":"white"}},[t._v(t._s(e.action))])],1)],1):t._e()})],2)}))},n=[];t.exports={render:a,staticRenderFns:n}},r8er:function(t,e,a){(e=t.exports=a("FZ+f")(!1)).push([t.i,".v-list__group__header__append-icon{color:#fff!important}",""])},rjj0:function(t,e,a){var n="undefined"!=typeof document;if("undefined"!=typeof DEBUG&&DEBUG&&!n)throw new Error("vue-style-loader cannot be used in a non-browser environment. Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.");var r=a("tTVk"),i={},s=n&&(document.head||document.getElementsByTagName("head")[0]),o=null,c=0,l=!1,u=function(){},v=null,d="data-vue-ssr-id",f="undefined"!=typeof navigator&&/msie [6-9]\b/.test(navigator.userAgent.toLowerCase());function h(t){for(var e=0;e<t.length;e++){var a=t[e],n=i[a.id];if(n){n.refs++;for(var r=0;r<n.parts.length;r++)n.parts[r](a.parts[r]);for(;r<a.parts.length;r++)n.parts.push(_(a.parts[r]));n.parts.length>a.parts.length&&(n.parts.length=a.parts.length)}else{for(var s=[],r=0;r<a.parts.length;r++)s.push(_(a.parts[r]));i[a.id]={id:a.id,refs:1,parts:s}}}}function p(){var t=document.createElement("style");return t.type="text/css",s.appendChild(t),t}function _(t){var e,a,n=document.querySelector("style["+d+'~="'+t.id+'"]');if(n){if(l)return u;n.parentNode.removeChild(n)}if(f){var r=c++;n=o||(o=p()),e=g.bind(null,n,r,!1),a=g.bind(null,n,r,!0)}else n=p(),e=k.bind(null,n),a=function(){n.parentNode.removeChild(n)};return e(t),function n(r){if(r){if(r.css===t.css&&r.media===t.media&&r.sourceMap===t.sourceMap)return;e(t=r)}else a()}}t.exports=function(t,e,a,n){l=a,v=n||{};var s=r(t,e);return h(s),function e(a){for(var n=[],o=0;o<s.length;o++){var c=s[o],l;(l=i[c.id]).refs--,n.push(l)}a?h(s=r(t,a)):s=[];for(var o=0;o<n.length;o++){var l;if(0===(l=n[o]).refs){for(var u=0;u<l.parts.length;u++)l.parts[u]();delete i[l.id]}}}};var m=(x=[],function(t,e){return x[t]=e,x.filter(Boolean).join("\n")}),x;function g(t,e,a,n){var r=a?"":n.css;if(t.styleSheet)t.styleSheet.cssText=m(e,r);else{var i=document.createTextNode(r),s=t.childNodes;s[e]&&t.removeChild(s[e]),s.length?t.insertBefore(i,s[e]):t.appendChild(i)}}function k(t,e){var a=e.css,n=e.media,r=e.sourceMap;if(n&&t.setAttribute("media",n),v.ssrId&&t.setAttribute(d,e.id),r&&(a+="\n/*# sourceURL="+r.sources[0]+" */",a+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(r))))+" */"),t.styleSheet)t.styleSheet.cssText=a;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(a))}}},tTVk:function(t,e){t.exports=function t(e,a){for(var n=[],r={},i=0;i<a.length;i++){var s=a[i],o=s[0],c,l,u,v={id:e+":"+i,css:s[1],media:s[2],sourceMap:s[3]};r[o]?r[o].parts.push(v):n.push(r[o]={id:o,parts:[v]})}return n}},woOf:function(t,e,a){t.exports={default:a("V3tA"),__esModule:!0}},x0QW:function(t,e){var a=function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("main-layout",[t.$auth.check(["admin","warehouse"])?a("admin-dash-panel"):t._e(),t._v(" "),t.$auth.check("customer")?a("customer-dash-panel"):t._e()],1)},n=[];t.exports={render:a,staticRenderFns:n}}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,